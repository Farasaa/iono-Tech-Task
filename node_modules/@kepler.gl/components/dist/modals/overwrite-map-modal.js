"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.OverwriteMapModal = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledComponents2 = require("../common/styled-components");

var _statusPanel = require("./status-panel");

var _localization = require("@kepler.gl/localization");

var _imageModalContainer = _interopRequireDefault(require("./image-modal-container"));

var _useCloudListProvider2 = require("../hooks/use-cloud-list-provider");

var _modal = require("../common/modal");

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var StyledMsg = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  margin-top: 24px;\n  font-size: 14px;\n"])));

var StyledTitle = _styledComponents["default"].span(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  font-weight: 600;\n  color: black;\n"])));

var StyledIcon = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  margin-top: 24px;\n"])));

var StyledOverwriteMapModal = (0, _styledComponents["default"])(_styledComponents2.CenterVerticalFlexbox)(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2["default"])(["\n  padding: 24px 12px;\n  min-height: 220px;\n"])));
var CONFIRM_BUTTON = {
  large: true,
  children: 'Yes',
  disabled: false
};

var OverwriteMapModalFactory = function OverwriteMapModalFactory() {
  /**
   * @type {React.FunctionComponent<OverwriteMapModalProps>}
   */
  var OverwriteMapModal = function OverwriteMapModal(_ref) {
    var mapSaved = _ref.mapSaved,
        title = _ref.title,
        isProviderLoading = _ref.isProviderLoading,
        onUpdateImageSetting = _ref.onUpdateImageSetting,
        cleanupExportImage = _ref.cleanupExportImage,
        onCancel = _ref.onCancel,
        onConfirm = _ref.onConfirm;

    var _useCloudListProvider = (0, _useCloudListProvider2.useCloudListProvider)(),
        provider = _useCloudListProvider.provider;

    var confirmButton = (0, _react.useMemo)(function () {
      return _objectSpread(_objectSpread({}, CONFIRM_BUTTON), {}, {
        disabled: !provider
      });
    }, [provider]);
    return /*#__PURE__*/_react["default"].createElement(_imageModalContainer["default"], {
      provider: provider,
      onUpdateImageSetting: onUpdateImageSetting,
      cleanupExportImage: cleanupExportImage
    }, /*#__PURE__*/_react["default"].createElement(StyledOverwriteMapModal, {
      className: "overwrite-map-modal"
    }, isProviderLoading ? /*#__PURE__*/_react["default"].createElement(StyledMsg, null, /*#__PURE__*/_react["default"].createElement(StyledTitle, null, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.overwriteMap.title'
    })), /*#__PURE__*/_react["default"].createElement(_statusPanel.UploadAnimation, {
      icon: provider && provider.icon
    })) : /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(StyledIcon, null, provider && provider.icon ? /*#__PURE__*/_react["default"].createElement(provider.icon, {
      height: "64px"
    }) : null), /*#__PURE__*/_react["default"].createElement(StyledMsg, {
      className: "overwrite-map-msg"
    }, /*#__PURE__*/_react["default"].createElement(StyledTitle, null, title, " "), /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.overwriteMap.alreadyExists',
      values: {
        mapSaved: mapSaved
      }
    })))), /*#__PURE__*/_react["default"].createElement(_modal.ModalFooter, {
      cancel: onCancel,
      confirm: function confirm() {
        return provider && onConfirm(provider);
      },
      confirmButton: confirmButton
    }));
  };

  return OverwriteMapModal;
};

var OverwriteMapModal = OverwriteMapModalFactory();
exports.OverwriteMapModal = OverwriteMapModal;
var _default = OverwriteMapModalFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RhbHMvb3ZlcndyaXRlLW1hcC1tb2RhbC50c3giXSwibmFtZXMiOlsiU3R5bGVkTXNnIiwic3R5bGVkIiwiZGl2IiwiU3R5bGVkVGl0bGUiLCJzcGFuIiwiU3R5bGVkSWNvbiIsIlN0eWxlZE92ZXJ3cml0ZU1hcE1vZGFsIiwiQ2VudGVyVmVydGljYWxGbGV4Ym94IiwiQ09ORklSTV9CVVRUT04iLCJsYXJnZSIsImNoaWxkcmVuIiwiZGlzYWJsZWQiLCJPdmVyd3JpdGVNYXBNb2RhbEZhY3RvcnkiLCJPdmVyd3JpdGVNYXBNb2RhbCIsIm1hcFNhdmVkIiwidGl0bGUiLCJpc1Byb3ZpZGVyTG9hZGluZyIsIm9uVXBkYXRlSW1hZ2VTZXR0aW5nIiwiY2xlYW51cEV4cG9ydEltYWdlIiwib25DYW5jZWwiLCJvbkNvbmZpcm0iLCJwcm92aWRlciIsImNvbmZpcm1CdXR0b24iLCJpY29uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUdDLDZCQUFPQyxHQUFWLGlJQUFmOztBQUtBLElBQU1DLFdBQVcsR0FBR0YsNkJBQU9HLElBQVYsZ0lBQWpCOztBQUtBLElBQU1DLFVBQVUsR0FBR0osNkJBQU9DLEdBQVYsK0dBQWhCOztBQUlBLElBQU1JLHVCQUF1QixHQUFHLGtDQUFPQyx3Q0FBUCxDQUFILHVJQUE3QjtBQWlCQSxJQUFNQyxjQUFjLEdBQUc7QUFDckJDLEVBQUFBLEtBQUssRUFBRSxJQURjO0FBRXJCQyxFQUFBQSxRQUFRLEVBQUUsS0FGVztBQUdyQkMsRUFBQUEsUUFBUSxFQUFFO0FBSFcsQ0FBdkI7O0FBTUEsSUFBTUMsd0JBQXdCLEdBQUcsU0FBM0JBLHdCQUEyQixHQUFNO0FBQ3JDO0FBQ0Y7QUFDQTtBQUNFLE1BQU1DLGlCQUFtRCxHQUFHLFNBQXREQSxpQkFBc0QsT0FRdEQ7QUFBQSxRQVBKQyxRQU9JLFFBUEpBLFFBT0k7QUFBQSxRQU5KQyxLQU1JLFFBTkpBLEtBTUk7QUFBQSxRQUxKQyxpQkFLSSxRQUxKQSxpQkFLSTtBQUFBLFFBSkpDLG9CQUlJLFFBSkpBLG9CQUlJO0FBQUEsUUFISkMsa0JBR0ksUUFISkEsa0JBR0k7QUFBQSxRQUZKQyxRQUVJLFFBRkpBLFFBRUk7QUFBQSxRQURKQyxTQUNJLFFBREpBLFNBQ0k7O0FBQUEsZ0NBQ2Usa0RBRGY7QUFBQSxRQUNHQyxRQURILHlCQUNHQSxRQURIOztBQUdKLFFBQU1DLGFBQWEsR0FBRyxvQkFDcEI7QUFBQSw2Q0FDS2QsY0FETDtBQUVFRyxRQUFBQSxRQUFRLEVBQUUsQ0FBQ1U7QUFGYjtBQUFBLEtBRG9CLEVBS3BCLENBQUNBLFFBQUQsQ0FMb0IsQ0FBdEI7QUFRQSx3QkFDRSxnQ0FBQywrQkFBRDtBQUNFLE1BQUEsUUFBUSxFQUFFQSxRQURaO0FBRUUsTUFBQSxvQkFBb0IsRUFBRUosb0JBRnhCO0FBR0UsTUFBQSxrQkFBa0IsRUFBRUM7QUFIdEIsb0JBS0UsZ0NBQUMsdUJBQUQ7QUFBeUIsTUFBQSxTQUFTLEVBQUM7QUFBbkMsT0FDR0YsaUJBQWlCLGdCQUNoQixnQ0FBQyxTQUFELHFCQUNFLGdDQUFDLFdBQUQscUJBQ0UsZ0NBQUMsOEJBQUQ7QUFBa0IsTUFBQSxFQUFFLEVBQUU7QUFBdEIsTUFERixDQURGLGVBSUUsZ0NBQUMsNEJBQUQ7QUFBaUIsTUFBQSxJQUFJLEVBQUVLLFFBQVEsSUFBSUEsUUFBUSxDQUFDRTtBQUE1QyxNQUpGLENBRGdCLGdCQVFoQiwrRUFDRSxnQ0FBQyxVQUFELFFBQ0dGLFFBQVEsSUFBSUEsUUFBUSxDQUFDRSxJQUFyQixnQkFBNEIsZ0NBQUMsUUFBRCxDQUFVLElBQVY7QUFBZSxNQUFBLE1BQU0sRUFBQztBQUF0QixNQUE1QixHQUE4RCxJQURqRSxDQURGLGVBSUUsZ0NBQUMsU0FBRDtBQUFXLE1BQUEsU0FBUyxFQUFDO0FBQXJCLG9CQUNFLGdDQUFDLFdBQUQsUUFBY1IsS0FBZCxNQURGLGVBRUUsZ0NBQUMsOEJBQUQ7QUFBa0IsTUFBQSxFQUFFLEVBQUUsa0NBQXRCO0FBQTBELE1BQUEsTUFBTSxFQUFFO0FBQUNELFFBQUFBLFFBQVEsRUFBUkE7QUFBRDtBQUFsRSxNQUZGLENBSkYsQ0FUSixDQUxGLGVBeUJFLGdDQUFDLGtCQUFEO0FBQ0UsTUFBQSxNQUFNLEVBQUVLLFFBRFY7QUFFRSxNQUFBLE9BQU8sRUFBRTtBQUFBLGVBQU1FLFFBQVEsSUFBSUQsU0FBUyxDQUFDQyxRQUFELENBQTNCO0FBQUEsT0FGWDtBQUdFLE1BQUEsYUFBYSxFQUFFQztBQUhqQixNQXpCRixDQURGO0FBaUNELEdBcEREOztBQXFEQSxTQUFPVCxpQkFBUDtBQUNELENBMUREOztBQTRETyxJQUFNQSxpQkFBaUIsR0FBR0Qsd0JBQXdCLEVBQWxEOztlQUNRQSx3QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge3VzZU1lbW99IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtDZW50ZXJWZXJ0aWNhbEZsZXhib3h9IGZyb20gJy4uL2NvbW1vbi9zdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQge1VwbG9hZEFuaW1hdGlvbn0gZnJvbSAnLi9zdGF0dXMtcGFuZWwnO1xuaW1wb3J0IHtGb3JtYXR0ZWRNZXNzYWdlfSBmcm9tICdAa2VwbGVyLmdsL2xvY2FsaXphdGlvbic7XG5pbXBvcnQgSW1hZ2VNb2RhbENvbnRhaW5lciwge0ltYWdlTW9kYWxDb250YWluZXJQcm9wc30gZnJvbSAnLi9pbWFnZS1tb2RhbC1jb250YWluZXInO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAnQGtlcGxlci5nbC9jbG91ZC1wcm92aWRlcnMnO1xuaW1wb3J0IHtjbGVhbnVwRXhwb3J0SW1hZ2UgYXMgY2xlYW51cEV4cG9ydEltYWdlQWN0aW9ufSBmcm9tICdAa2VwbGVyLmdsL2FjdGlvbnMnO1xuaW1wb3J0IHt1c2VDbG91ZExpc3RQcm92aWRlcn0gZnJvbSAnLi4vaG9va3MvdXNlLWNsb3VkLWxpc3QtcHJvdmlkZXInO1xuaW1wb3J0IHtNb2RhbEZvb3Rlcn0gZnJvbSAnLi4vY29tbW9uL21vZGFsJztcblxuY29uc3QgU3R5bGVkTXNnID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luLXRvcDogMjRweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuYDtcblxuY29uc3QgU3R5bGVkVGl0bGUgPSBzdHlsZWQuc3BhbmBcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6IGJsYWNrO1xuYDtcblxuY29uc3QgU3R5bGVkSWNvbiA9IHN0eWxlZC5kaXZgXG4gIG1hcmdpbi10b3A6IDI0cHg7XG5gO1xuXG5jb25zdCBTdHlsZWRPdmVyd3JpdGVNYXBNb2RhbCA9IHN0eWxlZChDZW50ZXJWZXJ0aWNhbEZsZXhib3gpYFxuICBwYWRkaW5nOiAyNHB4IDEycHg7XG4gIG1pbi1oZWlnaHQ6IDIyMHB4O1xuYDtcblxudHlwZSBPdmVyd3JpdGVNYXBNb2RhbFByb3BzID0ge1xuICBtYXBTYXZlZDogc3RyaW5nIHwgbnVsbDtcbiAgdGl0bGU6IHN0cmluZztcbiAgaXNQcm92aWRlckxvYWRpbmc6IGJvb2xlYW47XG5cbiAgLy8gY2FsbGJhY2tzXG4gIG9uVXBkYXRlSW1hZ2VTZXR0aW5nOiBJbWFnZU1vZGFsQ29udGFpbmVyUHJvcHNbJ29uVXBkYXRlSW1hZ2VTZXR0aW5nJ107XG4gIGNsZWFudXBFeHBvcnRJbWFnZTogdHlwZW9mIGNsZWFudXBFeHBvcnRJbWFnZUFjdGlvbjtcbiAgb25Db25maXJtOiAocHJvdmlkZXI6IFByb3ZpZGVyKSA9PiB2b2lkO1xuICBvbkNhbmNlbDogKCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENPTkZJUk1fQlVUVE9OID0ge1xuICBsYXJnZTogdHJ1ZSxcbiAgY2hpbGRyZW46ICdZZXMnLFxuICBkaXNhYmxlZDogZmFsc2Vcbn07XG5cbmNvbnN0IE92ZXJ3cml0ZU1hcE1vZGFsRmFjdG9yeSA9ICgpID0+IHtcbiAgLyoqXG4gICAqIEB0eXBlIHtSZWFjdC5GdW5jdGlvbkNvbXBvbmVudDxPdmVyd3JpdGVNYXBNb2RhbFByb3BzPn1cbiAgICovXG4gIGNvbnN0IE92ZXJ3cml0ZU1hcE1vZGFsOiBSZWFjdC5GQzxPdmVyd3JpdGVNYXBNb2RhbFByb3BzPiA9ICh7XG4gICAgbWFwU2F2ZWQsXG4gICAgdGl0bGUsXG4gICAgaXNQcm92aWRlckxvYWRpbmcsXG4gICAgb25VcGRhdGVJbWFnZVNldHRpbmcsXG4gICAgY2xlYW51cEV4cG9ydEltYWdlLFxuICAgIG9uQ2FuY2VsLFxuICAgIG9uQ29uZmlybVxuICB9KSA9PiB7XG4gICAgY29uc3Qge3Byb3ZpZGVyfSA9IHVzZUNsb3VkTGlzdFByb3ZpZGVyKCk7XG5cbiAgICBjb25zdCBjb25maXJtQnV0dG9uID0gdXNlTWVtbyhcbiAgICAgICgpID0+ICh7XG4gICAgICAgIC4uLkNPTkZJUk1fQlVUVE9OLFxuICAgICAgICBkaXNhYmxlZDogIXByb3ZpZGVyXG4gICAgICB9KSxcbiAgICAgIFtwcm92aWRlcl1cbiAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxJbWFnZU1vZGFsQ29udGFpbmVyXG4gICAgICAgIHByb3ZpZGVyPXtwcm92aWRlcn1cbiAgICAgICAgb25VcGRhdGVJbWFnZVNldHRpbmc9e29uVXBkYXRlSW1hZ2VTZXR0aW5nfVxuICAgICAgICBjbGVhbnVwRXhwb3J0SW1hZ2U9e2NsZWFudXBFeHBvcnRJbWFnZX1cbiAgICAgID5cbiAgICAgICAgPFN0eWxlZE92ZXJ3cml0ZU1hcE1vZGFsIGNsYXNzTmFtZT1cIm92ZXJ3cml0ZS1tYXAtbW9kYWxcIj5cbiAgICAgICAgICB7aXNQcm92aWRlckxvYWRpbmcgPyAoXG4gICAgICAgICAgICA8U3R5bGVkTXNnPlxuICAgICAgICAgICAgICA8U3R5bGVkVGl0bGU+XG4gICAgICAgICAgICAgICAgPEZvcm1hdHRlZE1lc3NhZ2UgaWQ9eydtb2RhbC5vdmVyd3JpdGVNYXAudGl0bGUnfSAvPlxuICAgICAgICAgICAgICA8L1N0eWxlZFRpdGxlPlxuICAgICAgICAgICAgICA8VXBsb2FkQW5pbWF0aW9uIGljb249e3Byb3ZpZGVyICYmIHByb3ZpZGVyLmljb259IC8+XG4gICAgICAgICAgICA8L1N0eWxlZE1zZz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgPFN0eWxlZEljb24+XG4gICAgICAgICAgICAgICAge3Byb3ZpZGVyICYmIHByb3ZpZGVyLmljb24gPyA8cHJvdmlkZXIuaWNvbiBoZWlnaHQ9XCI2NHB4XCIgLz4gOiBudWxsfVxuICAgICAgICAgICAgICA8L1N0eWxlZEljb24+XG4gICAgICAgICAgICAgIDxTdHlsZWRNc2cgY2xhc3NOYW1lPVwib3ZlcndyaXRlLW1hcC1tc2dcIj5cbiAgICAgICAgICAgICAgICA8U3R5bGVkVGl0bGU+e3RpdGxlfSA8L1N0eWxlZFRpdGxlPlxuICAgICAgICAgICAgICAgIDxGb3JtYXR0ZWRNZXNzYWdlIGlkPXsnbW9kYWwub3ZlcndyaXRlTWFwLmFscmVhZHlFeGlzdHMnfSB2YWx1ZXM9e3ttYXBTYXZlZH19IC8+XG4gICAgICAgICAgICAgIDwvU3R5bGVkTXNnPlxuICAgICAgICAgICAgPC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9TdHlsZWRPdmVyd3JpdGVNYXBNb2RhbD5cbiAgICAgICAgPE1vZGFsRm9vdGVyXG4gICAgICAgICAgY2FuY2VsPXtvbkNhbmNlbH1cbiAgICAgICAgICBjb25maXJtPXsoKSA9PiBwcm92aWRlciAmJiBvbkNvbmZpcm0ocHJvdmlkZXIpfVxuICAgICAgICAgIGNvbmZpcm1CdXR0b249e2NvbmZpcm1CdXR0b259XG4gICAgICAgIC8+XG4gICAgICA8L0ltYWdlTW9kYWxDb250YWluZXI+XG4gICAgKTtcbiAgfTtcbiAgcmV0dXJuIE92ZXJ3cml0ZU1hcE1vZGFsO1xufTtcblxuZXhwb3J0IGNvbnN0IE92ZXJ3cml0ZU1hcE1vZGFsID0gT3ZlcndyaXRlTWFwTW9kYWxGYWN0b3J5KCk7XG5leHBvcnQgZGVmYXVsdCBPdmVyd3JpdGVNYXBNb2RhbEZhY3Rvcnk7XG4iXX0=