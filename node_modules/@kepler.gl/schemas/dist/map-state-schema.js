"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.propertiesV1 = exports.propertiesV0 = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _versions = require("./versions");

var _schema = _interopRequireDefault(require("./schema"));

var _mapStateSchema;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// version v0
var propertiesV0 = {
  bearing: null,
  dragRotate: null,
  latitude: null,
  longitude: null,
  pitch: null,
  zoom: null
};
exports.propertiesV0 = propertiesV0;

var propertiesV1 = _objectSpread(_objectSpread({}, propertiesV0), {}, {
  isSplit: null,
  isViewportSynced: null,
  isZoomLocked: null,
  splitMapViewports: null
});

exports.propertiesV1 = propertiesV1;
var mapStateSchema = (_mapStateSchema = {}, (0, _defineProperty2["default"])(_mapStateSchema, _versions.VERSIONS.v0, new _schema["default"]({
  version: _versions.VERSIONS.v0,
  properties: propertiesV0,
  key: 'mapState'
})), (0, _defineProperty2["default"])(_mapStateSchema, _versions.VERSIONS.v1, new _schema["default"]({
  version: _versions.VERSIONS.v1,
  properties: propertiesV1,
  key: 'mapState'
})), _mapStateSchema);
var _default = mapStateSchema;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYXAtc3RhdGUtc2NoZW1hLnRzIl0sIm5hbWVzIjpbInByb3BlcnRpZXNWMCIsImJlYXJpbmciLCJkcmFnUm90YXRlIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJwaXRjaCIsInpvb20iLCJwcm9wZXJ0aWVzVjEiLCJpc1NwbGl0IiwiaXNWaWV3cG9ydFN5bmNlZCIsImlzWm9vbUxvY2tlZCIsInNwbGl0TWFwVmlld3BvcnRzIiwibWFwU3RhdGVTY2hlbWEiLCJWRVJTSU9OUyIsInYwIiwiU2NoZW1hIiwidmVyc2lvbiIsInByb3BlcnRpZXMiLCJrZXkiLCJ2MSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7Ozs7Ozs7QUFFQTtBQUNPLElBQU1BLFlBQVksR0FBRztBQUMxQkMsRUFBQUEsT0FBTyxFQUFFLElBRGlCO0FBRTFCQyxFQUFBQSxVQUFVLEVBQUUsSUFGYztBQUcxQkMsRUFBQUEsUUFBUSxFQUFFLElBSGdCO0FBSTFCQyxFQUFBQSxTQUFTLEVBQUUsSUFKZTtBQUsxQkMsRUFBQUEsS0FBSyxFQUFFLElBTG1CO0FBTTFCQyxFQUFBQSxJQUFJLEVBQUU7QUFOb0IsQ0FBckI7OztBQVNBLElBQU1DLFlBQVksbUNBQ3BCUCxZQURvQjtBQUV2QlEsRUFBQUEsT0FBTyxFQUFFLElBRmM7QUFHdkJDLEVBQUFBLGdCQUFnQixFQUFFLElBSEs7QUFJdkJDLEVBQUFBLFlBQVksRUFBRSxJQUpTO0FBS3ZCQyxFQUFBQSxpQkFBaUIsRUFBRTtBQUxJLEVBQWxCOzs7QUFRUCxJQUFNQyxjQUFjLDRFQUNqQkMsbUJBQVNDLEVBRFEsRUFDSCxJQUFJQyxrQkFBSixDQUFXO0FBQ3hCQyxFQUFBQSxPQUFPLEVBQUVILG1CQUFTQyxFQURNO0FBRXhCRyxFQUFBQSxVQUFVLEVBQUVqQixZQUZZO0FBR3hCa0IsRUFBQUEsR0FBRyxFQUFFO0FBSG1CLENBQVgsQ0FERyxxREFNakJMLG1CQUFTTSxFQU5RLEVBTUgsSUFBSUosa0JBQUosQ0FBVztBQUN4QkMsRUFBQUEsT0FBTyxFQUFFSCxtQkFBU00sRUFETTtBQUV4QkYsRUFBQUEsVUFBVSxFQUFFVixZQUZZO0FBR3hCVyxFQUFBQSxHQUFHLEVBQUU7QUFIbUIsQ0FBWCxDQU5HLG1CQUFwQjtlQWFlTixjIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IHtWRVJTSU9OU30gZnJvbSAnLi92ZXJzaW9ucyc7XG5pbXBvcnQgU2NoZW1hIGZyb20gJy4vc2NoZW1hJztcblxuLy8gdmVyc2lvbiB2MFxuZXhwb3J0IGNvbnN0IHByb3BlcnRpZXNWMCA9IHtcbiAgYmVhcmluZzogbnVsbCxcbiAgZHJhZ1JvdGF0ZTogbnVsbCxcbiAgbGF0aXR1ZGU6IG51bGwsXG4gIGxvbmdpdHVkZTogbnVsbCxcbiAgcGl0Y2g6IG51bGwsXG4gIHpvb206IG51bGxcbn07XG5cbmV4cG9ydCBjb25zdCBwcm9wZXJ0aWVzVjEgPSB7XG4gIC4uLnByb3BlcnRpZXNWMCxcbiAgaXNTcGxpdDogbnVsbCxcbiAgaXNWaWV3cG9ydFN5bmNlZDogbnVsbCxcbiAgaXNab29tTG9ja2VkOiBudWxsLFxuICBzcGxpdE1hcFZpZXdwb3J0czogbnVsbFxufTtcblxuY29uc3QgbWFwU3RhdGVTY2hlbWEgPSB7XG4gIFtWRVJTSU9OUy52MF06IG5ldyBTY2hlbWEoe1xuICAgIHZlcnNpb246IFZFUlNJT05TLnYwLFxuICAgIHByb3BlcnRpZXM6IHByb3BlcnRpZXNWMCxcbiAgICBrZXk6ICdtYXBTdGF0ZSdcbiAgfSksXG4gIFtWRVJTSU9OUy52MV06IG5ldyBTY2hlbWEoe1xuICAgIHZlcnNpb246IFZFUlNJT05TLnYxLFxuICAgIHByb3BlcnRpZXM6IHByb3BlcnRpZXNWMSxcbiAgICBrZXk6ICdtYXBTdGF0ZSdcbiAgfSlcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1hcFN0YXRlU2NoZW1hO1xuIl19