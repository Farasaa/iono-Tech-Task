{"version":3,"sources":["../../../../src/encoders/video/gif-encoder.js"],"names":["GIFBuilder","FrameEncoder","GifEncoder","constructor","settings","mimeType","extension","gifBuilder","options","gif","width","height","numWorkers","sampleInterval","source","start","bind","add","save","interval","framerate","canvas","dataUrl","toDataURL","build"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,mBAAzB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,eAAe,MAAMC,UAAN,SAAyBD,YAAzB,CAAsC;AAEnDE,EAAAA,WAAW,CAACC,QAAD,EAAW;AACpB,UAAMA,QAAN;AACA,SAAKC,QAAL,GAAgB,WAAhB;AACA,SAAKC,SAAL,GAAiB,MAAjB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,OAAL,GAAe,EAAf;;AAEA,QAAIJ,QAAQ,CAACK,GAAb,EAAkB;AAChB,WAAKD,OAAL,GAAeJ,QAAQ,CAACK,GAAxB;AACD;;AAED,SAAKD,OAAL,CAAaE,KAAb,GAAqB,KAAKF,OAAL,CAAaE,KAAb,IAAsB,GAA3C;AACA,SAAKF,OAAL,CAAaG,MAAb,GAAsB,KAAKH,OAAL,CAAaG,MAAb,IAAuB,GAA7C;AACA,SAAKH,OAAL,CAAaI,UAAb,GAA0B,KAAKJ,OAAL,CAAaI,UAAb,IAA2B,CAArD;AACA,SAAKJ,OAAL,CAAaK,cAAb,GAA8B,KAAKL,OAAL,CAAaK,cAAb,IAA+B,EAA7D;AAGA,SAAKC,MAAL,GAAc,QAAd;AAEA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,GAAL,GAAW,KAAKA,GAAL,CAASD,IAAT,CAAc,IAAd,CAAX;AACA,SAAKE,IAAL,GAAY,KAAKA,IAAL,CAAUF,IAAV,CAAe,IAAf,CAAZ;AACD;;AAEDD,EAAAA,KAAK,GAAG;AACN,SAAKR,UAAL,GAAkB,IAAIP,UAAJ,CAAe;AAC/Bc,MAAAA,MAAM,EAAE,KAAKA,MADkB;AAE/B,SAAG,KAAKN,OAFuB;AAG/BW,MAAAA,QAAQ,EAAE,IAAI,KAAKC;AAHY,KAAf,CAAlB;AAKD;;AAGD,QAAMH,GAAN,CAAUI,MAAV,EAAkB;AAChB,QAAI,KAAKP,MAAL,KAAgB,QAApB,EAA8B;AAC5B,YAAMQ,OAAO,GAAGD,MAAM,CAACE,SAAP,CAAiB,YAAjB,EAA+B,GAA/B,CAAhB;AACA,YAAM,KAAKhB,UAAL,CAAgBU,GAAhB,CAAoBK,OAApB,CAAN;AACD;AACF;;AAED,QAAMJ,IAAN,GAAa;AACX,WAAO,KAAKX,UAAL,CAAgBiB,KAAhB,EAAP;AACD;;AA5CkD","sourcesContent":["import {GIFBuilder} from '@loaders.gl/video';\nimport FrameEncoder from '../frame-encoder';\n\nexport default class GifEncoder extends FrameEncoder {\n  /** @param {import('types').FrameEncoderSettings} settings */\n  constructor(settings) {\n    super(settings);\n    this.mimeType = 'image/gif';\n    this.extension = '.gif';\n    this.gifBuilder = null;\n    this.options = {};\n\n    if (settings.gif) {\n      this.options = settings.gif;\n    }\n\n    this.options.width = this.options.width || 720;\n    this.options.height = this.options.height || 480;\n    this.options.numWorkers = this.options.numWorkers || 4;\n    this.options.sampleInterval = this.options.sampleInterval || 10;\n\n    // this.source = settings.source\n    this.source = 'images';\n\n    this.start = this.start.bind(this);\n    this.add = this.add.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  start() {\n    this.gifBuilder = new GIFBuilder({\n      source: this.source,\n      ...this.options,\n      interval: 1 / this.framerate\n    });\n  }\n\n  /** @param {HTMLCanvasElement} canvas */\n  async add(canvas) {\n    if (this.source === 'images') {\n      const dataUrl = canvas.toDataURL('image/jpeg', 0.8);\n      await this.gifBuilder.add(dataUrl);\n    }\n  }\n\n  async save() {\n    return this.gifBuilder.build();\n  }\n}\n"],"file":"gif-encoder.js"}