{"version":3,"file":"video-capture.js","names":["download","FrameEncoder","guid","VideoCapture","constructor","recording","capturing","timeMs","timecode","encoder","filename","_getNextTimeMs","bind","_step","_capture","capture","render","stop","_save","isRecording","Encoder","formatConfigs","undefined","onStop","console","time","_sanitizeFilename","_sanatizeTimecode","log","duration","framerate","start","canvas","proceedToNextFrame","then","data","kind","nextTimeMs","onComplete","onSave","onStopped","abort","timeEnd","finish","blob","extension","mimeType","callback","save","parsedTimecode","end","Error","error","add","catch","reason","frameLengthMs","Math","floor"],"sources":["../../../src/capture/video-capture.js"],"sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable no-console */\nimport download from 'downloadjs';\n// eslint-disable-next-line no-unused-vars\nimport {FrameEncoder} from '../encoders';\nimport {guid} from './utils';\n\nexport class VideoCapture {\n  /** @type {boolean} - True if recording new canvas frames, false when saving, idle, etc. */\n  recording;\n  /** @type {boolean} - True when working on a image frame capture. */\n  capturing;\n  /** @type {number} */\n  timeMs;\n  /** @type {{start: number, end: number, duration: number, framerate: number}} */\n  timecode;\n  /** @type {FrameEncoder} */\n  encoder;\n  /** @type {string} */\n  filename;\n\n  constructor() {\n    this.recording = false;\n    this.capturing = false;\n    this.timeMs = 0;\n    this.timecode = null;\n    this.encoder = null;\n    this.filename = null;\n\n    this._getNextTimeMs = this._getNextTimeMs.bind(this);\n    this._step = this._step.bind(this);\n    this._capture = this._capture.bind(this);\n    this.capture = this.capture.bind(this);\n    this.render = this.render.bind(this);\n    this.download = this.download.bind(this);\n    this.stop = this.stop.bind(this);\n    this._save = this._save.bind(this);\n  }\n\n  isRecording() {\n    return this.recording;\n  }\n\n  /**\n   * Start recording.\n   * @param {Object} params\n   * @param {typeof FrameEncoder} params.Encoder\n   * @param {import('types').FormatConfigs} params.formatConfigs\n   * @param {{start: number, end: number, framerate: number, duration?: number}} params.timecode\n   * @param {() => void} params.onStop\n   */\n  render({Encoder, formatConfigs, timecode, filename = undefined, onStop = undefined}) {\n    if (!this.isRecording()) {\n      console.time('render');\n      this.filename = this._sanitizeFilename(filename);\n      this.timecode = this._sanatizeTimecode(timecode);\n      console.log(`Starting recording for ${this.timecode.duration}ms.`);\n      this.onStop = onStop;\n      this.encoder = new Encoder({...formatConfigs, framerate: this.timecode.framerate});\n      this.recording = true;\n      this.encoder.start();\n    }\n  }\n\n  /**\n   * Capture a frame of the canvas.\n   * @param {(nextTimeMs: number) => void} proceedToNextFrame\n   */\n  capture(canvas, proceedToNextFrame) {\n    if (!this.capturing && this.isRecording()) {\n      this.capturing = true;\n      // capture canvas\n      this._capture(canvas).then(data => {\n        this.capturing = false;\n        if (data.kind === 'next-frame') {\n          proceedToNextFrame(data.nextTimeMs);\n        } else if (data.kind === 'stop') {\n          this.onStop();\n        } else {\n          console.log(data);\n        }\n      });\n    }\n  }\n\n  /**\n   * Stop and save recording. Execute onComplete when finished.\n   * @param {Object} params\n   * @param {() => void} params.onStopped\n   * @param {(blob: Blob) => void} params.onSave\n   * @param {() => void} params.onComplete\n   * @param {boolean} [params.abort]\n   */\n  stop({onComplete = undefined, onSave = undefined, onStopped = undefined, abort = false}) {\n    if (this.isRecording()) {\n      console.log(`Stopped recording. Recorded for ${this.timeMs}ms.`);\n      this.recording = false;\n      this.capturing = false;\n      if (onStopped) {\n        onStopped();\n      }\n      console.timeEnd('render');\n      const finish = () => {\n        if (onComplete) {\n          // eslint-disable-next-line callback-return\n          onComplete();\n        }\n        this.timecode = null;\n        this.onStop = undefined;\n      };\n      if (!abort) {\n        this._save(onSave).then(finish);\n      }\n      finish();\n    }\n  }\n\n  /**\n   * @param {Blob} blob\n   */\n\n  download(blob) {\n    if (blob) {\n      download(blob, this.filename + this.encoder.extension, this.encoder.mimeType);\n    }\n    return false;\n  }\n\n  /**\n   * @param { (blob: Blob) => void } callback\n   */\n  async _save(callback) {\n    if (!callback) {\n      callback = this.download;\n    }\n    console.time('save');\n    await this.encoder\n      .save()\n      .then(callback)\n      .then(() => console.timeEnd('save'));\n  }\n\n  /**\n   * @param {string} filename\n   */\n  _sanitizeFilename(filename) {\n    if (!filename) {\n      filename = guid();\n    }\n    return filename;\n  }\n\n  /**\n   * @param {{start: number, end: number, framerate: number, duration?: number}} timecode\n   */\n  _sanatizeTimecode(timecode) {\n    const parsedTimecode = {\n      duration: undefined,\n      ...timecode\n    };\n\n    if (!parsedTimecode.start) {\n      parsedTimecode.start = 0;\n    }\n    this.timeMs = parsedTimecode.start;\n\n    if (!parsedTimecode.duration) {\n      parsedTimecode.duration = parsedTimecode.end - parsedTimecode.start;\n    }\n\n    if (parsedTimecode.duration <= 0) {\n      throw new Error(\n        `Invalid recording length (${parsedTimecode.duration}ms).  Must be greater than 0.`\n      );\n    }\n    return parsedTimecode;\n  }\n\n  /**\n   * Capture the current canvas.\n   * @param {HTMLCanvasElement} canvas\n   * @returns {Promise<import('types').CaptureStep>}\n   */\n  async _capture(canvas) {\n    // console.log('video-capture');\n    if (!this.isRecording()) {\n      return {kind: 'error', error: 'NOT_RECORDING'};\n    }\n    // getting blob from canvas\n    return await this.encoder\n      .add(canvas)\n      .then(this._step)\n      .catch(reason => ({kind: 'error', error: reason}));\n  }\n\n  /**\n   * @returns {import('types').CaptureStep}\n   */\n  _step() {\n    // generating next frame timestamp\n    const nextTimeMs = this._getNextTimeMs();\n    if (nextTimeMs > this.timecode.end) {\n      return {kind: 'stop'};\n    }\n    this.timeMs = nextTimeMs;\n    return {kind: 'next-frame', nextTimeMs};\n  }\n\n  // Get next time MS based on current time MS and framerate\n  // @return time in milliseconds for next frame.\n  _getNextTimeMs() {\n    const frameLengthMs = Math.floor(1000.0 / this.timecode.framerate);\n    return this.timeMs + frameLengthMs;\n  }\n}\n"],"mappings":"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"}