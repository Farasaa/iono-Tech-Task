{"version":3,"file":"make-table-from-batches.js","names":["getTableLength","makeBatchesFromTable","table","makeBatchFromTable","length","batchType","makeTableFromBatches","batchIterator","arrayRows","objectRows","features","shape","schema","batch","rowIndex","row","data","push","Error","type"],"sources":["../../../../src/lib/table/simple-table/make-table-from-batches.ts"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  TableBatch,\n  Table,\n  Schema,\n  ObjectRowTable,\n  ArrayRowTable,\n  Feature\n} from '@loaders.gl/schema';\nimport {getTableLength} from '@loaders.gl/schema';\n\n/**\n * Returns an iterator that yields a single table as a sequence of batches.\n * @note Currently only a single batch is yielded.\n * @note All batches will have the same shape and schema as the original table.\n * @returns\n */\nexport function* makeBatchesFromTable(table: Table): IterableIterator<TableBatch> {\n  yield makeBatchFromTable(table);\n}\n\n/**\n * Returns a table packaged as a single table batch\n * @note The batch will have the same shape and schema as the original table.\n * @returns `null` if no batches are yielded by the async iterator\n */\nexport function makeBatchFromTable(table: Table): TableBatch {\n  return {...table, length: getTableLength(table), batchType: 'data'};\n}\n\n/**\n * Assembles all batches from an async iterator into a single table.\n * @note All batches must have the same shape and schema\n * @param batchIterator\n * @returns `null` if no batches are yielded by the async iterator\n */\n// eslint-disable-next-line complexity\nexport async function makeTableFromBatches(\n  batchIterator: AsyncIterable<TableBatch> | Iterable<TableBatch>\n): Promise<Table | null> {\n  let arrayRows: ArrayRowTable['data'];\n  let objectRows: ObjectRowTable['data'];\n  let features: Feature[];\n  let shape: Table['shape'] | null = null;\n  let schema: Schema | undefined;\n\n  for await (const batch of batchIterator) {\n    shape = shape || batch.shape;\n    schema = schema || batch.schema;\n\n    switch (batch.shape) {\n      case 'array-row-table':\n        arrayRows = arrayRows! || [];\n        for (let rowIndex = 0; rowIndex < getTableLength(batch); rowIndex++) {\n          const row = batch.data[rowIndex];\n          arrayRows.push(row);\n        }\n        break;\n\n      case 'object-row-table':\n        objectRows = objectRows! || [];\n        for (let rowIndex = 0; rowIndex < getTableLength(batch); rowIndex++) {\n          const row = batch.data[rowIndex];\n          objectRows.push(row);\n        }\n        break;\n\n      case 'geojson-table':\n        features = features! || [];\n        for (let rowIndex = 0; rowIndex < getTableLength(batch); rowIndex++) {\n          const row = batch.features[rowIndex];\n          features.push(row);\n        }\n        break;\n\n      case 'columnar-table':\n      case 'arrow-table':\n      default:\n        throw new Error('shape');\n    }\n  }\n\n  if (!shape) {\n    return null;\n  }\n\n  switch (shape) {\n    case 'array-row-table':\n      return {shape: 'array-row-table', data: arrayRows!, schema};\n\n    case 'object-row-table':\n      return {shape: 'object-row-table', data: objectRows!, schema};\n\n    case 'geojson-table':\n      return {shape: 'geojson-table', type: 'FeatureCollection', features: features!, schema};\n\n    default:\n      return null;\n  }\n}\n"],"mappings":"AAYA,SAAQA,cAAc,QAAO,oBAAoB;AAQjD,OAAO,UAAUC,oBAAoBA,CAACC,KAAY,EAAgC;EAChF,MAAMC,kBAAkB,CAACD,KAAK,CAAC;AACjC;AAOA,OAAO,SAASC,kBAAkBA,CAACD,KAAY,EAAc;EAC3D,OAAO;IAAC,GAAGA,KAAK;IAAEE,MAAM,EAAEJ,cAAc,CAACE,KAAK,CAAC;IAAEG,SAAS,EAAE;EAAM,CAAC;AACrE;AASA,OAAO,eAAeC,oBAAoBA,CACxCC,aAA+D,EACxC;EACvB,IAAIC,SAAgC;EACpC,IAAIC,UAAkC;EACtC,IAAIC,QAAmB;EACvB,IAAIC,KAA4B,GAAG,IAAI;EACvC,IAAIC,MAA0B;EAE9B,WAAW,MAAMC,KAAK,IAAIN,aAAa,EAAE;IACvCI,KAAK,GAAGA,KAAK,IAAIE,KAAK,CAACF,KAAK;IAC5BC,MAAM,GAAGA,MAAM,IAAIC,KAAK,CAACD,MAAM;IAE/B,QAAQC,KAAK,CAACF,KAAK;MACjB,KAAK,iBAAiB;QACpBH,SAAS,GAAGA,SAAS,IAAK,EAAE;QAC5B,KAAK,IAAIM,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGd,cAAc,CAACa,KAAK,CAAC,EAAEC,QAAQ,EAAE,EAAE;UACnE,MAAMC,GAAG,GAAGF,KAAK,CAACG,IAAI,CAACF,QAAQ,CAAC;UAChCN,SAAS,CAACS,IAAI,CAACF,GAAG,CAAC;QACrB;QACA;MAEF,KAAK,kBAAkB;QACrBN,UAAU,GAAGA,UAAU,IAAK,EAAE;QAC9B,KAAK,IAAIK,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGd,cAAc,CAACa,KAAK,CAAC,EAAEC,QAAQ,EAAE,EAAE;UACnE,MAAMC,GAAG,GAAGF,KAAK,CAACG,IAAI,CAACF,QAAQ,CAAC;UAChCL,UAAU,CAACQ,IAAI,CAACF,GAAG,CAAC;QACtB;QACA;MAEF,KAAK,eAAe;QAClBL,QAAQ,GAAGA,QAAQ,IAAK,EAAE;QAC1B,KAAK,IAAII,QAAQ,GAAG,CAAC,EAAEA,QAAQ,GAAGd,cAAc,CAACa,KAAK,CAAC,EAAEC,QAAQ,EAAE,EAAE;UACnE,MAAMC,GAAG,GAAGF,KAAK,CAACH,QAAQ,CAACI,QAAQ,CAAC;UACpCJ,QAAQ,CAACO,IAAI,CAACF,GAAG,CAAC;QACpB;QACA;MAEF,KAAK,gBAAgB;MACrB,KAAK,aAAa;MAClB;QACE,MAAM,IAAIG,KAAK,CAAC,OAAO,CAAC;IAC5B;EACF;EAEA,IAAI,CAACP,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EAEA,QAAQA,KAAK;IACX,KAAK,iBAAiB;MACpB,OAAO;QAACA,KAAK,EAAE,iBAAiB;QAAEK,IAAI,EAAER,SAAU;QAAEI;MAAM,CAAC;IAE7D,KAAK,kBAAkB;MACrB,OAAO;QAACD,KAAK,EAAE,kBAAkB;QAAEK,IAAI,EAAEP,UAAW;QAAEG;MAAM,CAAC;IAE/D,KAAK,eAAe;MAClB,OAAO;QAACD,KAAK,EAAE,eAAe;QAAEQ,IAAI,EAAE,mBAAmB;QAAET,QAAQ,EAAEA,QAAS;QAAEE;MAAM,CAAC;IAEzF;MACE,OAAO,IAAI;EACf;AACF"}