{"version":3,"file":"gif-encoder.js","names":["GifEncoder","settings","mimeType","extension","gifBuilder","options","gif","width","height","numWorkers","sampleInterval","jpegQuality","source","start","bind","add","save","GIFBuilder","interval","framerate","canvas","dataUrl","toDataURL","fetch","build","then","res","blob","FrameEncoder"],"sources":["../../../../src/encoders/video/gif-encoder.js"],"sourcesContent":["import {GIFBuilder} from '@loaders.gl/video';\nimport FrameEncoder from '../frame-encoder';\n\nexport default class GifEncoder extends FrameEncoder {\n  /**\n   * @type {{width: number, height: number, numWorkers: number, sampleInterval: number, jpegQuality: number}}\n   */\n  options;\n\n  /** @param {import('types').FrameEncoderSettings} settings */\n  constructor(settings) {\n    super(settings);\n    this.mimeType = 'image/gif';\n    this.extension = '.gif';\n    this.gifBuilder = null;\n    this.options = {};\n\n    if (settings.gif) {\n      this.options = {...settings.gif};\n    }\n\n    this.options.width = this.options.width || 720;\n    this.options.height = this.options.height || 480;\n    this.options.numWorkers = this.options.numWorkers || 4;\n    this.options.sampleInterval = this.options.sampleInterval || 10;\n    this.options.jpegQuality = this.options.jpegQuality || 1.0;\n\n    // this.source = settings.source\n    this.source = 'images';\n\n    this.start = this.start.bind(this);\n    this.add = this.add.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  start() {\n    this.gifBuilder = new GIFBuilder({\n      source: this.source,\n      ...this.options,\n      interval: 1 / this.framerate\n    });\n  }\n\n  /** @param {HTMLCanvasElement} canvas */\n  async add(canvas) {\n    if (this.source === 'images') {\n      const dataUrl = canvas.toDataURL('image/jpeg', this.options.jpegQuality);\n      await this.gifBuilder.add(dataUrl);\n    }\n  }\n\n  /**\n   * @return {Promise<Blob>}\n   */\n  async save() {\n    return fetch(await this.gifBuilder.build()).then(res => res.blob());\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;IAEqBA,U;;;;;EAOnB,oBAAYC,QAAZ,EAAsB;IAAA;;IAAA;IACpB,0BAAMA,QAAN;IADoB;IAEpB,MAAKC,QAAL,GAAgB,WAAhB;IACA,MAAKC,SAAL,GAAiB,MAAjB;IACA,MAAKC,UAAL,GAAkB,IAAlB;IACA,MAAKC,OAAL,GAAe,EAAf;;IAEA,IAAIJ,QAAQ,CAACK,GAAb,EAAkB;MAChB,MAAKD,OAAL,qBAAmBJ,QAAQ,CAACK,GAA5B;IACD;;IAED,MAAKD,OAAL,CAAaE,KAAb,GAAqB,MAAKF,OAAL,CAAaE,KAAb,IAAsB,GAA3C;IACA,MAAKF,OAAL,CAAaG,MAAb,GAAsB,MAAKH,OAAL,CAAaG,MAAb,IAAuB,GAA7C;IACA,MAAKH,OAAL,CAAaI,UAAb,GAA0B,MAAKJ,OAAL,CAAaI,UAAb,IAA2B,CAArD;IACA,MAAKJ,OAAL,CAAaK,cAAb,GAA8B,MAAKL,OAAL,CAAaK,cAAb,IAA+B,EAA7D;IACA,MAAKL,OAAL,CAAaM,WAAb,GAA2B,MAAKN,OAAL,CAAaM,WAAb,IAA4B,GAAvD;IAGA,MAAKC,MAAL,GAAc,QAAd;IAEA,MAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,6CAAb;IACA,MAAKC,GAAL,GAAW,MAAKA,GAAL,CAASD,IAAT,6CAAX;IACA,MAAKE,IAAL,GAAY,MAAKA,IAAL,CAAUF,IAAV,6CAAZ;IAtBoB;EAuBrB;;;;WAED,iBAAQ;MACN,KAAKV,UAAL,GAAkB,IAAIa,iBAAJ;QAChBL,MAAM,EAAE,KAAKA;MADG,GAEb,KAAKP,OAFQ;QAGhBa,QAAQ,EAAE,IAAI,KAAKC;MAHH,GAAlB;IAKD;;;;2EAGD,iBAAUC,MAAV;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,MACM,KAAKR,MAAL,KAAgB,QADtB;kBAAA;kBAAA;gBAAA;;gBAEUS,OAFV,GAEoBD,MAAM,CAACE,SAAP,CAAiB,YAAjB,EAA+B,KAAKjB,OAAL,CAAaM,WAA5C,CAFpB;gBAAA;gBAAA,OAGU,KAAKP,UAAL,CAAgBW,GAAhB,CAAoBM,OAApB,CAHV;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;4EAUA;QAAA;UAAA;YAAA;cAAA;gBAAA,eACSE,KADT;gBAAA;gBAAA,OACqB,KAAKnB,UAAL,CAAgBoB,KAAhB,EADrB;;cAAA;gBAAA;gBAAA,kEAC8CC,IAD9C,CACmD,UAAAC,GAAG;kBAAA,OAAIA,GAAG,CAACC,IAAJ,EAAJ;gBAAA,CADtD;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;EAnDsCC,qB"}