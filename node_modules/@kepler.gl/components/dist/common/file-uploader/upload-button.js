"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject;

var Wrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: inline-block;\n  color: ", ";\n  font-size: 12px;\n  text-decoration: underline;\n\n  :hover {\n    cursor: pointer;\n    font-weight: 500;\n  }\n"])), function (props) {
  return props.theme.textColorLT;
});

var inputStyle = {
  display: 'none'
};

/*
Inspired by https://github.com/okonet/react-dropzone/blob/master/src/index.js
*/

/** @type {typeof import('./upload-button').UploadButton} */
var UploadButton = function UploadButton(_ref) {
  var onUpload = _ref.onUpload,
      children = _ref.children;

  var _fileInput = (0, _react.useRef)(null);

  var _onClick = (0, _react.useCallback)(function () {
    if (_fileInput.current) {
      // @ts-ignore create ref with useRef<HTMLInputElement>
      _fileInput.current.value = null; // @ts-ignore create ref with useRef<HTMLInputElement>

      _fileInput.current.click();
    }
  }, [_fileInput]);

  var _onChange = (0, _react.useCallback)(function (event) {
    var files = event.target.files;

    if (!files) {
      return;
    }

    onUpload(files, event);
  }, [onUpload]);

  return /*#__PURE__*/_react["default"].createElement(Wrapper, {
    className: "upload-button"
  }, /*#__PURE__*/_react["default"].createElement("input", {
    type: "file",
    ref: _fileInput,
    style: inputStyle,
    onChange: _onChange,
    className: "upload-button-input"
  }), /*#__PURE__*/_react["default"].createElement("span", {
    className: "file-upload__upload-button-span",
    onClick: _onClick
  }, children));
};

var _default = UploadButton;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vZmlsZS11cGxvYWRlci91cGxvYWQtYnV0dG9uLnRzeCJdLCJuYW1lcyI6WyJXcmFwcGVyIiwic3R5bGVkIiwiZGl2IiwicHJvcHMiLCJ0aGVtZSIsInRleHRDb2xvckxUIiwiaW5wdXRTdHlsZSIsImRpc3BsYXkiLCJVcGxvYWRCdXR0b24iLCJvblVwbG9hZCIsImNoaWxkcmVuIiwiX2ZpbGVJbnB1dCIsIl9vbkNsaWNrIiwiY3VycmVudCIsInZhbHVlIiwiY2xpY2siLCJfb25DaGFuZ2UiLCJldmVudCIsImZpbGVzIiwidGFyZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUdDLDZCQUFPQyxHQUFWLHNQQUVGLFVBQUFDLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUMsV0FBaEI7QUFBQSxDQUZILENBQWI7O0FBV0EsSUFBTUMsVUFBVSxHQUFHO0FBQUNDLEVBQUFBLE9BQU8sRUFBRTtBQUFWLENBQW5COztBQU9BO0FBQ0E7QUFDQTs7QUFDQTtBQUNBLElBQU1DLFlBQXlDLEdBQUcsU0FBNUNBLFlBQTRDLE9BQTBCO0FBQUEsTUFBeEJDLFFBQXdCLFFBQXhCQSxRQUF3QjtBQUFBLE1BQWRDLFFBQWMsUUFBZEEsUUFBYzs7QUFDMUUsTUFBTUMsVUFBVSxHQUFHLG1CQUFPLElBQVAsQ0FBbkI7O0FBRUEsTUFBTUMsUUFBUSxHQUFHLHdCQUFZLFlBQU07QUFDakMsUUFBSUQsVUFBVSxDQUFDRSxPQUFmLEVBQXdCO0FBQ3RCO0FBQ0FGLE1BQUFBLFVBQVUsQ0FBQ0UsT0FBWCxDQUFtQkMsS0FBbkIsR0FBMkIsSUFBM0IsQ0FGc0IsQ0FHdEI7O0FBQ0FILE1BQUFBLFVBQVUsQ0FBQ0UsT0FBWCxDQUFtQkUsS0FBbkI7QUFDRDtBQUNGLEdBUGdCLEVBT2QsQ0FBQ0osVUFBRCxDQVBjLENBQWpCOztBQVNBLE1BQU1LLFNBQVMsR0FBRyx3QkFDaEIsVUFBQUMsS0FBSyxFQUFJO0FBQUEsUUFFSUMsS0FGSixHQUdIRCxLQUhHLENBRUxFLE1BRkssQ0FFSUQsS0FGSjs7QUFLUCxRQUFJLENBQUNBLEtBQUwsRUFBWTtBQUNWO0FBQ0Q7O0FBRURULElBQUFBLFFBQVEsQ0FBQ1MsS0FBRCxFQUFRRCxLQUFSLENBQVI7QUFDRCxHQVhlLEVBWWhCLENBQUNSLFFBQUQsQ0FaZ0IsQ0FBbEI7O0FBZUEsc0JBQ0UsZ0NBQUMsT0FBRDtBQUFTLElBQUEsU0FBUyxFQUFDO0FBQW5CLGtCQUNFO0FBQ0UsSUFBQSxJQUFJLEVBQUMsTUFEUDtBQUVFLElBQUEsR0FBRyxFQUFFRSxVQUZQO0FBR0UsSUFBQSxLQUFLLEVBQUVMLFVBSFQ7QUFJRSxJQUFBLFFBQVEsRUFBRVUsU0FKWjtBQUtFLElBQUEsU0FBUyxFQUFDO0FBTFosSUFERixlQVFFO0FBQU0sSUFBQSxTQUFTLEVBQUMsaUNBQWhCO0FBQWtELElBQUEsT0FBTyxFQUFFSjtBQUEzRCxLQUNHRixRQURILENBUkYsQ0FERjtBQWNELENBekNEOztlQTJDZUYsWSIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrLCB1c2VSZWZ9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS50ZXh0Q29sb3JMVH07XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG5cbiAgOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgfVxuYDtcbmNvbnN0IGlucHV0U3R5bGUgPSB7ZGlzcGxheTogJ25vbmUnfTtcblxuaW50ZXJmYWNlIFVwbG9hZEJ1dHRvblByb3BzIHtcbiAgb25VcGxvYWQ6IChmaWxlczogRmlsZUxpc3QsIGV2ZW50OiBhbnkpID0+IHZvaWQ7XG4gIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG4vKlxuSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL29rb25ldC9yZWFjdC1kcm9wem9uZS9ibG9iL21hc3Rlci9zcmMvaW5kZXguanNcbiovXG4vKiogQHR5cGUge3R5cGVvZiBpbXBvcnQoJy4vdXBsb2FkLWJ1dHRvbicpLlVwbG9hZEJ1dHRvbn0gKi9cbmNvbnN0IFVwbG9hZEJ1dHRvbjogUmVhY3QuRkM8VXBsb2FkQnV0dG9uUHJvcHM+ID0gKHtvblVwbG9hZCwgY2hpbGRyZW59KSA9PiB7XG4gIGNvbnN0IF9maWxlSW5wdXQgPSB1c2VSZWYobnVsbCk7XG5cbiAgY29uc3QgX29uQ2xpY2sgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKF9maWxlSW5wdXQuY3VycmVudCkge1xuICAgICAgLy8gQHRzLWlnbm9yZSBjcmVhdGUgcmVmIHdpdGggdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+XG4gICAgICBfZmlsZUlucHV0LmN1cnJlbnQudmFsdWUgPSBudWxsO1xuICAgICAgLy8gQHRzLWlnbm9yZSBjcmVhdGUgcmVmIHdpdGggdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+XG4gICAgICBfZmlsZUlucHV0LmN1cnJlbnQuY2xpY2soKTtcbiAgICB9XG4gIH0sIFtfZmlsZUlucHV0XSk7XG5cbiAgY29uc3QgX29uQ2hhbmdlID0gdXNlQ2FsbGJhY2soXG4gICAgZXZlbnQgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICB0YXJnZXQ6IHtmaWxlc31cbiAgICAgIH0gPSBldmVudDtcblxuICAgICAgaWYgKCFmaWxlcykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIG9uVXBsb2FkKGZpbGVzLCBldmVudCk7XG4gICAgfSxcbiAgICBbb25VcGxvYWRdXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8V3JhcHBlciBjbGFzc05hbWU9XCJ1cGxvYWQtYnV0dG9uXCI+XG4gICAgICA8aW5wdXRcbiAgICAgICAgdHlwZT1cImZpbGVcIlxuICAgICAgICByZWY9e19maWxlSW5wdXR9XG4gICAgICAgIHN0eWxlPXtpbnB1dFN0eWxlfVxuICAgICAgICBvbkNoYW5nZT17X29uQ2hhbmdlfVxuICAgICAgICBjbGFzc05hbWU9XCJ1cGxvYWQtYnV0dG9uLWlucHV0XCJcbiAgICAgIC8+XG4gICAgICA8c3BhbiBjbGFzc05hbWU9XCJmaWxlLXVwbG9hZF9fdXBsb2FkLWJ1dHRvbi1zcGFuXCIgb25DbGljaz17X29uQ2xpY2t9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L3NwYW4+XG4gICAgPC9XcmFwcGVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVXBsb2FkQnV0dG9uO1xuIl19