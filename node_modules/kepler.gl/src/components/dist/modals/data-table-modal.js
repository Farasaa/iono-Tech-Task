"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.DatasetTabs = exports.DatasetModalTab = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _datasetLabel = _interopRequireDefault(require("../common/dataset-label"));

var _dataTable = _interopRequireDefault(require("../common/data-table"));

var _reselect = require("reselect");

var _cellSize = require("../common/data-table/cell-size");

var _canvas = _interopRequireDefault(require("../common/data-table/canvas"));

var _icons = require("../common/icons");

var _portaled = _interopRequireDefault(require("../common/portaled"));

var _displayFormat = _interopRequireDefault(require("../common/data-table/display-format"));

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var MIN_STATS_CELL_SIZE = 122;
var DEFAULT_SORT_COLUMN = {}; // sidePadding changes from 38 to 68, 30px for configuration button

var dgSettings = {
  sidePadding: '68px',
  verticalPadding: '16px',
  height: '36px'
};

var StyledModal = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  min-height: 85vh;\n  overflow: hidden;\n  display: flex;\n"])));

var DatasetCatalog = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  padding: ", " ", " 0 0;\n\n  .overflow-horizontal {\n    display: flex;\n    overflow-x: auto;\n    overflow-y: hidden;\n    flex-direction: row;\n    ", "\n  }\n"])), dgSettings.verticalPadding, dgSettings.sidePadding, function (props) {
  return props.theme.modalScrollBar;
});

var DatasetModalTab = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  align-items: center;\n  border-bottom: 3px solid ", ";\n  cursor: pointer;\n  display: flex;\n  height: 35px;\n  margin: 0 3px;\n  padding: 0 5px;\n\n  :hover {\n    border-bottom: 3px solid black;\n  }\n"])), function (props) {
  return props.active ? 'black' : 'transparent';
});

exports.DatasetModalTab = DatasetModalTab;

var StyledConfigureButton = _styledComponents["default"].div(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  justify-content: flex-end;\n  position: absolute;\n  top: 24px;\n  right: 48px;\n  svg {\n    stroke: black;\n  }\n  cursor: pointer;\n"])));

var DatasetTabsUnmemoized = function DatasetTabsUnmemoized(_ref) {
  var activeDataset = _ref.activeDataset,
      datasets = _ref.datasets,
      showDatasetTable = _ref.showDatasetTable;
  return /*#__PURE__*/_react["default"].createElement(DatasetCatalog, {
    className: "dataset-modal-catalog"
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "overflow-horizontal"
  }, Object.values(datasets).map(function (dataset) {
    return /*#__PURE__*/_react["default"].createElement(DatasetModalTab, {
      className: "dataset-modal-tab",
      active: dataset === activeDataset,
      key: dataset.id,
      onClick: function onClick() {
        return showDatasetTable(dataset.id);
      }
    }, /*#__PURE__*/_react["default"].createElement(_datasetLabel["default"], {
      dataset: dataset
    }));
  })));
};

var DatasetTabs = /*#__PURE__*/_react["default"].memo(DatasetTabsUnmemoized);

exports.DatasetTabs = DatasetTabs;
DatasetTabs.displayName = 'DatasetTabs';
DataTableModalFactory.deps = [_dataTable["default"], _displayFormat["default"]];

var TableContainer = _styledComponents["default"].div(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  min-height: 100%;\n  max-height: 100%;\n  max-width: 100%;\n"])));

function DataTableModalFactory(DataTable, DataTableConfig) {
  var DataTableModal = /*#__PURE__*/function (_React$Component) {
    (0, _inherits2["default"])(DataTableModal, _React$Component);

    var _super = _createSuper(DataTableModal);

    function DataTableModal() {
      var _this;

      (0, _classCallCheck2["default"])(this, DataTableModal);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _super.call.apply(_super, [this].concat(args));
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
        showConfig: false
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "datasetCellSizeCache", {});
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "dataId", function (_ref2) {
        var _ref2$dataId = _ref2.dataId,
            dataId = _ref2$dataId === void 0 ? '' : _ref2$dataId;
        return dataId;
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "datasets", function (props) {
        return props.datasets;
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "fields", function (_ref3) {
        var datasets = _ref3.datasets,
            _ref3$dataId = _ref3.dataId,
            dataId = _ref3$dataId === void 0 ? '' : _ref3$dataId;
        return (datasets[dataId] || {}).fields;
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "columns", (0, _reselect.createSelector)(_this.fields, function (fields) {
        return fields.map(function (f) {
          return f.name;
        });
      }));
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "colMeta", (0, _reselect.createSelector)([_this.fields, _this.datasets], function (fields) {
        return fields.reduce(function (acc, _ref4) {
          var name = _ref4.name,
              displayName = _ref4.displayName,
              type = _ref4.type,
              filterProps = _ref4.filterProps,
              format = _ref4.format,
              displayFormat = _ref4.displayFormat;
          return _objectSpread(_objectSpread({}, acc), {}, (0, _defineProperty2["default"])({}, name, _objectSpread(_objectSpread(_objectSpread({
            name: displayName || name,
            type: type
          }, format ? {
            format: format
          } : {}), displayFormat ? {
            displayFormat: displayFormat
          } : {}), filterProps !== null && filterProps !== void 0 && filterProps.columnStats ? {
            columnStats: filterProps.columnStats
          } : {})));
        }, {});
      }));
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "cellSizeCache", (0, _reselect.createSelector)(_this.dataId, _this.datasets, function (dataId, datasets) {
        if (!datasets[dataId]) {
          return {};
        }

        var _datasets$dataId = datasets[dataId],
            fields = _datasets$dataId.fields,
            dataContainer = _datasets$dataId.dataContainer;
        var showCalculate = null;

        if (!_this.datasetCellSizeCache[dataId]) {
          showCalculate = true;
        } else if (_this.datasetCellSizeCache[dataId].fields !== fields || _this.datasetCellSizeCache[dataId].dataContainer !== dataContainer) {
          showCalculate = true;
        }

        if (!showCalculate) {
          return _this.datasetCellSizeCache[dataId].cellSizeCache;
        }

        var cellSizeCache = fields.reduce(function (acc, field, colIdx) {
          return _objectSpread(_objectSpread({}, acc), {}, (0, _defineProperty2["default"])({}, field.name, (0, _cellSize.renderedSize)({
            text: {
              dataContainer: dataContainer,
              column: field.displayName
            },
            colIdx: colIdx,
            type: field.type,
            fontSize: _this.props.theme.cellFontSize,
            font: _this.props.theme.fontFamily,
            minCellSize: MIN_STATS_CELL_SIZE
          })));
        }, {}); // save it to cache

        _this.datasetCellSizeCache[dataId] = {
          cellSizeCache: cellSizeCache,
          fields: fields,
          dataContainer: dataContainer
        };
        return cellSizeCache;
      }));
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "copyTableColumn", function (column) {
        var _this$props = _this.props,
            _this$props$dataId = _this$props.dataId,
            dataId = _this$props$dataId === void 0 ? '' : _this$props$dataId,
            copyTableColumn = _this$props.copyTableColumn;
        copyTableColumn(dataId, column);
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "pinTableColumn", function (column) {
        var _this$props2 = _this.props,
            _this$props2$dataId = _this$props2.dataId,
            dataId = _this$props2$dataId === void 0 ? '' : _this$props2$dataId,
            pinTableColumn = _this$props2.pinTableColumn;
        pinTableColumn(dataId, column);
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "sortTableColumn", function (column, mode) {
        var _this$props3 = _this.props,
            _this$props3$dataId = _this$props3.dataId,
            dataId = _this$props3$dataId === void 0 ? '' : _this$props3$dataId,
            sortTableColumn = _this$props3.sortTableColumn;
        sortTableColumn(dataId, column, mode);
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "setColumnDisplayFormat", function (formats) {
        var _this$props4 = _this.props,
            dataId = _this$props4.dataId,
            setColumnDisplayFormat = _this$props4.setColumnDisplayFormat;
        if (dataId) setColumnDisplayFormat(dataId, formats);
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onOpenConfig", function () {
        _this.setState({
          showConfig: true
        });
      });
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onCloseConfig", function () {
        _this.setState({
          showConfig: false
        });
      });
      return _this;
    }

    (0, _createClass2["default"])(DataTableModal, [{
      key: "render",
      value: function render() {
        var _this$props5 = this.props,
            datasets = _this$props5.datasets,
            dataId = _this$props5.dataId,
            showDatasetTable = _this$props5.showDatasetTable,
            _this$props5$showTab = _this$props5.showTab,
            showTab = _this$props5$showTab === void 0 ? true : _this$props5$showTab;

        if (!datasets || !dataId) {
          return null;
        }

        var activeDataset = datasets[dataId];
        var columns = this.columns(this.props);
        var colMeta = this.colMeta(this.props);
        var cellSizeCache = this.cellSizeCache(this.props);
        return /*#__PURE__*/_react["default"].createElement(StyledModal, {
          className: "dataset-modal",
          id: "dataset-modal"
        }, /*#__PURE__*/_react["default"].createElement(_canvas["default"], null), /*#__PURE__*/_react["default"].createElement(TableContainer, null, showTab ? /*#__PURE__*/_react["default"].createElement(DatasetTabs, {
          activeDataset: activeDataset,
          datasets: datasets,
          showDatasetTable: showDatasetTable
        }) : null, /*#__PURE__*/_react["default"].createElement(StyledConfigureButton, {
          className: "display-config-button"
        }, /*#__PURE__*/_react["default"].createElement(_icons.Gear, {
          onClick: this.onOpenConfig
        }), /*#__PURE__*/_react["default"].createElement(_portaled["default"], {
          right: 240,
          top: 20,
          isOpened: this.state.showConfig,
          onClose: this.onCloseConfig
        }, /*#__PURE__*/_react["default"].createElement(DataTableConfig, {
          columns: columns,
          colMeta: colMeta,
          setColumnDisplayFormat: this.setColumnDisplayFormat,
          onClose: this.onCloseConfig
        }))), datasets[dataId] ? /*#__PURE__*/_react["default"].createElement(DataTable, {
          key: dataId,
          dataId: dataId,
          columns: columns,
          colMeta: colMeta,
          cellSizeCache: cellSizeCache,
          dataContainer: activeDataset.dataContainer,
          pinnedColumns: activeDataset.pinnedColumns,
          sortOrder: activeDataset.sortOrder,
          sortColumn: activeDataset.sortColumn || DEFAULT_SORT_COLUMN,
          copyTableColumn: this.copyTableColumn,
          pinTableColumn: this.pinTableColumn,
          sortTableColumn: this.sortTableColumn,
          setColumnDisplayFormat: this.setColumnDisplayFormat,
          hasStats: false
        }) : null));
      }
    }]);
    return DataTableModal;
  }(_react["default"].Component);

  return (0, _styledComponents.withTheme)(DataTableModal);
}

var _default = DataTableModalFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,