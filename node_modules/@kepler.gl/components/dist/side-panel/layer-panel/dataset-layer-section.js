"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _sourceDataCatalog = _interopRequireDefault(require("../common/source-data-catalog"));

var _layerList = _interopRequireDefault(require("./layer-list"));

var _templateObject;

var DatasetLayerSectionWrapper = _styledComponents["default"].div.attrs({
  className: 'dataset-layer-section'
})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  margin-bottom: 16px;\n"])));

DatasetLayerSectionFactory.deps = [_sourceDataCatalog["default"], _layerList["default"]];

function DatasetLayerSectionFactory(SourceDataCatalog, LayerList) {
  var DatasetLayerSection = function DatasetLayerSection(props) {
    var dataset = props.dataset,
        datasets = props.datasets,
        showDatasetTable = props.showDatasetTable,
        layers = props.layers,
        updateTableColor = props.updateTableColor,
        showDeleteDataset = props.showDeleteDataset,
        removeDataset = props.removeDataset,
        layerOrder = props.layerOrder,
        layerClasses = props.layerClasses,
        uiStateActions = props.uiStateActions,
        visStateActions = props.visStateActions;
    var datasetCatalog = (0, _react.useMemo)(function () {
      return (0, _defineProperty2["default"])({}, dataset.id, dataset);
    }, [dataset]);
    return /*#__PURE__*/_react["default"].createElement(DatasetLayerSectionWrapper, null, /*#__PURE__*/_react["default"].createElement(SourceDataCatalog, {
      datasets: datasetCatalog,
      showDatasetTable: showDatasetTable,
      updateTableColor: updateTableColor,
      removeDataset: removeDataset,
      showDeleteDataset: showDeleteDataset
    }), /*#__PURE__*/_react["default"].createElement(LayerList, {
      datasets: datasets,
      layerOrder: layerOrder,
      layers: layers,
      layerClasses: layerClasses,
      uiStateActions: uiStateActions,
      visStateActions: visStateActions,
      isSortable: false
    }));
  };

  return DatasetLayerSection;
}

var _default = DatasetLayerSectionFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaWRlLXBhbmVsL2xheWVyLXBhbmVsL2RhdGFzZXQtbGF5ZXItc2VjdGlvbi50c3giXSwibmFtZXMiOlsiRGF0YXNldExheWVyU2VjdGlvbldyYXBwZXIiLCJzdHlsZWQiLCJkaXYiLCJhdHRycyIsImNsYXNzTmFtZSIsIkRhdGFzZXRMYXllclNlY3Rpb25GYWN0b3J5IiwiZGVwcyIsIlNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeSIsIkxheWVyTGlzdEZhY3RvcnkiLCJTb3VyY2VEYXRhQ2F0YWxvZyIsIkxheWVyTGlzdCIsIkRhdGFzZXRMYXllclNlY3Rpb24iLCJwcm9wcyIsImRhdGFzZXQiLCJkYXRhc2V0cyIsInNob3dEYXRhc2V0VGFibGUiLCJsYXllcnMiLCJ1cGRhdGVUYWJsZUNvbG9yIiwic2hvd0RlbGV0ZURhdGFzZXQiLCJyZW1vdmVEYXRhc2V0IiwibGF5ZXJPcmRlciIsImxheWVyQ2xhc3NlcyIsInVpU3RhdGVBY3Rpb25zIiwidmlzU3RhdGVBY3Rpb25zIiwiZGF0YXNldENhdGFsb2ciLCJpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7QUFtQkEsSUFBTUEsMEJBQTBCLEdBQUdDLDZCQUFPQyxHQUFQLENBQVdDLEtBQVgsQ0FBaUI7QUFDbERDLEVBQUFBLFNBQVMsRUFBRTtBQUR1QyxDQUFqQixDQUFILGdIQUFoQzs7QUFNQUMsMEJBQTBCLENBQUNDLElBQTNCLEdBQWtDLENBQUNDLDZCQUFELEVBQTJCQyxxQkFBM0IsQ0FBbEM7O0FBRUEsU0FBU0gsMEJBQVQsQ0FDRUksaUJBREYsRUFFRUMsU0FGRixFQUdFO0FBQ0EsTUFBTUMsbUJBQXVELEdBQUcsU0FBMURBLG1CQUEwRCxDQUFBQyxLQUFLLEVBQUk7QUFBQSxRQUVyRUMsT0FGcUUsR0FhbkVELEtBYm1FLENBRXJFQyxPQUZxRTtBQUFBLFFBR3JFQyxRQUhxRSxHQWFuRUYsS0FibUUsQ0FHckVFLFFBSHFFO0FBQUEsUUFJckVDLGdCQUpxRSxHQWFuRUgsS0FibUUsQ0FJckVHLGdCQUpxRTtBQUFBLFFBS3JFQyxNQUxxRSxHQWFuRUosS0FibUUsQ0FLckVJLE1BTHFFO0FBQUEsUUFNckVDLGdCQU5xRSxHQWFuRUwsS0FibUUsQ0FNckVLLGdCQU5xRTtBQUFBLFFBT3JFQyxpQkFQcUUsR0FhbkVOLEtBYm1FLENBT3JFTSxpQkFQcUU7QUFBQSxRQVFyRUMsYUFScUUsR0FhbkVQLEtBYm1FLENBUXJFTyxhQVJxRTtBQUFBLFFBU3JFQyxVQVRxRSxHQWFuRVIsS0FibUUsQ0FTckVRLFVBVHFFO0FBQUEsUUFVckVDLFlBVnFFLEdBYW5FVCxLQWJtRSxDQVVyRVMsWUFWcUU7QUFBQSxRQVdyRUMsY0FYcUUsR0FhbkVWLEtBYm1FLENBV3JFVSxjQVhxRTtBQUFBLFFBWXJFQyxlQVpxRSxHQWFuRVgsS0FibUUsQ0FZckVXLGVBWnFFO0FBZXZFLFFBQU1DLGNBQWMsR0FBRyxvQkFBUSxZQUFNO0FBQ25DLGtEQUFTWCxPQUFPLENBQUNZLEVBQWpCLEVBQXNCWixPQUF0QjtBQUNELEtBRnNCLEVBRXBCLENBQUNBLE9BQUQsQ0FGb0IsQ0FBdkI7QUFJQSx3QkFDRSxnQ0FBQywwQkFBRCxxQkFDRSxnQ0FBQyxpQkFBRDtBQUNFLE1BQUEsUUFBUSxFQUFFVyxjQURaO0FBRUUsTUFBQSxnQkFBZ0IsRUFBRVQsZ0JBRnBCO0FBR0UsTUFBQSxnQkFBZ0IsRUFBRUUsZ0JBSHBCO0FBSUUsTUFBQSxhQUFhLEVBQUVFLGFBSmpCO0FBS0UsTUFBQSxpQkFBaUIsRUFBRUQ7QUFMckIsTUFERixlQVFFLGdDQUFDLFNBQUQ7QUFDRSxNQUFBLFFBQVEsRUFBRUosUUFEWjtBQUVFLE1BQUEsVUFBVSxFQUFFTSxVQUZkO0FBR0UsTUFBQSxNQUFNLEVBQUVKLE1BSFY7QUFJRSxNQUFBLFlBQVksRUFBRUssWUFKaEI7QUFLRSxNQUFBLGNBQWMsRUFBRUMsY0FMbEI7QUFNRSxNQUFBLGVBQWUsRUFBRUMsZUFObkI7QUFPRSxNQUFBLFVBQVUsRUFBRTtBQVBkLE1BUkYsQ0FERjtBQW9CRCxHQXZDRDs7QUF5Q0EsU0FBT1osbUJBQVA7QUFDRDs7ZUFFY04sMEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHt1c2VNZW1vfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IFNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeSBmcm9tICcuLi9jb21tb24vc291cmNlLWRhdGEtY2F0YWxvZyc7XG5pbXBvcnQgTGF5ZXJMaXN0RmFjdG9yeSBmcm9tICcuL2xheWVyLWxpc3QnO1xuaW1wb3J0IHtMYXllciwgTGF5ZXJDbGFzc2VzVHlwZX0gZnJvbSAnQGtlcGxlci5nbC9sYXllcnMnO1xuaW1wb3J0IHtVSVN0YXRlQWN0aW9ucywgQWN0aW9uSGFuZGxlciwgVmlzU3RhdGVBY3Rpb25zfSBmcm9tICdAa2VwbGVyLmdsL2FjdGlvbnMnO1xuaW1wb3J0IHtLZXBsZXJUYWJsZSwgRGF0YXNldHN9IGZyb20gJ0BrZXBsZXIuZ2wvdGFibGUnO1xuXG50eXBlIERhdGFzZXRMYXllclNlY3Rpb25Qcm9wcyA9IHtcbiAgZGF0YXNldHM6IERhdGFzZXRzO1xuICBkYXRhc2V0OiBLZXBsZXJUYWJsZTtcbiAgbGF5ZXJzOiBMYXllcltdO1xuICBsYXllck9yZGVyOiBzdHJpbmdbXTtcbiAgbGF5ZXJDbGFzc2VzOiBMYXllckNsYXNzZXNUeXBlO1xuICBzaG93RGVsZXRlRGF0YXNldDogYm9vbGVhbjtcbiAgc2hvd0RhdGFzZXRUYWJsZTogQWN0aW9uSGFuZGxlcjx0eXBlb2YgVmlzU3RhdGVBY3Rpb25zLnNob3dEYXRhc2V0VGFibGU+O1xuICB1cGRhdGVUYWJsZUNvbG9yOiBBY3Rpb25IYW5kbGVyPHR5cGVvZiBWaXNTdGF0ZUFjdGlvbnMudXBkYXRlVGFibGVDb2xvcj47XG4gIHJlbW92ZURhdGFzZXQ6IEFjdGlvbkhhbmRsZXI8dHlwZW9mIFVJU3RhdGVBY3Rpb25zLm9wZW5EZWxldGVNb2RhbD47XG4gIHVpU3RhdGVBY3Rpb25zOiB0eXBlb2YgVUlTdGF0ZUFjdGlvbnM7XG4gIHZpc1N0YXRlQWN0aW9uczogdHlwZW9mIFZpc1N0YXRlQWN0aW9ucztcbn07XG5cbmNvbnN0IERhdGFzZXRMYXllclNlY3Rpb25XcmFwcGVyID0gc3R5bGVkLmRpdi5hdHRycyh7XG4gIGNsYXNzTmFtZTogJ2RhdGFzZXQtbGF5ZXItc2VjdGlvbidcbn0pYFxuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuYDtcblxuRGF0YXNldExheWVyU2VjdGlvbkZhY3RvcnkuZGVwcyA9IFtTb3VyY2VEYXRhQ2F0YWxvZ0ZhY3RvcnksIExheWVyTGlzdEZhY3RvcnldO1xuXG5mdW5jdGlvbiBEYXRhc2V0TGF5ZXJTZWN0aW9uRmFjdG9yeShcbiAgU291cmNlRGF0YUNhdGFsb2c6IFJldHVyblR5cGU8dHlwZW9mIFNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeT4sXG4gIExheWVyTGlzdDogUmV0dXJuVHlwZTx0eXBlb2YgTGF5ZXJMaXN0RmFjdG9yeT5cbikge1xuICBjb25zdCBEYXRhc2V0TGF5ZXJTZWN0aW9uOiBSZWFjdC5GQzxEYXRhc2V0TGF5ZXJTZWN0aW9uUHJvcHM+ID0gcHJvcHMgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGRhdGFzZXQsXG4gICAgICBkYXRhc2V0cyxcbiAgICAgIHNob3dEYXRhc2V0VGFibGUsXG4gICAgICBsYXllcnMsXG4gICAgICB1cGRhdGVUYWJsZUNvbG9yLFxuICAgICAgc2hvd0RlbGV0ZURhdGFzZXQsXG4gICAgICByZW1vdmVEYXRhc2V0LFxuICAgICAgbGF5ZXJPcmRlcixcbiAgICAgIGxheWVyQ2xhc3NlcyxcbiAgICAgIHVpU3RhdGVBY3Rpb25zLFxuICAgICAgdmlzU3RhdGVBY3Rpb25zXG4gICAgfSA9IHByb3BzO1xuXG4gICAgY29uc3QgZGF0YXNldENhdGFsb2cgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgIHJldHVybiB7W2RhdGFzZXQuaWRdOiBkYXRhc2V0fTtcbiAgICB9LCBbZGF0YXNldF0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxEYXRhc2V0TGF5ZXJTZWN0aW9uV3JhcHBlcj5cbiAgICAgICAgPFNvdXJjZURhdGFDYXRhbG9nXG4gICAgICAgICAgZGF0YXNldHM9e2RhdGFzZXRDYXRhbG9nfVxuICAgICAgICAgIHNob3dEYXRhc2V0VGFibGU9e3Nob3dEYXRhc2V0VGFibGV9XG4gICAgICAgICAgdXBkYXRlVGFibGVDb2xvcj17dXBkYXRlVGFibGVDb2xvcn1cbiAgICAgICAgICByZW1vdmVEYXRhc2V0PXtyZW1vdmVEYXRhc2V0fVxuICAgICAgICAgIHNob3dEZWxldGVEYXRhc2V0PXtzaG93RGVsZXRlRGF0YXNldH1cbiAgICAgICAgLz5cbiAgICAgICAgPExheWVyTGlzdFxuICAgICAgICAgIGRhdGFzZXRzPXtkYXRhc2V0c31cbiAgICAgICAgICBsYXllck9yZGVyPXtsYXllck9yZGVyfVxuICAgICAgICAgIGxheWVycz17bGF5ZXJzfVxuICAgICAgICAgIGxheWVyQ2xhc3Nlcz17bGF5ZXJDbGFzc2VzfVxuICAgICAgICAgIHVpU3RhdGVBY3Rpb25zPXt1aVN0YXRlQWN0aW9uc31cbiAgICAgICAgICB2aXNTdGF0ZUFjdGlvbnM9e3Zpc1N0YXRlQWN0aW9uc31cbiAgICAgICAgICBpc1NvcnRhYmxlPXtmYWxzZX1cbiAgICAgICAgLz5cbiAgICAgIDwvRGF0YXNldExheWVyU2VjdGlvbldyYXBwZXI+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gRGF0YXNldExheWVyU2VjdGlvbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgRGF0YXNldExheWVyU2VjdGlvbkZhY3Rvcnk7XG4iXX0=