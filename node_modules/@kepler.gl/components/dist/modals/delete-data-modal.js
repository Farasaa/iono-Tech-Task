"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.DeleteDatasetModal = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _datasetLabel = _interopRequireDefault(require("../common/dataset-label"));

var _localization = require("@kepler.gl/localization");

var _templateObject;

var StyledMsg = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  margin-top: 24px;\n"])));

var DeleteDatasetModal = function DeleteDatasetModal(_ref) {
  var dataset = _ref.dataset,
      _ref$layers = _ref.layers,
      layers = _ref$layers === void 0 ? [] : _ref$layers;
  // retrieve only layers related to the current dataset
  var currDatasetLayers = layers.filter(function (layer) {
    return layer.config.dataId === (dataset && dataset.id);
  });
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "delete-dataset-modal"
  }, /*#__PURE__*/_react["default"].createElement(_datasetLabel["default"], {
    dataset: dataset
  }), /*#__PURE__*/_react["default"].createElement(StyledMsg, {
    className: "delete-dataset-msg"
  }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
    id: 'modal.deleteData.warning',
    values: {
      length: currDatasetLayers.length
    }
  })));
};

exports.DeleteDatasetModal = DeleteDatasetModal;

var DeleteDatasetModalFactory = function DeleteDatasetModalFactory() {
  return DeleteDatasetModal;
};

var _default = DeleteDatasetModalFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RhbHMvZGVsZXRlLWRhdGEtbW9kYWwudHN4Il0sIm5hbWVzIjpbIlN0eWxlZE1zZyIsInN0eWxlZCIsImRpdiIsIkRlbGV0ZURhdGFzZXRNb2RhbCIsImRhdGFzZXQiLCJsYXllcnMiLCJjdXJyRGF0YXNldExheWVycyIsImZpbHRlciIsImxheWVyIiwiY29uZmlnIiwiZGF0YUlkIiwiaWQiLCJsZW5ndGgiLCJEZWxldGVEYXRhc2V0TW9kYWxGYWN0b3J5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBSUEsSUFBTUEsU0FBUyxHQUFHQyw2QkFBT0MsR0FBViw2R0FBZjs7QUFTTyxJQUFNQyxrQkFBcUQsR0FBRyxTQUF4REEsa0JBQXdELE9BQTRCO0FBQUEsTUFBMUJDLE9BQTBCLFFBQTFCQSxPQUEwQjtBQUFBLHlCQUFqQkMsTUFBaUI7QUFBQSxNQUFqQkEsTUFBaUIsNEJBQVIsRUFBUTtBQUMvRjtBQUNBLE1BQU1DLGlCQUFpQixHQUFHRCxNQUFNLENBQUNFLE1BQVAsQ0FBYyxVQUFBQyxLQUFLO0FBQUEsV0FBSUEsS0FBSyxDQUFDQyxNQUFOLENBQWFDLE1BQWIsTUFBeUJOLE9BQU8sSUFBSUEsT0FBTyxDQUFDTyxFQUE1QyxDQUFKO0FBQUEsR0FBbkIsQ0FBMUI7QUFFQSxzQkFDRTtBQUFLLElBQUEsU0FBUyxFQUFDO0FBQWYsa0JBQ0UsZ0NBQUMsd0JBQUQ7QUFBYyxJQUFBLE9BQU8sRUFBRVA7QUFBdkIsSUFERixlQUVFLGdDQUFDLFNBQUQ7QUFBVyxJQUFBLFNBQVMsRUFBQztBQUFyQixrQkFDRSxnQ0FBQyw4QkFBRDtBQUNFLElBQUEsRUFBRSxFQUFFLDBCQUROO0FBRUUsSUFBQSxNQUFNLEVBQUU7QUFBQ1EsTUFBQUEsTUFBTSxFQUFFTixpQkFBaUIsQ0FBQ007QUFBM0I7QUFGVixJQURGLENBRkYsQ0FERjtBQVdELENBZk07Ozs7QUFpQlAsSUFBTUMseUJBQXlCLEdBQUcsU0FBNUJBLHlCQUE0QjtBQUFBLFNBQU1WLGtCQUFOO0FBQUEsQ0FBbEM7O2VBQ2VVLHlCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IERhdGFzZXRMYWJlbCBmcm9tICcuLi9jb21tb24vZGF0YXNldC1sYWJlbCc7XG5pbXBvcnQge0Zvcm1hdHRlZE1lc3NhZ2V9IGZyb20gJ0BrZXBsZXIuZ2wvbG9jYWxpemF0aW9uJztcbmltcG9ydCB7TGF5ZXJ9IGZyb20gJ0BrZXBsZXIuZ2wvbGF5ZXJzJztcbmltcG9ydCB7S2VwbGVyVGFibGV9IGZyb20gJ0BrZXBsZXIuZ2wvdGFibGUnO1xuXG5jb25zdCBTdHlsZWRNc2cgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW4tdG9wOiAyNHB4O1xuYDtcblxuZXhwb3J0IGludGVyZmFjZSBEZWxldGVEYXRhc2V0TW9kYWxQcm9wcyB7XG4gIGRhdGFzZXQ6IEtlcGxlclRhYmxlO1xuICBsYXllcnM6IExheWVyW107XG59XG5cbmV4cG9ydCBjb25zdCBEZWxldGVEYXRhc2V0TW9kYWw6IFJlYWN0LkZDPERlbGV0ZURhdGFzZXRNb2RhbFByb3BzPiA9ICh7ZGF0YXNldCwgbGF5ZXJzID0gW119KSA9PiB7XG4gIC8vIHJldHJpZXZlIG9ubHkgbGF5ZXJzIHJlbGF0ZWQgdG8gdGhlIGN1cnJlbnQgZGF0YXNldFxuICBjb25zdCBjdXJyRGF0YXNldExheWVycyA9IGxheWVycy5maWx0ZXIobGF5ZXIgPT4gbGF5ZXIuY29uZmlnLmRhdGFJZCA9PT0gKGRhdGFzZXQgJiYgZGF0YXNldC5pZCkpO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJkZWxldGUtZGF0YXNldC1tb2RhbFwiPlxuICAgICAgPERhdGFzZXRMYWJlbCBkYXRhc2V0PXtkYXRhc2V0fSAvPlxuICAgICAgPFN0eWxlZE1zZyBjbGFzc05hbWU9XCJkZWxldGUtZGF0YXNldC1tc2dcIj5cbiAgICAgICAgPEZvcm1hdHRlZE1lc3NhZ2VcbiAgICAgICAgICBpZD17J21vZGFsLmRlbGV0ZURhdGEud2FybmluZyd9XG4gICAgICAgICAgdmFsdWVzPXt7bGVuZ3RoOiBjdXJyRGF0YXNldExheWVycy5sZW5ndGh9fVxuICAgICAgICAvPlxuICAgICAgPC9TdHlsZWRNc2c+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5jb25zdCBEZWxldGVEYXRhc2V0TW9kYWxGYWN0b3J5ID0gKCkgPT4gRGVsZXRlRGF0YXNldE1vZGFsO1xuZXhwb3J0IGRlZmF1bHQgRGVsZXRlRGF0YXNldE1vZGFsRmFjdG9yeTtcbiJdfQ==