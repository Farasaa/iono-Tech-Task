"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _componentJestUtils = require("../../../../../test/helpers/component-jest-utils");

var _cloudItem = require("./cloud-item");

var _moment = _interopRequireDefault(require("moment"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

describe('CloudItem', function () {
  var mockVis = {
    title: 'Test Title',
    description: 'Test Description',
    lastModification: new Date().toISOString(),
    thumbnail: 'test-thumbnail.jpg',
    privateMap: true
  };
  it('renders without crashing', function () {
    var _renderWithTheme = (0, _componentJestUtils.renderWithTheme)( /*#__PURE__*/_react["default"].createElement(_cloudItem.CloudItem, {
      vis: mockVis,
      onClick: function onClick() {}
    })),
        getByText = _renderWithTheme.getByText;

    expect(getByText('Test Title')).toBeInTheDocument();
  });
  it('renders PrivacyBadge for private maps', function () {
    var _renderWithTheme2 = (0, _componentJestUtils.renderWithTheme)( /*#__PURE__*/_react["default"].createElement(_cloudItem.CloudItem, {
      vis: _objectSpread(_objectSpread({}, mockVis), {}, {
        privateMap: true
      }),
      onClick: function onClick() {}
    })),
        getByText = _renderWithTheme2.getByText;

    expect(getByText('Private')).toBeInTheDocument();
  });
  it('does not render PrivacyBadge for public maps', function () {
    var _renderWithTheme3 = (0, _componentJestUtils.renderWithTheme)( /*#__PURE__*/_react["default"].createElement(_cloudItem.CloudItem, {
      vis: _objectSpread(_objectSpread({}, mockVis), {}, {
        privateMap: false
      }),
      onClick: function onClick() {}
    })),
        queryByText = _renderWithTheme3.queryByText;

    expect(queryByText('Private')).toBeNull();
  });
  it('displays correct thumbnail image', function () {
    var _renderWithTheme4 = (0, _componentJestUtils.renderWithTheme)( /*#__PURE__*/_react["default"].createElement(_cloudItem.CloudItem, {
      vis: mockVis,
      onClick: function onClick() {}
    })),
        getByRole = _renderWithTheme4.getByRole;

    expect(getByRole('thumbnail-wrapper').style.backgroundImage).toContain('test-thumbnail.jpg');
  });
  it('displays MapIcon when no thumbnail is provided', function () {
    var _renderWithTheme5 = (0, _componentJestUtils.renderWithTheme)( /*#__PURE__*/_react["default"].createElement(_cloudItem.CloudItem, {
      vis: _objectSpread(_objectSpread({}, mockVis), {}, {
        thumbnail: null
      }),
      onClick: function onClick() {}
    })),
        getByRole = _renderWithTheme5.getByRole;

    expect(getByRole('map-icon')).toBeInTheDocument();
  });
  it('displays title, description, and last modification date', function () {
    var _renderWithTheme6 = (0, _componentJestUtils.renderWithTheme)( /*#__PURE__*/_react["default"].createElement(_cloudItem.CloudItem, {
      vis: mockVis,
      onClick: function onClick() {}
    })),
        getByText = _renderWithTheme6.getByText;

    expect(getByText('Test Title')).toBeInTheDocument();
    expect(getByText('Test Description')).toBeInTheDocument();
    expect(getByText("Last modified ".concat(_moment["default"].utc(mockVis.lastModification).fromNow()))).toBeInTheDocument();
  });
  it('calls onClick when component is clicked', function () {
    var onClickMock = jest.fn();

    var _renderWithTheme7 = (0, _componentJestUtils.renderWithTheme)( /*#__PURE__*/_react["default"].createElement(_cloudItem.CloudItem, {
      vis: mockVis,
      onClick: onClickMock
    })),
        getByText = _renderWithTheme7.getByText;

    _react2.fireEvent.click(getByText('Test Title'));

    expect(onClickMock).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tb2RhbHMvY2xvdWQtY29tcG9uZW50cy9jbG91ZC1pdGVtLnNwZWMudHN4Il0sIm5hbWVzIjpbImRlc2NyaWJlIiwibW9ja1ZpcyIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJsYXN0TW9kaWZpY2F0aW9uIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwidGh1bWJuYWlsIiwicHJpdmF0ZU1hcCIsIml0IiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZUluVGhlRG9jdW1lbnQiLCJxdWVyeUJ5VGV4dCIsInRvQmVOdWxsIiwiZ2V0QnlSb2xlIiwic3R5bGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJ0b0NvbnRhaW4iLCJtb21lbnQiLCJ1dGMiLCJmcm9tTm93Iiwib25DbGlja01vY2siLCJqZXN0IiwiZm4iLCJmaXJlRXZlbnQiLCJjbGljayIsInRvSGF2ZUJlZW5DYWxsZWQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUlBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7Ozs7QUFFQUEsUUFBUSxDQUFDLFdBQUQsRUFBYyxZQUFNO0FBQzFCLE1BQU1DLE9BQU8sR0FBRztBQUNkQyxJQUFBQSxLQUFLLEVBQUUsWUFETztBQUVkQyxJQUFBQSxXQUFXLEVBQUUsa0JBRkM7QUFHZEMsSUFBQUEsZ0JBQWdCLEVBQUUsSUFBSUMsSUFBSixHQUFXQyxXQUFYLEVBSEo7QUFJZEMsSUFBQUEsU0FBUyxFQUFFLG9CQUpHO0FBS2RDLElBQUFBLFVBQVUsRUFBRTtBQUxFLEdBQWhCO0FBUUFDLEVBQUFBLEVBQUUsQ0FBQywwQkFBRCxFQUE2QixZQUFNO0FBQUEsMkJBQ2YsdURBQWdCLGdDQUFDLG9CQUFEO0FBQVcsTUFBQSxHQUFHLEVBQUVSLE9BQWhCO0FBQXlCLE1BQUEsT0FBTyxFQUFFLG1CQUFNLENBQUU7QUFBMUMsTUFBaEIsQ0FEZTtBQUFBLFFBQzVCUyxTQUQ0QixvQkFDNUJBLFNBRDRCOztBQUVuQ0MsSUFBQUEsTUFBTSxDQUFDRCxTQUFTLENBQUMsWUFB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QSxPQUFPLEVBQUVxQjtBQUFsQyxNQUFoQixDQUY4QjtBQUFBLFFBRTNDWixTQUYyQyxxQkFFM0NBLFNBRjJDOztBQUdsRGUsc0JBQVVDLEtBQVYsQ0FBZ0JoQixTQUFTLENBQUMsWUFBRCxDQUF6Qjs7QUFDQUMsSUFBQUEsTUFBTSxDQUFDVyxXQUFELENBQU4sQ0FBb0JLLGdCQUFwQjtBQUNELEdBTEMsQ0FBRjtBQU1ELENBdkRPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG4vLyBAdHMtbm9jaGVja1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7ZmlyZUV2ZW50fSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0JztcbmltcG9ydCB7cmVuZGVyV2l0aFRoZW1lfSBmcm9tICcuLi8uLi8uLi8uLi8uLi90ZXN0L2hlbHBlcnMvY29tcG9uZW50LWplc3QtdXRpbHMnO1xuXG5pbXBvcnQge0Nsb3VkSXRlbX0gZnJvbSAnLi9jbG91ZC1pdGVtJztcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcblxuZGVzY3JpYmUoJ0Nsb3VkSXRlbScsICgpID0+IHtcbiAgY29uc3QgbW9ja1ZpcyA9IHtcbiAgICB0aXRsZTogJ1Rlc3QgVGl0bGUnLFxuICAgIGRlc2NyaXB0aW9uOiAnVGVzdCBEZXNjcmlwdGlvbicsXG4gICAgbGFzdE1vZGlmaWNhdGlvbjogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIHRodW1ibmFpbDogJ3Rlc3QtdGh1bWJuYWlsLmpwZycsXG4gICAgcHJpdmF0ZU1hcDogdHJ1ZVxuICB9O1xuXG4gIGl0KCdyZW5kZXJzIHdpdGhvdXQgY3Jhc2hpbmcnLCAoKSA9PiB7XG4gICAgY29uc3Qge2dldEJ5VGV4dH0gPSByZW5kZXJXaXRoVGhlbWUoPENsb3VkSXRlbSB2aXM9e21vY2tWaXN9IG9uQ2xpY2s9eygpID0+IHt9fSAvPik7XG4gICAgZXhwZWN0KGdldEJ5VGV4dCgnVGVzdCBUaXRsZScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICB9KTtcblxuICBpdCgncmVuZGVycyBQcml2YWN5QmFkZ2UgZm9yIHByaXZhdGUgbWFwcycsICgpID0+IHtcbiAgICBjb25zdCB7Z2V0QnlUZXh0fSA9IHJlbmRlcldpdGhUaGVtZShcbiAgICAgIDxDbG91ZEl0ZW0gdmlzPXt7Li4ubW9ja1ZpcywgcHJpdmF0ZU1hcDogdHJ1ZX19IG9uQ2xpY2s9eygpID0+IHt9fSAvPlxuICAgICk7XG4gICAgZXhwZWN0KGdldEJ5VGV4dCgnUHJpdmF0ZScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICB9KTtcblxuICBpdCgnZG9lcyBub3QgcmVuZGVyIFByaXZhY3lCYWRnZSBmb3IgcHVibGljIG1hcHMnLCAoKSA9PiB7XG4gICAgY29uc3Qge3F1ZXJ5QnlUZXh0fSA9IHJlbmRlcldpdGhUaGVtZShcbiAgICAgIDxDbG91ZEl0ZW0gdmlzPXt7Li4ubW9ja1ZpcywgcHJpdmF0ZU1hcDogZmFsc2V9fSBvbkNsaWNrPXsoKSA9PiB7fX0gLz5cbiAgICApO1xuICAgIGV4cGVjdChxdWVyeUJ5VGV4dCgnUHJpdmF0ZScpKS50b0JlTnVsbCgpO1xuICB9KTtcblxuICBpdCgnZGlzcGxheXMgY29ycmVjdCB0aHVtYm5haWwgaW1hZ2UnLCAoKSA9PiB7XG4gICAgY29uc3Qge2dldEJ5Um9sZX0gPSByZW5kZXJXaXRoVGhlbWUoPENsb3VkSXRlbSB2aXM9e21vY2tWaXN9IG9uQ2xpY2s9eygpID0+IHt9fSAvPik7XG4gICAgZXhwZWN0KGdldEJ5Um9sZSgndGh1bWJuYWlsLXdyYXBwZXInKS5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UpLnRvQ29udGFpbigndGVzdC10aHVtYm5haWwuanBnJyk7XG4gIH0pO1xuXG4gIGl0KCdkaXNwbGF5cyBNYXBJY29uIHdoZW4gbm8gdGh1bWJuYWlsIGlzIHByb3ZpZGVkJywgKCkgPT4ge1xuICAgIGNvbnN0IHtnZXRCeVJvbGV9ID0gcmVuZGVyV2l0aFRoZW1lKFxuICAgICAgPENsb3VkSXRlbSB2aXM9e3suLi5tb2NrVmlzLCB0aHVtYm5haWw6IG51bGx9fSBvbkNsaWNrPXsoKSA9PiB7fX0gLz5cbiAgICApO1xuICAgIGV4cGVjdChnZXRCeVJvbGUoJ21hcC1pY29uJykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gIH0pO1xuXG4gIGl0KCdkaXNwbGF5cyB0aXRsZSwgZGVzY3JpcHRpb24sIGFuZCBsYXN0IG1vZGlmaWNhdGlvbiBkYXRlJywgKCkgPT4ge1xuICAgIGNvbnN0IHtnZXRCeVRleHR9ID0gcmVuZGVyV2l0aFRoZW1lKDxDbG91ZEl0ZW0gdmlzPXttb2NrVmlzfSBvbkNsaWNrPXsoKSA9PiB7fX0gLz4pO1xuICAgIGV4cGVjdChnZXRCeVRleHQoJ1Rlc3QgVGl0bGUnKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCdUZXN0IERlc2NyaXB0aW9uJykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgZXhwZWN0KFxuICAgICAgZ2V0QnlUZXh0KGBMYXN0IG1vZGlmaWVkICR7bW9tZW50LnV0Yyhtb2NrVmlzLmxhc3RNb2RpZmljYXRpb24pLmZyb21Ob3coKX1gKVxuICAgICkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgaXQoJ2NhbGxzIG9uQ2xpY2sgd2hlbiBjb21wb25lbnQgaXMgY2xpY2tlZCcsICgpID0+IHtcbiAgICBjb25zdCBvbkNsaWNrTW9jayA9IGplc3QuZm4oKTtcbiAgICBjb25zdCB7Z2V0QnlUZXh0fSA9IHJlbmRlcldpdGhUaGVtZSg8Q2xvdWRJdGVtIHZpcz17bW9ja1Zpc30gb25DbGljaz17b25DbGlja01vY2t9IC8+KTtcbiAgICBmaXJlRXZlbnQuY2xpY2soZ2V0QnlUZXh0KCdUZXN0IFRpdGxlJykpO1xuICAgIGV4cGVjdChvbkNsaWNrTW9jaykudG9IYXZlQmVlbkNhbGxlZCgpO1xuICB9KTtcbn0pO1xuIl19