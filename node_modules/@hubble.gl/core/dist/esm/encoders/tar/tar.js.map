{"version":3,"file":"tar.js","names":["utils","header","blockSize","recordSize","Tar","constructor","recordsPerBlock","written","out","clean","blocks","length","save","bind","clear","append","filepath","input","opts","checksum","stringToUint8","Uint8Array","prototype","errorInput","toString","match","errorMessage","mode","parseInt","mtime","Math","floor","Number","Date","uid","gid","data","fileName","fileMode","pad","fileSize","type","ustar","owner","group","Object","keys","forEach","key","i","value","charCodeAt","headerArr","format","headerLength","ceil","inputLength","push","buffers","chunks","max","pow","chunk","b","c","buffer","set","Blob"],"sources":["../../../../src/encoders/tar/tar.js"],"sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as utils from './utils';\nimport * as header from './header';\n\nlet blockSize;\nconst recordSize = 512;\n\nclass Tar {\n  /** @type {{ header: any; input: string | Uint8Array; headerLength: number; inputLength: number; }[]} */\n  blocks;\n  /**\n   * @param {number} [recordsPerBlock]\n   */\n  constructor(recordsPerBlock) {\n    this.written = 0;\n    blockSize = (recordsPerBlock || 20) * recordSize;\n    this.out = utils.clean(blockSize);\n    this.blocks = [];\n    this.length = 0;\n    this.save = this.save.bind(this);\n    this.clear = this.clear.bind(this);\n    this.append = this.append.bind(this);\n  }\n\n  /**\n   * @param {string} filepath\n   * @param {string | Uint8Array} input\n   * @param {{ mode?: any; mtime?: any; uid?: any; gid?: any; owner?: any; group?: any; }} [opts]\n   */\n  append(filepath, input, opts) {\n    let checksum;\n\n    if (typeof input === 'string') {\n      input = utils.stringToUint8(input);\n    } else if (input.constructor !== Uint8Array.prototype.constructor) {\n      const errorInput = input.constructor\n        .toString()\n        .match(/function\\s*([$A-Za-z_][0-9A-Za-z_]*)\\s*\\(/)[1];\n      const errorMessage = `Invalid input type. You gave me: ${errorInput}`;\n      throw errorMessage;\n    }\n\n    opts = opts || {};\n\n    const mode = opts.mode || parseInt('777', 8) & 0xfff;\n    const mtime = opts.mtime || Math.floor(Number(new Date()) / 1000);\n    const uid = opts.uid || 0;\n    const gid = opts.gid || 0;\n\n    const data = {\n      fileName: filepath,\n      fileMode: utils.pad(mode, 7),\n      uid: utils.pad(uid, 7),\n      gid: utils.pad(gid, 7),\n      fileSize: utils.pad(input.length, 11),\n      mtime: utils.pad(mtime, 11),\n      checksum: '        ',\n      // 0 = just a file\n      type: '0',\n      ustar: 'ustar  ',\n      owner: opts.owner || '',\n      group: opts.group || ''\n    };\n\n    // calculate the checksum\n    checksum = 0;\n    Object.keys(data).forEach(key => {\n      let i;\n      const value = data[key];\n      let length;\n\n      for (i = 0, length = value.length; i < length; i += 1) {\n        checksum += value.charCodeAt(i);\n      }\n    });\n\n    data.checksum = `${utils.pad(checksum, 6)}\\u0000 `;\n\n    const headerArr = header.format(data);\n\n    const headerLength = Math.ceil(headerArr.length / recordSize) * recordSize;\n    const inputLength = Math.ceil(input.length / recordSize) * recordSize;\n\n    this.blocks.push({\n      header: headerArr,\n      input,\n      headerLength,\n      inputLength\n    });\n  }\n\n  save() {\n    const buffers = [];\n    const chunks = [];\n    let length = 0;\n    const max = Math.pow(2, 20);\n\n    let chunk = [];\n    this.blocks.forEach(b => {\n      if (length + b.headerLength + b.inputLength > max) {\n        chunks.push({blocks: chunk, length});\n        chunk = [];\n        length = 0;\n      }\n      chunk.push(b);\n      length += b.headerLength + b.inputLength;\n    });\n    chunks.push({blocks: chunk, length});\n\n    chunks.forEach(c => {\n      const buffer = new Uint8Array(c.length);\n      let written = 0;\n      c.blocks.forEach(b => {\n        buffer.set(b.header, written);\n        written += b.headerLength;\n        buffer.set(b.input, written);\n        written += b.inputLength;\n      });\n      buffers.push(buffer);\n    });\n\n    buffers.push(new Uint8Array(2 * recordSize));\n\n    return new Blob(buffers, {type: 'octet/stream'});\n  }\n\n  clear() {\n    this.written = 0;\n    this.out = utils.clean(blockSize);\n  }\n}\n\nexport default Tar;\n"],"mappings":"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"}