"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LayerTypeDropdownListFactory = LayerTypeDropdownListFactory;
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _classnames = _interopRequireDefault(require("classnames"));

var _dropdownList = require("../../common/item-selector/dropdown-list");

var _templateObject, _templateObject2;

var DropdownListWrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  ", ";\n  background-color: ", ";\n  border-top: 1px solid ", ";\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  padding: ", "px 0 0 ", "px;\n"])), function (props) {
  return props.theme.dropdownList;
}, function (props) {
  return props.theme.dropdownListBgd;
}, function (props) {
  return props.theme.dropdownListBorderTop;
}, function (props) {
  return props.theme.layerTypeIconPdL;
}, function (props) {
  return props.theme.layerTypeIconPdL;
});

var StyledDropdownListItem = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  padding-bottom: ", "px;\n  padding-right: ", "px;\n\n  &.disabled {\n    pointer-events: none;\n    opacity: 0.3;\n  }\n\n  &.selected {\n    .layer-type-selector__item__icon {\n      border: 1px solid #caf2f4;\n    }\n  }\n\n  :hover,\n  &.selected {\n    cursor: pointer;\n    .layer-type-selector__item__icon {\n      color: ", ";\n    }\n\n    .layer-type-selector__item__label {\n      color: ", ";\n    }\n  }\n"])), function (props) {
  return props.theme.layerTypeIconPdL;
}, function (props) {
  return props.theme.layerTypeIconPdL;
}, function (props) {
  return props.theme.activeColor;
}, function (props) {
  return props.theme.textColor;
});

function LayerTypeDropdownListFactory() {
  var LayerTypeDropdownList = function LayerTypeDropdownList(_ref) {
    var onOptionSelected = _ref.onOptionSelected,
        options = _ref.options,
        selectedItems = _ref.selectedItems,
        selectionIndex = _ref.selectionIndex,
        customListItemComponent = _ref.customListItemComponent;
    var onSelectOption = (0, _react.useCallback)(function (e, value) {
      e.preventDefault();
      onOptionSelected(value, e);
    }, [onOptionSelected]);
    var ListItemComponent = customListItemComponent;
    return /*#__PURE__*/_react["default"].createElement(DropdownListWrapper, {
      className: _dropdownList.classList.list
    }, options.map(function (value, i) {
      return /*#__PURE__*/_react["default"].createElement(StyledDropdownListItem, {
        className: (0, _classnames["default"])('layer-type-selector__item', {
          selected: selectedItems.find(function (it) {
            return it.id === value.id;
          }),
          hover: selectionIndex === i,
          disabled: value.disabled
        }),
        key: "".concat(value.id, "_").concat(i),
        onMouseDown: function onMouseDown(e) {
          return onSelectOption(e, value);
        },
        onClick: function onClick(e) {
          return onSelectOption(e, value);
        }
      }, /*#__PURE__*/_react["default"].createElement(ListItemComponent, {
        value: value,
        isTile: true
      }));
    }));
  };

  return LayerTypeDropdownList;
}

var _default = LayerTypeDropdownListFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaWRlLXBhbmVsL2xheWVyLXBhbmVsL2xheWVyLXR5cGUtZHJvcGRvd24tbGlzdC50c3giXSwibmFtZXMiOlsiRHJvcGRvd25MaXN0V3JhcHBlciIsInN0eWxlZCIsImRpdiIsInByb3BzIiwidGhlbWUiLCJkcm9wZG93bkxpc3QiLCJkcm9wZG93bkxpc3RCZ2QiLCJkcm9wZG93bkxpc3RCb3JkZXJUb3AiLCJsYXllclR5cGVJY29uUGRMIiwiU3R5bGVkRHJvcGRvd25MaXN0SXRlbSIsImFjdGl2ZUNvbG9yIiwidGV4dENvbG9yIiwiTGF5ZXJUeXBlRHJvcGRvd25MaXN0RmFjdG9yeSIsIkxheWVyVHlwZURyb3Bkb3duTGlzdCIsIm9uT3B0aW9uU2VsZWN0ZWQiLCJvcHRpb25zIiwic2VsZWN0ZWRJdGVtcyIsInNlbGVjdGlvbkluZGV4IiwiY3VzdG9tTGlzdEl0ZW1Db21wb25lbnQiLCJvblNlbGVjdE9wdGlvbiIsImUiLCJ2YWx1ZSIsInByZXZlbnREZWZhdWx0IiwiTGlzdEl0ZW1Db21wb25lbnQiLCJjbGFzc0xpc3QiLCJsaXN0IiwibWFwIiwiaSIsInNlbGVjdGVkIiwiZmluZCIsIml0IiwiaWQiLCJob3ZlciIsImRpc2FibGVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBdUJBLElBQU1BLG1CQUFtQixHQUFHQyw2QkFBT0MsR0FBViw2UEFDckIsVUFBQUMsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZQyxZQUFoQjtBQUFBLENBRGdCLEVBRUgsVUFBQUYsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZRSxlQUFoQjtBQUFBLENBRkYsRUFHQyxVQUFBSCxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlHLHFCQUFoQjtBQUFBLENBSE4sRUFPWixVQUFBSixLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlJLGdCQUFoQjtBQUFBLENBUE8sRUFPbUMsVUFBQUwsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZSSxnQkFBaEI7QUFBQSxDQVB4QyxDQUF6Qjs7QUFVQSxJQUFNQyxzQkFBc0IsR0FBR1IsNkJBQU9DLEdBQVYsOGZBQ1IsVUFBQUMsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZSSxnQkFBaEI7QUFBQSxDQURHLEVBRVQsVUFBQUwsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZSSxnQkFBaEI7QUFBQSxDQUZJLEVBbUJiLFVBQUFMLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLEtBQU4sQ0FBWU0sV0FBaEI7QUFBQSxDQW5CUSxFQXVCYixVQUFBUCxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlPLFNBQWhCO0FBQUEsQ0F2QlEsQ0FBNUI7O0FBNEJPLFNBQVNDLDRCQUFULEdBQXdDO0FBQzdDLE1BQU1DLHFCQUEyRCxHQUFHLFNBQTlEQSxxQkFBOEQsT0FNOUQ7QUFBQSxRQUxKQyxnQkFLSSxRQUxKQSxnQkFLSTtBQUFBLFFBSkpDLE9BSUksUUFKSkEsT0FJSTtBQUFBLFFBSEpDLGFBR0ksUUFISkEsYUFHSTtBQUFBLFFBRkpDLGNBRUksUUFGSkEsY0FFSTtBQUFBLFFBREpDLHVCQUNJLFFBREpBLHVCQUNJO0FBQ0osUUFBTUMsY0FBYyxHQUFHLHdCQUNyQixVQUFDQyxDQUFELEVBQUlDLEtBQUosRUFBYztBQUNaRCxNQUFBQSxDQUFDLENBQUNFLGNBQUY7QUFDQVIsTUFBQUEsZ0JBQWdCLENBQUNPLEtBQUQsRUFBUUQsQ0FBUixDQUFoQjtBQUNELEtBSm9CLEVBS3JCLENBQUNOLGdCQUFELENBTHFCLENBQXZCO0FBUUEsUUFBTVMsaUJBQWlCLEdBQUdMLHVCQUExQjtBQUVBLHdCQUNFLGdDQUFDLG1CQUFEO0FBQXFCLE1BQUEsU0FBUyxFQUFFTSx3QkFBVUM7QUFBMUMsT0FDR1YsT0FBTyxDQUFDVyxHQUFSLENBQVksVUFBQ0wsS0FBRCxFQUFRTSxDQUFSO0FBQUEsMEJBQ1gsZ0NBQUMsc0JBQUQ7QUFDRSxRQUFBLFNBQVMsRUFBRSw0QkFBVywyQkFBWCxFQUF3QztBQUNqREMsVUFBQUEsUUFBUSxFQUFFWixhQUFhLENBQUNhLElBQWQsQ0FBbUIsVUFBQUMsRUFBRTtBQUFBLG1CQUFJQSxFQUFFLENBQUNDLEVBQUgsS0FBVVYsS0FBSyxDQUFDVSxFQUFwQjtBQUFBLFdBQXJCLENBRHVDO0FBRWpEQyxVQUFBQSxLQUFLLEVBQUVmLGNBQWMsS0FBS1UsQ0FGdUI7QUFHakRNLFVBQUFBLFFBQVEsRUFBRVosS0FBSyxDQUFDWTtBQUhpQyxTQUF4QyxDQURiO0FBTUUsUUFBQSxHQUFHLFlBQUtaLEtBQUssQ0FBQ1UsRUFBWCxjQUFpQkosQ0FBakIsQ0FOTDtBQU9FLFFBQUEsV0FBVyxFQUFFLHFCQUFDUCxDQUFEO0FBQUEsaUJBQW1CRCxjQUFjLENBQUNDLENBQUQsRUFBSUMsS0FBSixDQUFqQztBQUFBLFNBUGY7QUFRRSxRQUFBLE9BQU8sRUFBRSxpQkFBQ0QsQ0FBRDtBQUFBLGlCQUFtQkQsY0FBYyxDQUFDQyxDQUFELEVBQUlDLEtBQUosQ0FBakM7QUFBQTtBQVJYLHNCQVVFLGdDQUFDLGlCQUFEO0FBQW1CLFFBQUEsS0FBSyxFQUFFQSxLQUExQjtBQUFpQyxRQUFBLE1BQU07QUFBdkMsUUFWRixDQURXO0FBQUEsS0FBWixDQURILENBREY7QUFrQkQsR0FuQ0Q7O0FBcUNBLFNBQU9SLHFCQUFQO0FBQ0Q7O2VBRWNELDRCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7dXNlQ2FsbGJhY2ssIE1vdXNlRXZlbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQge2NsYXNzTGlzdH0gZnJvbSAnLi4vLi4vY29tbW9uL2l0ZW0tc2VsZWN0b3IvZHJvcGRvd24tbGlzdCc7XG5cbmV4cG9ydCB0eXBlIExheWVyVHlwZU9wdGlvbiA9IHtcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBpZDogc3RyaW5nO1xuICBsYWJlbDogc3RyaW5nO1xuICBpY29uOiBSZWFjdC5FbGVtZW50VHlwZTtcbn07XG5cbnR5cGUgTGF5ZXJUeXBlRHJvcGRvd25MaXN0UHJvcHMgPSB7XG4gIG9uT3B0aW9uU2VsZWN0ZWQ6IChcbiAgICB2YWx1ZToge1xuICAgICAgaWNvbjogUmVhY3QuRWxlbWVudFR5cGU7XG4gICAgICBsYWJlbDogc3RyaW5nO1xuICAgIH0sXG4gICAgZTogTW91c2VFdmVudFxuICApID0+IHZvaWQ7XG4gIG9wdGlvbnM6IExheWVyVHlwZU9wdGlvbltdO1xuICBzZWxlY3RlZEl0ZW1zOiBMYXllclR5cGVPcHRpb25bXTtcbiAgc2VsZWN0aW9uSW5kZXg6IG51bWJlciB8IG51bGw7XG4gIGN1c3RvbUxpc3RJdGVtQ29tcG9uZW50OiBSZWFjdC5GQzx7dmFsdWU6IExheWVyVHlwZU9wdGlvbjsgaXNUaWxlPzogYm9vbGVhbn0+O1xufTtcblxuY29uc3QgRHJvcGRvd25MaXN0V3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuZHJvcGRvd25MaXN0fTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5kcm9wZG93bkxpc3RCZ2R9O1xuICBib3JkZXItdG9wOiAxcHggc29saWQgJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5kcm9wZG93bkxpc3RCb3JkZXJUb3B9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBwYWRkaW5nOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmxheWVyVHlwZUljb25QZEx9cHggMCAwICR7cHJvcHMgPT4gcHJvcHMudGhlbWUubGF5ZXJUeXBlSWNvblBkTH1weDtcbmA7XG5cbmNvbnN0IFN0eWxlZERyb3Bkb3duTGlzdEl0ZW0gPSBzdHlsZWQuZGl2YFxuICBwYWRkaW5nLWJvdHRvbTogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5sYXllclR5cGVJY29uUGRMfXB4O1xuICBwYWRkaW5nLXJpZ2h0OiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmxheWVyVHlwZUljb25QZEx9cHg7XG5cbiAgJi5kaXNhYmxlZCB7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgb3BhY2l0eTogMC4zO1xuICB9XG5cbiAgJi5zZWxlY3RlZCB7XG4gICAgLmxheWVyLXR5cGUtc2VsZWN0b3JfX2l0ZW1fX2ljb24ge1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NhZjJmNDtcbiAgICB9XG4gIH1cblxuICA6aG92ZXIsXG4gICYuc2VsZWN0ZWQge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAubGF5ZXItdHlwZS1zZWxlY3Rvcl9faXRlbV9faWNvbiB7XG4gICAgICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5hY3RpdmVDb2xvcn07XG4gICAgfVxuXG4gICAgLmxheWVyLXR5cGUtc2VsZWN0b3JfX2l0ZW1fX2xhYmVsIHtcbiAgICAgIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnRleHRDb2xvcn07XG4gICAgfVxuICB9XG5gO1xuXG5leHBvcnQgZnVuY3Rpb24gTGF5ZXJUeXBlRHJvcGRvd25MaXN0RmFjdG9yeSgpIHtcbiAgY29uc3QgTGF5ZXJUeXBlRHJvcGRvd25MaXN0OiBSZWFjdC5GQzxMYXllclR5cGVEcm9wZG93bkxpc3RQcm9wcz4gPSAoe1xuICAgIG9uT3B0aW9uU2VsZWN0ZWQsXG4gICAgb3B0aW9ucyxcbiAgICBzZWxlY3RlZEl0ZW1zLFxuICAgIHNlbGVjdGlvbkluZGV4LFxuICAgIGN1c3RvbUxpc3RJdGVtQ29tcG9uZW50XG4gIH0pID0+IHtcbiAgICBjb25zdCBvblNlbGVjdE9wdGlvbiA9IHVzZUNhbGxiYWNrKFxuICAgICAgKGUsIHZhbHVlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgb25PcHRpb25TZWxlY3RlZCh2YWx1ZSwgZSk7XG4gICAgICB9LFxuICAgICAgW29uT3B0aW9uU2VsZWN0ZWRdXG4gICAgKTtcblxuICAgIGNvbnN0IExpc3RJdGVtQ29tcG9uZW50ID0gY3VzdG9tTGlzdEl0ZW1Db21wb25lbnQ7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPERyb3Bkb3duTGlzdFdyYXBwZXIgY2xhc3NOYW1lPXtjbGFzc0xpc3QubGlzdH0+XG4gICAgICAgIHtvcHRpb25zLm1hcCgodmFsdWUsIGkpID0+IChcbiAgICAgICAgICA8U3R5bGVkRHJvcGRvd25MaXN0SXRlbVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdsYXllci10eXBlLXNlbGVjdG9yX19pdGVtJywge1xuICAgICAgICAgICAgICBzZWxlY3RlZDogc2VsZWN0ZWRJdGVtcy5maW5kKGl0ID0+IGl0LmlkID09PSB2YWx1ZS5pZCksXG4gICAgICAgICAgICAgIGhvdmVyOiBzZWxlY3Rpb25JbmRleCA9PT0gaSxcbiAgICAgICAgICAgICAgZGlzYWJsZWQ6IHZhbHVlLmRpc2FibGVkXG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIGtleT17YCR7dmFsdWUuaWR9XyR7aX1gfVxuICAgICAgICAgICAgb25Nb3VzZURvd249eyhlOiBNb3VzZUV2ZW50KSA9PiBvblNlbGVjdE9wdGlvbihlLCB2YWx1ZSl9XG4gICAgICAgICAgICBvbkNsaWNrPXsoZTogTW91c2VFdmVudCkgPT4gb25TZWxlY3RPcHRpb24oZSwgdmFsdWUpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxMaXN0SXRlbUNvbXBvbmVudCB2YWx1ZT17dmFsdWV9IGlzVGlsZSAvPlxuICAgICAgICAgIDwvU3R5bGVkRHJvcGRvd25MaXN0SXRlbT5cbiAgICAgICAgKSl9XG4gICAgICA8L0Ryb3Bkb3duTGlzdFdyYXBwZXI+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gTGF5ZXJUeXBlRHJvcGRvd25MaXN0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYXllclR5cGVEcm9wZG93bkxpc3RGYWN0b3J5O1xuIl19