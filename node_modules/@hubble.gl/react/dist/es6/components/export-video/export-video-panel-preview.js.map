{"version":3,"sources":["../../../../src/components/export-video/export-video-panel-preview.js"],"names":["React","Component","DeckGL","StaticMap","MapboxLayer","ExportVideoPanelPreview","constructor","props","user","mapData","mapStyle","bottomMapStyle","owner","mapId","id","mapRef","createRef","deckRef","state","timestamp","latitude","longitude","glContext","undefined","memoDevicePixelRatio","window","devicePixelRatio","_onLayerSetDomain","bind","_renderLayer","_onMapLoad","_resizeVideo","_getContainerHeight","componentDidUpdate","prevProps","resolution","componentWillUnmount","_setDevicePixelRatio","exportVideoWidth","current","map","getMap","resize","idx","colorDomain","overlays","visState","mapState","datasets","layers","layerData","hoverInfo","clicked","interactionConfig","animationConfig","layer","data","gpuFilter","config","dataId","objectHovered","layerCallbacks","onSetLayerDomain","val","layerOverlay","renderLayer","concat","aspectRatio","deck","addLayer","on","adapter","onAfterRender","forceUpdate","render","layerOrder","deckGlLayers","length","slice","reverse","reduce","deckStyle","width","height","containerStyle","position","overflow","viewState","stencil","gl","setState","setViewState","getProps"],"mappings":";AAoBA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AAEA,OAAO,MAAMC,uBAAN,SAAsCJ,SAAtC,CAAgD;AACrDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAMC,IAAI,GAAG,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,QAAnB,CAA4BC,cAA5B,CAA2CC,KAAxD;AACA,UAAMC,KAAK,GAAG,KAAKN,KAAL,CAAWE,OAAX,CAAmBC,QAAnB,CAA4BC,cAA5B,CAA2CG,EAAzD;AAEA,SAAKC,MAAL,GAAcf,KAAK,CAACgB,SAAN,EAAd;AACA,SAAKC,OAAL,GAAejB,KAAK,CAACgB,SAAN,EAAf;AAEA,SAAKE,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE,KADD;AAETC,QAAAA,SAAS,EAAE;AAFF,OADA;AAKXX,MAAAA,QAAQ,4BAAqBF,IAArB,cAA6BK,KAA7B,CALG;AAMXS,MAAAA,SAAS,EAAEC,SANA;AAOXC,MAAAA,oBAAoB,EAAEC,MAAM,CAACC;AAPlB,KAAb;AAUA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBJ,IAAzB,CAA8B,IAA9B,CAA3B;;AAEA,SAAKG,YAAL;AACD;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACC,UAAV,KAAyB,KAAK5B,KAAL,CAAW4B,UAAxC,EAAoD;AAClD,WAAKJ,YAAL;AACD;AACF;;AAEDK,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AAACZ,MAAAA;AAAD,QAAyB,KAAKN,KAApC;;AACA,SAAKmB,oBAAL,CAA0Bb,oBAA1B;AACD;;AAEDO,EAAAA,YAAY,GAAG;AACb,UAAM;AAACO,MAAAA,gBAAD;AAAmBH,MAAAA;AAAnB,QAAiC,KAAK5B,KAA5C;;AACA,SAAK8B,oBAAL,CAA0BF,UAAU,CAAC,CAAD,CAAV,GAAgBG,gBAA1C;;AACA,QAAI,KAAKvB,MAAL,CAAYwB,OAAhB,EAAyB;AACvB,YAAMC,GAAG,GAAG,KAAKzB,MAAL,CAAYwB,OAAZ,CAAoBE,MAApB,EAAZ;AACAD,MAAAA,GAAG,CAACE,MAAJ;AACD;AACF;;AAEDL,EAAAA,oBAAoB,CAACX,gBAAD,EAAmB;AAmBrCD,IAAAA,MAAM,CAACC,gBAAP,GAA0BA,gBAA1B;AACD;;AAEDC,EAAAA,iBAAiB,CAACgB,GAAD,EAAMC,WAAN,EAAmB,CAKnC;;AAEDf,EAAAA,YAAY,CAACgB,QAAD,EAAWF,GAAX,EAAgB;AAC1B,UAAM;AACJlC,MAAAA,OAAO,EAAE;AAACqC,QAAAA,QAAD;AAAWC,QAAAA;AAAX;AADL,QAEF,KAAKxC,KAFT;AAIA,UAAM;AACJyC,MAAAA,QADI;AAEJC,MAAAA,MAFI;AAGJC,MAAAA,SAHI;AAIJC,MAAAA,SAJI;AAKJC,MAAAA,OALI;AAMJC,MAAAA,iBANI;AAOJC,MAAAA;AAPI,QAQFR,QARJ;AAUA,UAAMS,KAAK,GAAGN,MAAM,CAACN,GAAD,CAApB;AACA,UAAMa,IAAI,GAAGN,SAAS,CAACP,GAAD,CAAtB;AACA,UAAM;AAACc,MAAAA;AAAD,QAAcT,QAAQ,CAACO,KAAK,CAACG,MAAN,CAAaC,MAAd,CAAR,IAAiC,EAArD;AAEA,UAAMC,aAAa,GAAGR,OAAO,IAAID,SAAjC;AACA,UAAMU,cAAc,GAAG;AACrBC,MAAAA,gBAAgB,EAAEC,GAAG,IAAI,KAAKpC,iBAAL,CAAuBgB,GAAvB,EAA4BoB,GAA5B;AADJ,KAAvB;AAKA,UAAMC,YAAY,GAAGT,KAAK,CAACU,WAAN,CAAkB;AACrCT,MAAAA,IADqC;AAErCC,MAAAA,SAFqC;AAGrCd,MAAAA,GAHqC;AAIrCU,MAAAA,iBAJqC;AAKrCQ,MAAAA,cALqC;AAMrCd,MAAAA,QANqC;AAOrCO,MAAAA,eAPqC;AAQrCM,MAAAA;AARqC,KAAlB,CAArB;AAUA,WAAOf,QAAQ,CAACqB,MAAT,CAAgBF,YAAY,IAAI,EAAhC,CAAP;AACD;;AAEDhC,EAAAA,mBAAmB,GAAG;AACpB,UAAM;AAACM,MAAAA,gBAAD;AAAmBH,MAAAA;AAAnB,QAAiC,KAAK5B,KAA5C;AACA,UAAM4D,WAAW,GAAGhC,UAAU,CAAC,CAAD,CAAV,GAAgBA,UAAU,CAAC,CAAD,CAA9C;AACA,WAAOG,gBAAgB,GAAG6B,WAA1B;AACD;;AAEDrC,EAAAA,UAAU,GAAG;AAEX,UAAMU,GAAG,GAAG,KAAKzB,MAAL,CAAYwB,OAAZ,CAAoBE,MAApB,EAAZ;AACA,UAAM2B,IAAI,GAAG,KAAKnD,OAAL,CAAasB,OAAb,CAAqB6B,IAAlC;AACA5B,IAAAA,GAAG,CAAC6B,QAAJ,CAAa,IAAIjE,WAAJ,CAAgB;AAACU,MAAAA,EAAE,EAAE,SAAL;AAAgBsD,MAAAA;AAAhB,KAAhB,CAAb;AAKA5B,IAAAA,GAAG,CAAC8B,EAAJ,CAAO,QAAP,EAAiB,MACf,KAAK/D,KAAL,CAAWgE,OAAX,CAAmBC,aAAnB,CAAiC,MAAM;AACrC,WAAKC,WAAL;AACD,KAFD,CADF;AAKAjC,IAAAA,GAAG,CAACE,MAAJ;AAGD;;AAEDgC,EAAAA,MAAM,GAAG;AAKP,UAAMC,UAAU,GAAG,KAAKpE,KAAL,CAAWE,OAAX,CAAmBqC,QAAnB,CAA4B6B,UAA/C;AAQA,QAAIC,YAAY,GAAG,EAAnB;;AAIA,QAAID,UAAU,IAAIA,UAAU,CAACE,MAA7B,EAAqC;AAEnCD,MAAAA,YAAY,GAAGD,UAAU,CACtBG,KADY,GAEZC,OAFY,GAMZC,MANY,CAML,KAAKnD,YANA,EAMc,EANd,CAAf;AAOD;;AAED,UAAMoD,SAAS,GAAG;AAChBC,MAAAA,KAAK,EAAE,MADS;AAEhBC,MAAAA,MAAM,EAAE;AAFQ,KAAlB;AAKA,UAAMC,cAAc,GAAG;AACrBF,MAAAA,KAAK,YAAK,KAAK3E,KAAL,CAAW+B,gBAAhB,OADgB;AAErB6C,MAAAA,MAAM,YAAK,KAAKnD,mBAAL,EAAL,OAFe;AAGrBqD,MAAAA,QAAQ,EAAE,UAHW;AAIrBC,MAAAA,QAAQ,EAAE;AAJW,KAAvB;AAOA,WACE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,KAAK,EAAEF;AAA7B,OACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAE,KAAKnE,OADZ;AAEE,MAAA,SAAS,EAAE,KAAKV,KAAL,CAAWgF,SAFxB;AAGE,MAAA,EAAE,EAAC,kBAHL;AAIE,MAAA,MAAM,EAAEX,YAJV;AAKE,MAAA,KAAK,EAAEK,SALT;AAME,MAAA,UAAU,EAAE,IANd;AAOE,MAAA,SAAS,EAAE;AAACO,QAAAA,OAAO,EAAE;AAAV,OAPb;AAQE,MAAA,kBAAkB,EAAEC,EAAE,IAAI,KAAKC,QAAL,CAAc;AAACpE,QAAAA,SAAS,EAAEmE;AAAZ,OAAd,CAR5B;AASE,MAAA,iBAAiB,EAAE,KAAKlF,KAAL,CAAWoF;AAThC,OAWM,KAAKpF,KAAL,CAAWgE,OAAX,CAAmBqB,QAAnB,CAA4B,KAAK3E,OAAjC,EAA0C,MAAM,CAAE,CAAlD,CAXN,GAaG,KAAKC,KAAL,CAAWI,SAAX,IACC,oBAAC,SAAD;AACE,MAAA,GAAG,EAAE,KAAKP,MADZ;AAGE,MAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWR,QAHvB;AAIE,MAAA,mBAAmB,EAAE,IAJvB;AAKE,MAAA,EAAE,EAAE,KAAKQ,KAAL,CAAWI,SALjB;AAME,MAAA,MAAM,EAAE,KAAKQ;AANf,MAdJ,CADF,CADF;AA4BD;;AAhNoD","sourcesContent":["// Copyright (c) 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {StaticMap} from 'react-map-gl';\nimport {MapboxLayer} from '@deck.gl/mapbox';\n\nexport class ExportVideoPanelPreview extends Component {\n  constructor(props) {\n    super(props);\n    const user = this.props.mapData.mapStyle.bottomMapStyle.owner;\n    const mapId = this.props.mapData.mapStyle.bottomMapStyle.id;\n\n    this.mapRef = React.createRef();\n    this.deckRef = React.createRef();\n\n    this.state = {\n      timestamp: {\n        latitude: 47.65,\n        longitude: 7\n      },\n      mapStyle: `mapbox://styles/${user}/${mapId}`, // Unsure if mapStyle would ever change but allowing it just in case\n      glContext: undefined,\n      memoDevicePixelRatio: window.devicePixelRatio // memoize\n    };\n\n    this._onLayerSetDomain = this._onLayerSetDomain.bind(this);\n    this._renderLayer = this._renderLayer.bind(this);\n    this._onMapLoad = this._onMapLoad.bind(this);\n    this._resizeVideo = this._resizeVideo.bind(this);\n    this._getContainerHeight = this._getContainerHeight.bind(this);\n\n    this._resizeVideo();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.resolution !== this.props.resolution) {\n      this._resizeVideo();\n    }\n  }\n\n  componentWillUnmount() {\n    const {memoDevicePixelRatio} = this.state;\n    this._setDevicePixelRatio(memoDevicePixelRatio);\n  }\n\n  _resizeVideo() {\n    const {exportVideoWidth, resolution} = this.props;\n    this._setDevicePixelRatio(resolution[0] / exportVideoWidth);\n    if (this.mapRef.current) {\n      const map = this.mapRef.current.getMap();\n      map.resize();\n    }\n  }\n\n  _setDevicePixelRatio(devicePixelRatio) {\n    /**\n     * TODO: This is the only way to trick mapbox into scaling its render buffer up\n     * to match the desired resolution. It is built to always fit it's render buffer size\n     * to it's CSS container size, which makes it impossible to make a small \"preview\" box.\n     *\n     * deck.gl has the useDevicePixels prop, which would have been used if it also changed mapbox.\n     * https://github.com/visgl/luma.gl/pull/1155 for background.\n     *\n     * Compare implementations of luma.gl to mapbox for context:\n     * https://github.com/visgl/luma.gl/blob/f622105e30c4dcda434f80ebc4680356003b12fa/modules/gltools/src/utils/device-pixels.js#L31\n     * https://github.com/mapbox/mapbox-gl-js/blob/3136a53235cf17b732e84c9945c4e85ba3369a93/src/ui/map.js#L2324\n     *\n     * In luma the scaler can be overriden by useDevicePixels.\n     *\n     * The workaround is to change window.devicePixelRatio while the component is mounted to scale up the render buffers of deck and mapbox.\n     * This is hacky and can cause issues in certain applications. We should try to produce a better solution.\n     */\n    // @ts-ignore\n    window.devicePixelRatio = devicePixelRatio;\n  }\n\n  _onLayerSetDomain(idx, colorDomain) {\n    // TODO: this isn't dispatched to the redux store yet.\n    // layerConfigChange(this.props.mapData.visState.layers[idx], {\n    //   colorDomain\n    // });\n  }\n\n  _renderLayer(overlays, idx) {\n    const {\n      mapData: {visState, mapState}\n    } = this.props;\n\n    const {\n      datasets,\n      layers,\n      layerData,\n      hoverInfo,\n      clicked,\n      interactionConfig,\n      animationConfig\n    } = visState;\n\n    const layer = layers[idx];\n    const data = layerData[idx];\n    const {gpuFilter} = datasets[layer.config.dataId] || {};\n\n    const objectHovered = clicked || hoverInfo;\n    const layerCallbacks = {\n      onSetLayerDomain: val => this._onLayerSetDomain(idx, val)\n    };\n\n    // Layer is Layer class\n    const layerOverlay = layer.renderLayer({\n      data,\n      gpuFilter,\n      idx,\n      interactionConfig,\n      layerCallbacks,\n      mapState,\n      animationConfig,\n      objectHovered\n    });\n    return overlays.concat(layerOverlay || []);\n  }\n\n  _getContainerHeight() {\n    const {exportVideoWidth, resolution} = this.props;\n    const aspectRatio = resolution[0] / resolution[1];\n    return exportVideoWidth / aspectRatio;\n  }\n\n  _onMapLoad() {\n    // Adds mapbox layer to modal\n    const map = this.mapRef.current.getMap();\n    const deck = this.deckRef.current.deck;\n    map.addLayer(new MapboxLayer({id: 'my-deck', deck}));\n    // TODO trying to make map scale to 100% of modal\n    // map.on('load', function () {\n    //   map.resize();\n    // });\n    map.on('render', () =>\n      this.props.adapter.onAfterRender(() => {\n        this.forceUpdate();\n      })\n    );\n    map.resize();\n    // map.setCenter([this.props.mapData.mapState.longitude, this.props.mapData.mapState.latitude]);\n    // console.log(\"this.props.mapData.mapState\", this.props.mapData.mapState)\n  }\n\n  render() {\n    // const mapStyle = this.mapData.mapStyle;\n    // const mapState = this.props.mapData.mapState;\n    // const layers = this.mapData.visState.layers;\n    // const layerData = this.mapData.visState.layerData;\n    const layerOrder = this.props.mapData.visState.layerOrder;\n    // const animationConfig = this.mapData.visState.animationConfig;\n\n    // Map data\n    // const mapboxApiAccessToken = this.props.mapData.mapStyle.mapboxApiAccessToken;\n    // const mapboxApiUrl = this.props.mapData.mapStyle.mapboxApiUrl;\n\n    // define trip and geojson layers\n    let deckGlLayers = [];\n\n    // TODO refactor this. Layers are reverse, filtered, etc. only to be redefined later\n    // wait until data is ready before render data layers\n    if (layerOrder && layerOrder.length) {\n      // last layer render first\n      deckGlLayers = layerOrder\n        .slice()\n        .reverse()\n        // .filter(\n        //   idx => layers[idx].overlayType === OVERLAY_TYPE.deckgl && layers[idx].id\n        // )\n        .reduce(this._renderLayer, []);\n    }\n\n    const deckStyle = {\n      width: '100%',\n      height: '100%'\n    };\n\n    const containerStyle = {\n      width: `${this.props.exportVideoWidth}px`,\n      height: `${this._getContainerHeight()}px`,\n      position: 'relative',\n      overflow: 'auto'\n    };\n\n    return (\n      <div id=\"deck-canvas\" style={containerStyle}>\n        <DeckGL\n          ref={this.deckRef}\n          viewState={this.props.viewState}\n          id=\"hubblegl-overlay\"\n          layers={deckGlLayers}\n          style={deckStyle}\n          controller={true}\n          glOptions={{stencil: true}}\n          onWebGLInitialized={gl => this.setState({glContext: gl})}\n          onViewStateChange={this.props.setViewState}\n          // onClick={visStateActions.onLayerClick}\n          {...this.props.adapter.getProps(this.deckRef, () => {})}\n        >\n          {this.state.glContext && (\n            <StaticMap\n              ref={this.mapRef}\n              // reuseMaps // Part of default example but causes modal to lose Mapbox tile layer?\n              mapStyle={this.state.mapStyle}\n              preventStyleDiffing={true}\n              gl={this.state.glContext}\n              onLoad={this._onMapLoad}\n            />\n          )}\n        </DeckGL>\n      </div>\n    );\n  }\n}\n"],"file":"export-video-panel-preview.js"}