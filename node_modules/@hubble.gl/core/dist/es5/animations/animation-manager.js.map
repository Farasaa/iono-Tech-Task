{"version":3,"file":"animation-manager.js","names":["AnimationManager","timeline","undefined","animations","Timeline","animation","attachAnimation","attachKeyframes","id","animationId","params","setKeyframes","getKeyframes","Object","values","forEach","draw"],"sources":["../../../src/animations/animation-manager.js"],"sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {Timeline} from '@luma.gl/engine';\n\nexport default class AnimationManager {\n  timeline;\n  animations = {};\n\n  /**\n   * @param {Object} params\n   * @param {any} params.timeline\n   * @param {any[]} params.animations\n   */\n  constructor({timeline = undefined, animations = []}) {\n    this.timeline = timeline || new Timeline();\n    for (const animation of animations) {\n      this.attachAnimation(animation);\n    }\n  }\n\n  attachAnimation(animation) {\n    animation.attachKeyframes(this.timeline);\n    this.animations[animation.id] = animation;\n  }\n\n  setKeyframes(animationId, params) {\n    this.animations[animationId].setKeyframes({\n      timeline: this.timeline,\n      ...params\n    });\n  }\n\n  getKeyframes(animationId) {\n    return this.animations[animationId].getKeyframes();\n  }\n\n  getAnimation(animationId) {\n    return this.animations[animationId];\n  }\n\n  draw() {\n    Object.values(this.animations).forEach(animation => animation.draw());\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;IAEqBA,gB;EASnB,gCAAqD;IAAA,yBAAxCC,QAAwC;IAAA,IAAxCA,QAAwC,8BAA7BC,SAA6B;IAAA,2BAAlBC,UAAkB;IAAA,IAAlBA,UAAkB,gCAAL,EAAK;IAAA;IAAA;IAAA,kDAPxC,EAOwC;IACnD,KAAKF,QAAL,GAAgBA,QAAQ,IAAI,IAAIG,gBAAJ,EAA5B;;IADmD,2CAE3BD,UAF2B;IAAA;;IAAA;MAEnD,oDAAoC;QAAA,IAAzBE,SAAyB;QAClC,KAAKC,eAAL,CAAqBD,SAArB;MACD;IAJkD;MAAA;IAAA;MAAA;IAAA;EAKpD;;;;WAED,yBAAgBA,SAAhB,EAA2B;MACzBA,SAAS,CAACE,eAAV,CAA0B,KAAKN,QAA/B;MACA,KAAKE,UAAL,CAAgBE,SAAS,CAACG,EAA1B,IAAgCH,SAAhC;IACD;;;WAED,sBAAaI,WAAb,EAA0BC,MAA1B,EAAkC;MAChC,KAAKP,UAAL,CAAgBM,WAAhB,EAA6BE,YAA7B;QACEV,QAAQ,EAAE,KAAKA;MADjB,GAEKS,MAFL;IAID;;;WAED,sBAAaD,WAAb,EAA0B;MACxB,OAAO,KAAKN,UAAL,CAAgBM,WAAhB,EAA6BG,YAA7B,EAAP;IACD;;;WAED,sBAAaH,WAAb,EAA0B;MACxB,OAAO,KAAKN,UAAL,CAAgBM,WAAhB,CAAP;IACD;;;WAED,gBAAO;MACLI,MAAM,CAACC,MAAP,CAAc,KAAKX,UAAnB,EAA+BY,OAA/B,CAAuC,UAAAV,SAAS;QAAA,OAAIA,SAAS,CAACW,IAAV,EAAJ;MAAA,CAAhD;IACD"}