"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = NotificationItemFactory;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _icons = require("../common/icons");

var _reactMarkdown = _interopRequireDefault(require("react-markdown"));

var _constants = require("@kepler.gl/constants");

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var NotificationItemContentBlock = _styledComponents["default"].div.attrs({
  className: 'notification-item--content-block'
})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: block;\n  position: relative;\n  width: ", "px;\n  margin-left: auto;\n"])), function (props) {
  return props.theme.notificationPanelItemWidth * (1 + Number(props.isExpanded));
});

var NotificationItemContent = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  background-color: ", ";\n  color: #fff;\n  display: flex;\n  flex-direction: row;\n  width: ", "px;\n  height: ", "px;\n  font-size: 11px;\n  margin-bottom: 1rem;\n  padding: 1em;\n  border-radius: 4px;\n  box-shadow: ", ";\n  cursor: pointer;\n"])), function (props) {
  return props.theme.notificationColors[props.type] || '#000';
}, function (props) {
  return props.theme.notificationPanelItemWidth * (1 + Number(props.isExpanded));
}, function (props) {
  return props.theme.notificationPanelItemHeight * (1 + Number(props.isExpanded));
}, function (props) {
  return props.theme.boxShadow;
});

var DeleteIcon = (0, _styledComponents["default"])(_icons.Delete)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  cursor: pointer;\n  width: 13px;\n  height: 13px;\n"])));

var NotificationCounter = _styledComponents["default"].div.attrs({
  className: 'notification-item--counter'
})(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2["default"])(["\n  position: absolute;\n  font-size: 11px;\n  font-weight: bold;\n  text-align: center;\n  left: -4px;\n  bottom: -4px;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  background-color: #ffffff;\n  border: 1px solid ", ";\n  color: ", ";\n  box-shadow: ", ";\n"])), function (props) {
  return props.theme.notificationColors[props.type] || '#000';
}, function (props) {
  return props.theme.notificationColors[props.type] || '#000';
}, function (props) {
  return props.theme.boxShadow;
});

var NotificationMessage = _styledComponents["default"].div.attrs({
  className: 'notification-item--message'
})(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2["default"])(["\n  flex-grow: 2;\n  width: ", "px;\n  margin: 0 1em;\n  overflow: ", ";\n  padding-right: ", ";\n\n  p {\n    margin-top: 0;\n    a {\n      color: #fff;\n      text-decoration: underline;\n    }\n  }\n"])), function (props) {
  return props.theme.notificationPanelItemWidth;
}, function (props) {
  return props.isExpanded ? 'auto' : 'hidden';
}, function (props) {
  return props.isExpanded ? '1em' : 0;
});

var NotificationIcon = _styledComponents["default"].div(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2["default"])(["\n  svg {\n    vertical-align: text-top;\n  }\n"])));

var icons = {
  info: /*#__PURE__*/_react["default"].createElement(_icons.Info, {
    "data-testid": _constants.dataTestIds.infoIcon
  }),
  warning: /*#__PURE__*/_react["default"].createElement(_icons.Warning, {
    "data-testid": _constants.dataTestIds.warningIcon
  }),
  error: /*#__PURE__*/_react["default"].createElement(_icons.Warning, {
    "data-testid": _constants.dataTestIds.errorIcon
  }),
  success: /*#__PURE__*/_react["default"].createElement(_icons.Checkmark, {
    "data-testid": _constants.dataTestIds.successIcon
  })
};

var LinkRenderer = function LinkRenderer(props) {
  return /*#__PURE__*/_react["default"].createElement("a", {
    href: props.href,
    target: "_blank",
    rel: "noopener noreferrer"
  }, props.children);
};

function NotificationItemFactory() {
  return /*#__PURE__*/function (_Component) {
    (0, _inherits2["default"])(NotificationItem, _Component);

    var _super = _createSuper(NotificationItem);

    function NotificationItem() {
      var _this;

      (0, _classCallCheck2["default"])(this, NotificationItem);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _super.call.apply(_super, [this].concat(args));
      (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
        isExpanded: false
      });
      return _this;
    }

    (0, _createClass2["default"])(NotificationItem, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.isExpanded) {
          this.setState({
            isExpanded: true
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            notification = _this$props.notification,
            removeNotification = _this$props.removeNotification;
        var isExpanded = this.state.isExpanded;
        return /*#__PURE__*/_react["default"].createElement(NotificationItemContentBlock, {
          isExpanded: isExpanded,
          theme: this.props.theme
        }, (notification.count || 0) > 1 ? /*#__PURE__*/_react["default"].createElement(NotificationCounter, {
          type: notification.type,
          theme: this.props.theme
        }, notification.count) : null, /*#__PURE__*/_react["default"].createElement(NotificationItemContent, {
          className: "notification-item",
          type: notification.type,
          isExpanded: isExpanded,
          onClick: function onClick() {
            return _this2.setState({
              isExpanded: !isExpanded
            });
          }
        }, /*#__PURE__*/_react["default"].createElement(NotificationIcon, {
          className: "notification-item--icon"
        }, icons[notification.type]), /*#__PURE__*/_react["default"].createElement(NotificationMessage, {
          isExpanded: isExpanded,
          theme: this.props.theme
        }, /*#__PURE__*/_react["default"].createElement(_reactMarkdown["default"], {
          source: notification.message,
          renderers: {
            link: LinkRenderer
          }
        })), typeof removeNotification === 'function' ? /*#__PURE__*/_react["default"].createElement("div", {
          className: "notification-item--action"
        }, /*#__PURE__*/_react["default"].createElement(DeleteIcon, {
          height: "10px",
          onClick: function onClick() {
            return removeNotification(notification.id);
          }
        })) : null));
      }
    }]);
    return NotificationItem;
  }(_react.Component);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub3RpZmljYXRpb24tcGFuZWwvbm90aWZpY2F0aW9uLWl0ZW0udHN4Il0sIm5hbWVzIjpbIk5vdGlmaWNhdGlvbkl0ZW1Db250ZW50QmxvY2siLCJzdHlsZWQiLCJkaXYiLCJhdHRycyIsImNsYXNzTmFtZSIsInByb3BzIiwidGhlbWUiLCJub3RpZmljYXRpb25QYW5lbEl0ZW1XaWR0aCIsIk51bWJlciIsImlzRXhwYW5kZWQiLCJOb3RpZmljYXRpb25JdGVtQ29udGVudCIsIm5vdGlmaWNhdGlvbkNvbG9ycyIsInR5cGUiLCJub3RpZmljYXRpb25QYW5lbEl0ZW1IZWlnaHQiLCJib3hTaGFkb3ciLCJEZWxldGVJY29uIiwiRGVsZXRlIiwiTm90aWZpY2F0aW9uQ291bnRlciIsIk5vdGlmaWNhdGlvbk1lc3NhZ2UiLCJOb3RpZmljYXRpb25JY29uIiwiaWNvbnMiLCJpbmZvIiwiZGF0YVRlc3RJZHMiLCJpbmZvSWNvbiIsIndhcm5pbmciLCJ3YXJuaW5nSWNvbiIsImVycm9yIiwiZXJyb3JJY29uIiwic3VjY2VzcyIsInN1Y2Nlc3NJY29uIiwiTGlua1JlbmRlcmVyIiwiaHJlZiIsImNoaWxkcmVuIiwiTm90aWZpY2F0aW9uSXRlbUZhY3RvcnkiLCJzZXRTdGF0ZSIsIm5vdGlmaWNhdGlvbiIsInJlbW92ZU5vdGlmaWNhdGlvbiIsInN0YXRlIiwiY291bnQiLCJtZXNzYWdlIiwibGluayIsImlkIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFPQSxJQUFNQSw0QkFBNEIsR0FBR0MsNkJBQU9DLEdBQVAsQ0FBV0MsS0FBWCxDQUFpQjtBQUNwREMsRUFBQUEsU0FBUyxFQUFFO0FBRHlDLENBQWpCLENBQUgsMktBS3ZCLFVBQUFDLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUMsMEJBQVosSUFBMEMsSUFB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LGdCQUFEO0FBQWtCLFVBQUEsU0FBUyxFQUFDO0FBQTVCLFdBQ0dXLEtBQUssQ0FBQ2UsWUFBWSxDQUFDdkIsSUFBZCxDQURSLENBTkYsZUFTRSxnQ0FBQyxtQkFBRDtBQUFxQixVQUFBLFVBQVUsRUFBRUgsVUFBakM7QUFBNkMsVUFBQSxLQUFLLEVBQUUsS0FBS0osS0FBTCxDQUFXQztBQUEvRCx3QkFDRSxnQ0FBQyx5QkFBRDtBQUFlLFVBQUEsTUFBTSxFQUFFNkIsWUFBWSxDQUFDSSxPQUFwQztBQUE2QyxVQUFBLFNBQVMsRUFBRTtBQUFDQyxZQUFBQSxJQUFJLEVBQUVWO0FBQVA7QUFBeEQsVUFERixDQVRGLEVBWUcsT0FBT00sa0JBQVAsS0FBOEIsVUFBOUIsZ0JBQ0M7QUFBSyxVQUFBLFNBQVMsRUFBQztBQUFmLHdCQUNFLGdDQUFDLFVBQUQ7QUFBWSxVQUFBLE1BQU0sRUFBQyxNQUFuQjtBQUEwQixVQUFBLE9BQU8sRUFBRTtBQUFBLG1CQUFNQSxrQkFBa0IsQ0FBQ0QsWUFBWSxDQUFDTSxFQUFkLENBQXhCO0FBQUE7QUFBbkMsVUFERixDQURELEdBSUcsSUFoQk4sQ0FORixDQURGO0FBMkJEO0FBMUNIO0FBQUE7QUFBQSxJQUFzQ0MsZ0JBQXRDO0FBNENEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7RGVsZXRlLCBJbmZvLCBXYXJuaW5nLCBDaGVja21hcmt9IGZyb20gJy4uL2NvbW1vbi9pY29ucyc7XG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tICdyZWFjdC1tYXJrZG93bic7XG5pbXBvcnQge2RhdGFUZXN0SWRzfSBmcm9tICdAa2VwbGVyLmdsL2NvbnN0YW50cyc7XG5pbXBvcnQge0FjdGlvbkhhbmRsZXIsIHJlbW92ZU5vdGlmaWNhdGlvbiBhcyByZW1vdmVOb3RpZmljYXRpb25BY3Rpb25zfSBmcm9tICdAa2VwbGVyLmdsL2FjdGlvbnMnO1xuXG5pbnRlcmZhY2UgTm90aWZpY2F0aW9uSXRlbUNvbnRlbnRCbG9ja1Byb3BzIHtcbiAgaXNFeHBhbmRlZD86IGJvb2xlYW47XG59XG5cbmNvbnN0IE5vdGlmaWNhdGlvbkl0ZW1Db250ZW50QmxvY2sgPSBzdHlsZWQuZGl2LmF0dHJzKHtcbiAgY2xhc3NOYW1lOiAnbm90aWZpY2F0aW9uLWl0ZW0tLWNvbnRlbnQtYmxvY2snXG59KTxOb3RpZmljYXRpb25JdGVtQ29udGVudEJsb2NrUHJvcHM+YFxuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5ub3RpZmljYXRpb25QYW5lbEl0ZW1XaWR0aCAqICgxICsgTnVtYmVyKHByb3BzLmlzRXhwYW5kZWQpKX1weDtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG5gO1xuXG5pbnRlcmZhY2UgTm90aWZpY2F0aW9uSXRlbUNvbnRlbnRQcm9wcyB7XG4gIHR5cGU6IHN0cmluZztcbiAgaXNFeHBhbmRlZD86IGJvb2xlYW47XG59XG5cbmNvbnN0IE5vdGlmaWNhdGlvbkl0ZW1Db250ZW50ID0gc3R5bGVkLmRpdjxOb3RpZmljYXRpb25JdGVtQ29udGVudFByb3BzPmBcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5ub3RpZmljYXRpb25Db2xvcnNbcHJvcHMudHlwZV0gfHwgJyMwMDAnfTtcbiAgY29sb3I6ICNmZmY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIHdpZHRoOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLm5vdGlmaWNhdGlvblBhbmVsSXRlbVdpZHRoICogKDEgKyBOdW1iZXIocHJvcHMuaXNFeHBhbmRlZCkpfXB4O1xuICBoZWlnaHQ6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUubm90aWZpY2F0aW9uUGFuZWxJdGVtSGVpZ2h0ICogKDEgKyBOdW1iZXIocHJvcHMuaXNFeHBhbmRlZCkpfXB4O1xuICBmb250LXNpemU6IDExcHg7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIHBhZGRpbmc6IDFlbTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBib3gtc2hhZG93OiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmJveFNoYWRvd307XG4gIGN1cnNvcjogcG9pbnRlcjtcbmA7XG5cbmNvbnN0IERlbGV0ZUljb24gPSBzdHlsZWQoRGVsZXRlKWBcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB3aWR0aDogMTNweDtcbiAgaGVpZ2h0OiAxM3B4O1xuYDtcblxuaW50ZXJmYWNlIE5vdGlmaWNhdGlvbkNvdW50ZXJQcm9wcyB7XG4gIHR5cGU6IHN0cmluZztcbn1cblxuY29uc3QgTm90aWZpY2F0aW9uQ291bnRlciA9IHN0eWxlZC5kaXYuYXR0cnMoe1xuICBjbGFzc05hbWU6ICdub3RpZmljYXRpb24taXRlbS0tY291bnRlcidcbn0pPE5vdGlmaWNhdGlvbkNvdW50ZXJQcm9wcz5gXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZm9udC1zaXplOiAxMXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsZWZ0OiAtNHB4O1xuICBib3R0b206IC00cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyOiAxcHggc29saWQgJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5ub3RpZmljYXRpb25Db2xvcnNbcHJvcHMudHlwZV0gfHwgJyMwMDAnfTtcbiAgY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUubm90aWZpY2F0aW9uQ29sb3JzW3Byb3BzLnR5cGVdIHx8ICcjMDAwJ307XG4gIGJveC1zaGFkb3c6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuYm94U2hhZG93fTtcbmA7XG5cbmludGVyZmFjZSBOb3RpZmljYXRpb25NZXNzYWdlUHJvcHMge1xuICBpc0V4cGFuZGVkPzogYm9vbGVhbjtcbn1cblxuY29uc3QgTm90aWZpY2F0aW9uTWVzc2FnZSA9IHN0eWxlZC5kaXYuYXR0cnMoe1xuICBjbGFzc05hbWU6ICdub3RpZmljYXRpb24taXRlbS0tbWVzc2FnZSdcbn0pPE5vdGlmaWNhdGlvbk1lc3NhZ2VQcm9wcz5gXG4gIGZsZXgtZ3JvdzogMjtcbiAgd2lkdGg6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUubm90aWZpY2F0aW9uUGFuZWxJdGVtV2lkdGh9cHg7XG4gIG1hcmdpbjogMCAxZW07XG4gIG92ZXJmbG93OiAke3Byb3BzID0+IChwcm9wcy5pc0V4cGFuZGVkID8gJ2F1dG8nIDogJ2hpZGRlbicpfTtcbiAgcGFkZGluZy1yaWdodDogJHtwcm9wcyA9PiAocHJvcHMuaXNFeHBhbmRlZCA/ICcxZW0nIDogMCl9O1xuXG4gIHAge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgYSB7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbiAgfVxuYDtcblxuY29uc3QgTm90aWZpY2F0aW9uSWNvbiA9IHN0eWxlZC5kaXZgXG4gIHN2ZyB7XG4gICAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xuICB9XG5gO1xuXG5jb25zdCBpY29ucyA9IHtcbiAgaW5mbzogPEluZm8gZGF0YS10ZXN0aWQ9e2RhdGFUZXN0SWRzLmluZm9JY29ufSAvPixcbiAgd2FybmluZzogPFdhcm5pbmcgZGF0YS10ZXN0aWQ9e2RhdGFUZXN0SWRzLndhcm5pbmdJY29ufSAvPixcbiAgZXJyb3I6IDxXYXJuaW5nIGRhdGEtdGVzdGlkPXtkYXRhVGVzdElkcy5lcnJvckljb259IC8+LFxuICBzdWNjZXNzOiA8Q2hlY2ttYXJrIGRhdGEtdGVzdGlkPXtkYXRhVGVzdElkcy5zdWNjZXNzSWNvbn0gLz5cbn07XG5cbmNvbnN0IExpbmtSZW5kZXJlciA9IHByb3BzID0+IHtcbiAgcmV0dXJuIChcbiAgICA8YSBocmVmPXtwcm9wcy5ocmVmfSB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCI+XG4gICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgPC9hPlxuICApO1xufTtcblxuaW50ZXJmYWNlIE5vdGlmaWNhdGlvbkl0ZW1Qcm9wcyB7XG4gIG5vdGlmaWNhdGlvbjoge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgdHlwZTogc3RyaW5nO1xuICAgIG1lc3NhZ2U6IHN0cmluZztcbiAgICBjb3VudD86IG51bWJlcjtcbiAgfTtcbiAgaXNFeHBhbmRlZD86IGJvb2xlYW47XG4gIHJlbW92ZU5vdGlmaWNhdGlvbj86IEFjdGlvbkhhbmRsZXI8dHlwZW9mIHJlbW92ZU5vdGlmaWNhdGlvbkFjdGlvbnM+O1xuICB0aGVtZT86IGFueTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTm90aWZpY2F0aW9uSXRlbUZhY3RvcnkoKSB7XG4gIHJldHVybiBjbGFzcyBOb3RpZmljYXRpb25JdGVtIGV4dGVuZHMgQ29tcG9uZW50PE5vdGlmaWNhdGlvbkl0ZW1Qcm9wcz4ge1xuICAgIHN0YXRlID0ge1xuICAgICAgaXNFeHBhbmRlZDogZmFsc2VcbiAgICB9O1xuXG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy5pc0V4cGFuZGVkKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2lzRXhwYW5kZWQ6IHRydWV9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCB7bm90aWZpY2F0aW9uLCByZW1vdmVOb3RpZmljYXRpb259ID0gdGhpcy5wcm9wcztcbiAgICAgIGNvbnN0IHtpc0V4cGFuZGVkfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxOb3RpZmljYXRpb25JdGVtQ29udGVudEJsb2NrIGlzRXhwYW5kZWQ9e2lzRXhwYW5kZWR9IHRoZW1lPXt0aGlzLnByb3BzLnRoZW1lfT5cbiAgICAgICAgICB7KG5vdGlmaWNhdGlvbi5jb3VudCB8fCAwKSA+IDEgPyAoXG4gICAgICAgICAgICA8Tm90aWZpY2F0aW9uQ291bnRlciB0eXBlPXtub3RpZmljYXRpb24udHlwZX0gdGhlbWU9e3RoaXMucHJvcHMudGhlbWV9PlxuICAgICAgICAgICAgICB7bm90aWZpY2F0aW9uLmNvdW50fVxuICAgICAgICAgICAgPC9Ob3RpZmljYXRpb25Db3VudGVyPlxuICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgIDxOb3RpZmljYXRpb25JdGVtQ29udGVudFxuICAgICAgICAgICAgY2xhc3NOYW1lPVwibm90aWZpY2F0aW9uLWl0ZW1cIlxuICAgICAgICAgICAgdHlwZT17bm90aWZpY2F0aW9uLnR5cGV9XG4gICAgICAgICAgICBpc0V4cGFuZGVkPXtpc0V4cGFuZGVkfVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gdGhpcy5zZXRTdGF0ZSh7aXNFeHBhbmRlZDogIWlzRXhwYW5kZWR9KX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8Tm90aWZpY2F0aW9uSWNvbiBjbGFzc05hbWU9XCJub3RpZmljYXRpb24taXRlbS0taWNvblwiPlxuICAgICAgICAgICAgICB7aWNvbnNbbm90aWZpY2F0aW9uLnR5cGVdfVxuICAgICAgICAgICAgPC9Ob3RpZmljYXRpb25JY29uPlxuICAgICAgICAgICAgPE5vdGlmaWNhdGlvbk1lc3NhZ2UgaXNFeHBhbmRlZD17aXNFeHBhbmRlZH0gdGhlbWU9e3RoaXMucHJvcHMudGhlbWV9PlxuICAgICAgICAgICAgICA8UmVhY3RNYXJrZG93biBzb3VyY2U9e25vdGlmaWNhdGlvbi5tZXNzYWdlfSByZW5kZXJlcnM9e3tsaW5rOiBMaW5rUmVuZGVyZXJ9fSAvPlxuICAgICAgICAgICAgPC9Ob3RpZmljYXRpb25NZXNzYWdlPlxuICAgICAgICAgICAge3R5cGVvZiByZW1vdmVOb3RpZmljYXRpb24gPT09ICdmdW5jdGlvbicgPyAoXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibm90aWZpY2F0aW9uLWl0ZW0tLWFjdGlvblwiPlxuICAgICAgICAgICAgICAgIDxEZWxldGVJY29uIGhlaWdodD1cIjEwcHhcIiBvbkNsaWNrPXsoKSA9PiByZW1vdmVOb3RpZmljYXRpb24obm90aWZpY2F0aW9uLmlkKX0gLz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApIDogbnVsbH1cbiAgICAgICAgICA8L05vdGlmaWNhdGlvbkl0ZW1Db250ZW50PlxuICAgICAgICA8L05vdGlmaWNhdGlvbkl0ZW1Db250ZW50QmxvY2s+XG4gICAgICApO1xuICAgIH1cbiAgfTtcbn1cbiJdfQ==