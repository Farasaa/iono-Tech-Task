"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var FrameEncoder = function () {
  function FrameEncoder() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck2["default"])(this, FrameEncoder);
    (0, _defineProperty2["default"])(this, "extension", '');
    (0, _defineProperty2["default"])(this, "mimeType", '');
    (0, _defineProperty2["default"])(this, "quality", void 0);
    (0, _defineProperty2["default"])(this, "framerate", void 0);
    this.framerate = settings.framerate || 30;
  }

  (0, _createClass2["default"])(FrameEncoder, [{
    key: "start",
    value: function start() {
      throw new Error('Encoder: Implement a start function');
    }
  }, {
    key: "add",
    value: function () {
      var _add = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee(canvas) {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                throw new Error('Encoder: Implement an add function');

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function add(_x) {
        return _add.apply(this, arguments);
      }

      return add;
    }()
  }, {
    key: "save",
    value: function () {
      var _save = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee2() {
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                throw new Error('Encoder: Implement a save function');

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function save() {
        return _save.apply(this, arguments);
      }

      return save;
    }()
  }]);
  return FrameEncoder;
}();

exports["default"] = FrameEncoder;
//# sourceMappingURL=frame-encoder.js.map