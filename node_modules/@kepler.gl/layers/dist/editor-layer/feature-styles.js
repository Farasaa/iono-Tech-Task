"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LINE_STYLE = exports.FEATURE_STYLE = exports.EDIT_HANDLE_STYLE = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _constants = require("./constants");

// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var POINT_RADIUS = 5;
var STROKE_WIDTH_SELECTED = 2.5;
var STROKE_WIDTH_NOT_SELECTED = 2;
var STROKE_SOLID_ARRAY = [0, 0];
var STROKE_DASH_ARRAY = [4, 3];
var ALPHA_0 = 0x00;
var ALPHA_005 = 0x0d;
var ALPHA_01 = 0x1a;
var ALPHA_05 = 0x80;
var ALPHA_1 = 0xff;
var PRIMARY_COLOR_TRANSPARENT = [].concat((0, _toConsumableArray2["default"])(_constants.COLORS.PRIMARY), [ALPHA_01]);
var PRIMARY_COLOR = [].concat((0, _toConsumableArray2["default"])(_constants.COLORS.PRIMARY), [ALPHA_1]);
var SECONDARY_COLOR_TRANSPARENT = [].concat((0, _toConsumableArray2["default"])(_constants.COLORS.SECONDARY), [ALPHA_0]);
var TENTATIVE_FEATURE_COLOR = [].concat((0, _toConsumableArray2["default"])(_constants.COLORS.SECONDARY), [ALPHA_1]);
var TENTATIVE_FEATURE_COLOR_TRANSPARENT = [].concat((0, _toConsumableArray2["default"])(_constants.COLORS.SECONDARY), [ALPHA_005]);
var EDIT_HANDLE_STYLE = {
  getRadius: POINT_RADIUS,
  getFillColor: SECONDARY_COLOR_TRANSPARENT,
  getOutlineColor: function getOutlineColor(handle) {
    var _handle$properties;

    return (handle === null || handle === void 0 ? void 0 : (_handle$properties = handle.properties) === null || _handle$properties === void 0 ? void 0 : _handle$properties.featureIndex) < 0 ? TENTATIVE_FEATURE_COLOR : PRIMARY_COLOR;
  },
  highlightMultiplier: [].concat((0, _toConsumableArray2["default"])(_constants.COLORS.HIGHLIGHT), [ALPHA_05]),
  highlightMultiplierNone: SECONDARY_COLOR_TRANSPARENT
};
exports.EDIT_HANDLE_STYLE = EDIT_HANDLE_STYLE;
var FEATURE_STYLE = {
  getColor: function getColor(feature, isSelected) {
    return isSelected ? PRIMARY_COLOR_TRANSPARENT : SECONDARY_COLOR_TRANSPARENT;
  },
  highlightMultiplier: [].concat((0, _toConsumableArray2["default"])(_constants.COLORS.HIGHLIGHT), [ALPHA_01]),
  highlightMultiplierNone: SECONDARY_COLOR_TRANSPARENT
};
exports.FEATURE_STYLE = FEATURE_STYLE;
var LINE_STYLE = {
  getColor: function getColor(feature, isSelected, mode) {
    return isSelected ? PRIMARY_COLOR : PRIMARY_COLOR;
  },
  getWidth: function getWidth(feature, isSelected, mode) {
    return isSelected ? STROKE_WIDTH_SELECTED : STROKE_WIDTH_NOT_SELECTED;
  },
  getTentativeLineColor: function getTentativeLineColor(feature, isSelected) {
    return TENTATIVE_FEATURE_COLOR;
  },
  getTentativeLineWidth: function getTentativeLineWidth(feature, isSelected) {
    return STROKE_WIDTH_NOT_SELECTED;
  },
  getTentativeFillColor: TENTATIVE_FEATURE_COLOR_TRANSPARENT,
  dashArray: STROKE_DASH_ARRAY,
  solidArray: STROKE_SOLID_ARRAY,
  highlightMultiplier: [].concat((0, _toConsumableArray2["default"])(_constants.COLORS.HIGHLIGHT), [ALPHA_1])
};
exports.LINE_STYLE = LINE_STYLE;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lZGl0b3ItbGF5ZXIvZmVhdHVyZS1zdHlsZXMudHMiXSwibmFtZXMiOlsiUE9JTlRfUkFESVVTIiwiU1RST0tFX1dJRFRIX1NFTEVDVEVEIiwiU1RST0tFX1dJRFRIX05PVF9TRUxFQ1RFRCIsIlNUUk9LRV9TT0xJRF9BUlJBWSIsIlNUUk9LRV9EQVNIX0FSUkFZIiwiQUxQSEFfMCIsIkFMUEhBXzAwNSIsIkFMUEhBXzAxIiwiQUxQSEFfMDUiLCJBTFBIQV8xIiwiUFJJTUFSWV9DT0xPUl9UUkFOU1BBUkVOVCIsIkNPTE9SUyIsIlBSSU1BUlkiLCJQUklNQVJZX0NPTE9SIiwiU0VDT05EQVJZX0NPTE9SX1RSQU5TUEFSRU5UIiwiU0VDT05EQVJZIiwiVEVOVEFUSVZFX0ZFQVRVUkVfQ09MT1IiLCJURU5UQVRJVkVfRkVBVFVSRV9DT0xPUl9UUkFOU1BBUkVOVCIsIkVESVRfSEFORExFX1NUWUxFIiwiZ2V0UmFkaXVzIiwiZ2V0RmlsbENvbG9yIiwiZ2V0T3V0bGluZUNvbG9yIiwiaGFuZGxlIiwicHJvcGVydGllcyIsImZlYXR1cmVJbmRleCIsImhpZ2hsaWdodE11bHRpcGxpZXIiLCJISUdITElHSFQiLCJoaWdobGlnaHRNdWx0aXBsaWVyTm9uZSIsIkZFQVRVUkVfU1RZTEUiLCJnZXRDb2xvciIsImZlYXR1cmUiLCJpc1NlbGVjdGVkIiwiTElORV9TVFlMRSIsIm1vZGUiLCJnZXRXaWR0aCIsImdldFRlbnRhdGl2ZUxpbmVDb2xvciIsImdldFRlbnRhdGl2ZUxpbmVXaWR0aCIsImdldFRlbnRhdGl2ZUZpbGxDb2xvciIsImRhc2hBcnJheSIsInNvbGlkQXJyYXkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBTUE7O0FBTkE7QUFDQTtBQU9BLElBQU1BLFlBQVksR0FBRyxDQUFyQjtBQUNBLElBQU1DLHFCQUFxQixHQUFHLEdBQTlCO0FBQ0EsSUFBTUMseUJBQXlCLEdBQUcsQ0FBbEM7QUFFQSxJQUFNQyxrQkFBa0IsR0FBRyxDQUFDLENBQUQsRUFBSSxDQUFKLENBQTNCO0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFELEVBQUksQ0FBSixDQUExQjtBQUVBLElBQU1DLE9BQU8sR0FBRyxJQUFoQjtBQUNBLElBQU1DLFNBQVMsR0FBRyxJQUFsQjtBQUNBLElBQU1DLFFBQVEsR0FBRyxJQUFqQjtBQUNBLElBQU1DLFFBQVEsR0FBRyxJQUFqQjtBQUNBLElBQU1DLE9BQU8sR0FBRyxJQUFoQjtBQUVBLElBQU1DLHlCQUFvQyxpREFBT0Msa0JBQU9DLE9BQWQsSUFBdUJMLFFBQXZCLEVBQTFDO0FBQ0EsSUFBTU0sYUFBd0IsaURBQU9GLGtCQUFPQyxPQUFkLElBQXVCSCxPQUF2QixFQUE5QjtBQUNBLElBQU1LLDJCQUFzQyxpREFBT0gsa0JBQU9JLFNBQWQsSUFBeUJWLE9BQXpCLEVBQTVDO0FBQ0EsSUFBTVcsdUJBQWtDLGlEQUFPTCxrQkFBT0ksU0FBZCxJQUF5Qk4sT0FBekIsRUFBeEM7QUFDQSxJQUFNUSxtQ0FBOEMsaURBQU9OLGtCQUFPSSxTQUFkLElBQXlCVCxTQUF6QixFQUFwRDtBQUVPLElBQU1ZLGlCQUFpQixHQUFHO0FBQy9CQyxFQUFBQSxTQUFTLEVBQUVuQixZQURvQjtBQUUvQm9CLEVBQUFBLFlBQVksRUFBRU4sMkJBRmlCO0FBRy9CTyxFQUFBQSxlQUFlLEVBQUUseUJBQUFDLE1BQU07QUFBQTs7QUFBQSxXQUNyQixDQUFBQSxNQUFNLFNBQU4sSUFBQUEsTUFBTSxXQUFOLGtDQUFBQSxNQUFNLENBQUVDLFVBQVIsMEVBQW9CQyxZQUFwQixJQUFtQyxDQUFuQyxHQUF1Q1IsdUJBQXZDLEdBQWlFSCxhQUQ1QztBQUFBLEdBSFE7QUFLL0JZLEVBQUFBLG1CQUFtQixnREFBTWQsa0JBQU9lLFNBQWIsSUFBd0JsQixRQUF4QixFQUxZO0FBTS9CbUIsRUFBQUEsdUJBQXVCLEVBQUViO0FBTk0sQ0FBMUI7O0FBU0EsSUFBTWMsYUFBYSxHQUFHO0FBQzNCQyxFQUFBQSxRQUFRLEVBQUUsa0JBQUNDLE9BQUQsRUFBbUJDLFVBQW5CO0FBQUEsV0FDUkEsVUFBVSxHQUFHckIseUJBQUgsR0FBK0JJLDJCQURqQztBQUFBLEdBRGlCO0FBRzNCVyxFQUFBQSxtQkFBbUIsZ0RBQU1kLGtCQUFPZSxTQUFiLElBQXdCbkIsUUFBeEIsRUFIUTtBQUkzQm9CLEVBQUFBLHVCQUF1QixFQUFFYjtBQUpFLENBQXRCOztBQU9BLElBQU1rQixVQUFVLEdBQUc7QUFDeEJILEVBQUFBLFFBQVEsRUFBRSxrQkFBQ0MsT0FBRCxFQUFtQkMsVUFBbkIsRUFBK0JFLElBQS9CO0FBQUEsV0FDUkYsVUFBVSxHQUFHbEIsYUFBSCxHQUFtQkEsYUFEckI7QUFBQSxHQURjO0FBR3hCcUIsRUFBQUEsUUFBUSxFQUFFLGtCQUFDSixPQUFELEVBQW1CQyxVQUFuQixFQUErQkUsSUFBL0I7QUFBQSxXQUNSRixVQUFVLEdBQUc5QixxQkFBSCxHQUEyQkMseUJBRDdCO0FBQUEsR0FIYztBQUt4QmlDLEVBQUFBLHFCQUFxQixFQUFFLCtCQUFDTCxPQUFELEVBQW1CQyxVQUFuQjtBQUFBLFdBQ3JCZix1QkFEcUI7QUFBQSxHQUxDO0FBT3hCb0IsRUFBQUEscUJBQXFCLEVBQUUsK0JBQUNOLE9BQUQsRUFBbUJDLFVBQW5CO0FBQUEsV0FDckI3Qix5QkFEcUI7QUFBQSxHQVBDO0FBU3hCbUMsRUFBQUEscUJBQXFCLEVBQUVwQixtQ0FUQztBQVV4QnFCLEVBQUFBLFNBQVMsRUFBRWxDLGlCQVZhO0FBV3hCbUMsRUFBQUEsVUFBVSxFQUFFcEMsa0JBWFk7QUFZeEJzQixFQUFBQSxtQkFBbUIsZ0RBQU1kLGtCQUFPZSxTQUFiLElBQXdCakIsT0FBeEI7QUFaSyxDQUFuQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCB7UkdCQUNvbG9yfSBmcm9tICdAZGVjay5nbC9jb3JlJztcbmltcG9ydCB7RmVhdHVyZX0gZnJvbSAnQGtlcGxlci5nbC90eXBlcyc7XG5cbmltcG9ydCB7Q09MT1JTfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmNvbnN0IFBPSU5UX1JBRElVUyA9IDU7XG5jb25zdCBTVFJPS0VfV0lEVEhfU0VMRUNURUQgPSAyLjU7XG5jb25zdCBTVFJPS0VfV0lEVEhfTk9UX1NFTEVDVEVEID0gMjtcblxuY29uc3QgU1RST0tFX1NPTElEX0FSUkFZID0gWzAsIDBdO1xuY29uc3QgU1RST0tFX0RBU0hfQVJSQVkgPSBbNCwgM107XG5cbmNvbnN0IEFMUEhBXzAgPSAweDAwO1xuY29uc3QgQUxQSEFfMDA1ID0gMHgwZDtcbmNvbnN0IEFMUEhBXzAxID0gMHgxYTtcbmNvbnN0IEFMUEhBXzA1ID0gMHg4MDtcbmNvbnN0IEFMUEhBXzEgPSAweGZmO1xuXG5jb25zdCBQUklNQVJZX0NPTE9SX1RSQU5TUEFSRU5UOiBSR0JBQ29sb3IgPSBbLi4uQ09MT1JTLlBSSU1BUlksIEFMUEhBXzAxXTtcbmNvbnN0IFBSSU1BUllfQ09MT1I6IFJHQkFDb2xvciA9IFsuLi5DT0xPUlMuUFJJTUFSWSwgQUxQSEFfMV07XG5jb25zdCBTRUNPTkRBUllfQ09MT1JfVFJBTlNQQVJFTlQ6IFJHQkFDb2xvciA9IFsuLi5DT0xPUlMuU0VDT05EQVJZLCBBTFBIQV8wXTtcbmNvbnN0IFRFTlRBVElWRV9GRUFUVVJFX0NPTE9SOiBSR0JBQ29sb3IgPSBbLi4uQ09MT1JTLlNFQ09OREFSWSwgQUxQSEFfMV07XG5jb25zdCBURU5UQVRJVkVfRkVBVFVSRV9DT0xPUl9UUkFOU1BBUkVOVDogUkdCQUNvbG9yID0gWy4uLkNPTE9SUy5TRUNPTkRBUlksIEFMUEhBXzAwNV07XG5cbmV4cG9ydCBjb25zdCBFRElUX0hBTkRMRV9TVFlMRSA9IHtcbiAgZ2V0UmFkaXVzOiBQT0lOVF9SQURJVVMsXG4gIGdldEZpbGxDb2xvcjogU0VDT05EQVJZX0NPTE9SX1RSQU5TUEFSRU5ULFxuICBnZXRPdXRsaW5lQ29sb3I6IGhhbmRsZSA9PlxuICAgIGhhbmRsZT8ucHJvcGVydGllcz8uZmVhdHVyZUluZGV4IDwgMCA/IFRFTlRBVElWRV9GRUFUVVJFX0NPTE9SIDogUFJJTUFSWV9DT0xPUixcbiAgaGlnaGxpZ2h0TXVsdGlwbGllcjogWy4uLkNPTE9SUy5ISUdITElHSFQsIEFMUEhBXzA1XSxcbiAgaGlnaGxpZ2h0TXVsdGlwbGllck5vbmU6IFNFQ09OREFSWV9DT0xPUl9UUkFOU1BBUkVOVFxufTtcblxuZXhwb3J0IGNvbnN0IEZFQVRVUkVfU1RZTEUgPSB7XG4gIGdldENvbG9yOiAoZmVhdHVyZTogRmVhdHVyZSwgaXNTZWxlY3RlZDogYm9vbGVhbikgPT5cbiAgICBpc1NlbGVjdGVkID8gUFJJTUFSWV9DT0xPUl9UUkFOU1BBUkVOVCA6IFNFQ09OREFSWV9DT0xPUl9UUkFOU1BBUkVOVCxcbiAgaGlnaGxpZ2h0TXVsdGlwbGllcjogWy4uLkNPTE9SUy5ISUdITElHSFQsIEFMUEhBXzAxXSxcbiAgaGlnaGxpZ2h0TXVsdGlwbGllck5vbmU6IFNFQ09OREFSWV9DT0xPUl9UUkFOU1BBUkVOVFxufTtcblxuZXhwb3J0IGNvbnN0IExJTkVfU1RZTEUgPSB7XG4gIGdldENvbG9yOiAoZmVhdHVyZTogRmVhdHVyZSwgaXNTZWxlY3RlZCwgbW9kZTogc3RyaW5nKTogUkdCQUNvbG9yID0+XG4gICAgaXNTZWxlY3RlZCA/IFBSSU1BUllfQ09MT1IgOiBQUklNQVJZX0NPTE9SLFxuICBnZXRXaWR0aDogKGZlYXR1cmU6IEZlYXR1cmUsIGlzU2VsZWN0ZWQsIG1vZGU6IHN0cmluZyk6IG51bWJlciA9PlxuICAgIGlzU2VsZWN0ZWQgPyBTVFJPS0VfV0lEVEhfU0VMRUNURUQgOiBTVFJPS0VfV0lEVEhfTk9UX1NFTEVDVEVELFxuICBnZXRUZW50YXRpdmVMaW5lQ29sb3I6IChmZWF0dXJlOiBGZWF0dXJlLCBpc1NlbGVjdGVkOiBib29sZWFuKTogUkdCQUNvbG9yID0+XG4gICAgVEVOVEFUSVZFX0ZFQVRVUkVfQ09MT1IsXG4gIGdldFRlbnRhdGl2ZUxpbmVXaWR0aDogKGZlYXR1cmU6IEZlYXR1cmUsIGlzU2VsZWN0ZWQ6IGJvb2xlYW4pOiBudW1iZXIgPT5cbiAgICBTVFJPS0VfV0lEVEhfTk9UX1NFTEVDVEVELFxuICBnZXRUZW50YXRpdmVGaWxsQ29sb3I6IFRFTlRBVElWRV9GRUFUVVJFX0NPTE9SX1RSQU5TUEFSRU5ULFxuICBkYXNoQXJyYXk6IFNUUk9LRV9EQVNIX0FSUkFZLFxuICBzb2xpZEFycmF5OiBTVFJPS0VfU09MSURfQVJSQVksXG4gIGhpZ2hsaWdodE11bHRpcGxpZXI6IFsuLi5DT0xPUlMuSElHSExJR0hULCBBTFBIQV8xXVxufTtcbiJdfQ==