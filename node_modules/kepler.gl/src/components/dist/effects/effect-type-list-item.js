"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EffectTypeListItemFactory = EffectTypeListItemFactory;
exports["default"] = exports.DUMMY_ITEM_ID = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _classnames = _interopRequireDefault(require("classnames"));

var _constants = require("@kepler.gl/constants");

var _localization = require("@kepler.gl/localization");

var _icons = require("../common/icons");

var _templateObject, _templateObject2, _templateObject3;

var DUMMY_ITEM_ID = 'dummy';
exports.DUMMY_ITEM_ID = DUMMY_ITEM_ID;

var StyledListItem = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  border-radius: 2px;\n  height: 89px;\n  transition: background-color 0.4s;\n\n  :hover {\n    background-color: ", ";\n  }\n\n  .effect-type-selector__item__icon {\n    display: flex;\n    background-image: url(", ");\n    background-size: ", "px\n      ", "px;\n    height: ", "px;\n    width: ", "px;\n    border-radius: 2px;\n\n    .effect-preview {\n      height: ", "px;\n      width: ", "px;\n    }\n  }\n\n  .effect-type-selector__item__label {\n    text-transform: capitalize;\n    font-size: 10px;\n    text-align: center;\n    color: ", ";\n    max-width: ", "px;\n    line-height: 14px;\n    padding-top: 2px;\n  }\n"])), function (props) {
  return props.theme.effectTypeIconBgHoverColor;
}, "".concat(_constants.KEPLER_UNFOLDED_BUCKET, "/images/kepler.gl-layer-icon-bg.png"), function (props) {
  return props.theme.effectTypeIconSizeL;
}, function (props) {
  return props.theme.effectTypeIconSizeL;
}, function (props) {
  return props.theme.effectTypeIconSizeL;
}, function (props) {
  return props.theme.effectTypeIconSizeL;
}, function (props) {
  return props.theme.effectTypeIconSizeL;
}, function (props) {
  return props.theme.effectTypeIconSizeL;
}, function (props) {
  return props.theme.effectPanelTextMain;
}, function (props) {
  return props.theme.effectTypeIconSizeL;
});

var StyledAddButton = (0, _styledComponents["default"])(_icons.Add)(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  margin-right: 8px;\n  height: 16px;\n"])));

var StyledPlaceholderButton = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin-left: 3px;\n  margin-right: 3px;\n  letter-spacing: 0.3px;\n  font-family: ", ";\n  font-weight: 500;\n"])), function (props) {
  return props.theme.effectPanelAddEffectFontFamily;
});
/**
 * Transforms an effect type from camel case into a name of the image in kebab case.
 * @param {string} type
 * @returns {string}
 */


var getImageUrl = function getImageUrl(type) {
  var kebab = type.replace(/[A-Z]+(?![a-z])|[A-Z]/g, function ($, ofs) {
    return (ofs ? '-' : '') + $.toLowerCase();
  });
  return "".concat(_constants.KEPLER_UNFOLDED_BUCKET, "/images/effects/").concat(kebab, ".png");
};

function EffectTypeListItemFactory() {
  var EffectTypeListItem = function EffectTypeListItem(_ref) {
    var value = _ref.value,
        isTile = _ref.isTile,
        className = _ref.className;

    if ((value === null || value === void 0 ? void 0 : value.type) === DUMMY_ITEM_ID) {
      return /*#__PURE__*/_react["default"].createElement(StyledPlaceholderButton, null, /*#__PURE__*/_react["default"].createElement(StyledAddButton, null), /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
        id: 'effectManager.addEffect'
      }));
    }

    return /*#__PURE__*/_react["default"].createElement(StyledListItem, {
      className: (0, _classnames["default"])('effect-type-selector__item__inner', className, {
        list: !isTile
      })
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "effect-type-selector__item__icon"
    }, /*#__PURE__*/_react["default"].createElement("img", {
      className: "effect-preview",
      src: getImageUrl(value.type)
    })), /*#__PURE__*/_react["default"].createElement("div", {
      className: "effect-type-selector__item__label"
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: "effect.type.".concat(value.type),
      defaultMessage: value.name
    })));
  };

  return (0, _styledComponents.withTheme)(EffectTypeListItem);
}

var _default = EffectTypeListItemFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lZmZlY3RzL2VmZmVjdC10eXBlLWxpc3QtaXRlbS50c3giXSwibmFtZXMiOlsiRFVNTVlfSVRFTV9JRCIsIlN0eWxlZExpc3RJdGVtIiwic3R5bGVkIiwiZGl2IiwicHJvcHMiLCJ0aGVtZSIsImVmZmVjdFR5cGVJY29uQmdIb3ZlckNvbG9yIiwiS0VQTEVSX1VORk9MREVEX0JVQ0tFVCIsImVmZmVjdFR5cGVJY29uU2l6ZUwiLCJlZmZlY3RQYW5lbFRleHRNYWluIiwiU3R5bGVkQWRkQnV0dG9uIiwiQWRkIiwiU3R5bGVkUGxhY2Vob2xkZXJCdXR0b24iLCJlZmZlY3RQYW5lbEFkZEVmZmVjdEZvbnRGYW1pbHkiLCJnZXRJbWFnZVVybCIsInR5cGUiLCJrZWJhYiIsInJlcGxhY2UiLCIkIiwib2ZzIiwidG9Mb3dlckNhc2UiLCJFZmZlY3RUeXBlTGlzdEl0ZW1GYWN0b3J5IiwiRWZmZWN0VHlwZUxpc3RJdGVtIiwidmFsdWUiLCJpc1RpbGUiLCJjbGFzc05hbWUiLCJsaXN0IiwibmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFFQTs7OztBQUVPLElBQU1BLGFBQXFCLEdBQUcsT0FBOUI7OztBQVNQLElBQU1DLGNBQWMsR0FBR0MsNkJBQU9DLEdBQVYsOHNCQU1JLFVBQUFDLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUMsMEJBQWhCO0FBQUEsQ0FOVCxZQVdXQyxpQ0FYWCwwQ0FZRyxVQUFBSCxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlHLG1CQUFoQjtBQUFBLENBWlIsRUFhWixVQUFBSixLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlHLG1CQUFoQjtBQUFBLENBYk8sRUFjTixVQUFBSixLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlHLG1CQUFoQjtBQUFBLENBZEMsRUFlUCxVQUFBSixLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlHLG1CQUFoQjtBQUFBLENBZkUsRUFtQkosVUFBQUosS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZRyxtQkFBaEI7QUFBQSxDQW5CRCxFQW9CTCxVQUFBSixLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlHLG1CQUFoQjtBQUFBLENBcEJBLEVBNEJQLFVBQUFKLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUksbUJBQWhCO0FBQUEsQ0E1QkUsRUE2QkgsVUFBQUwsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZRyxtQkFBaEI7QUFBQSxDQTdCRixDQUFwQjs7QUFtQ0EsSUFBTUUsZUFBZSxHQUFHLGtDQUFPQyxVQUFQLENBQUgsaUlBQXJCOztBQUtBLElBQU1DLHVCQUF1QixHQUFHViw2QkFBT0MsR0FBVix3UkFPWixVQUFBQyxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlRLDhCQUFoQjtBQUFBLENBUE8sQ0FBN0I7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFBQyxJQUFJLEVBQUk7QUFDMUIsTUFBTUMsS0FBSyxHQUFHRCxJQUFJLENBQUNFLE9BQUwsQ0FDWix3QkFEWSxFQUVaLFVBQUNDLENBQUQsRUFBSUMsR0FBSjtBQUFBLFdBQVksQ0FBQ0EsR0FBRyxHQUFHLEdBQUgsR0FBUyxFQUFiLElBQW1CRCxDQUFDLENBQUNFLFdBQUYsRUFBL0I7QUFBQSxHQUZZLENBQWQ7QUFJQSxtQkFBVWIsaUNBQVYsNkJBQW1EUyxLQUFuRDtBQUNELENBTkQ7O0FBUU8sU0FBU0sseUJBQVQsR0FBcUM7QUFDMUMsTUFBTUMsa0JBQXFELEdBQUcsU0FBeERBLGtCQUF3RCxPQUFnQztBQUFBLFFBQTlCQyxLQUE4QixRQUE5QkEsS0FBOEI7QUFBQSxRQUF2QkMsTUFBdUIsUUFBdkJBLE1BQXVCO0FBQUEsUUFBZkMsU0FBZSxRQUFmQSxTQUFlOztBQUM1RixRQUFJLENBQUFGLEtBQUssU0FBTCxJQUFBQSxLQUFLLFdBQUwsWUFBQUEsS0FBSyxDQUFFUixJQUFQLE1BQWdCZixhQUFwQixFQUFtQztBQUNqQywwQkFDRSxnQ0FBQyx1QkFBRCxxQkFDRSxnQ0FBQyxlQUFELE9BREYsZUFFRSxnQ0FBQyw4QkFBRDtBQUFrQixRQUFBLEVBQUUsRUFBRTtBQUF0QixRQUZGLENBREY7QUFNRDs7QUFFRCx3QkFDRSxnQ0FBQyxjQUFEO0FBQ0UsTUFBQSxTQUFTLEVBQUUsNEJBQVcsbUNBQVgsRUFBZ0R5QixTQUFoRCxFQUEyRDtBQUNwRUMsUUFBQUEsSUFBSSxFQUFFLENBQUNGO0FBRDZELE9BQTNEO0FBRGIsb0JBS0U7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLG9CQUNFO0FBQUssTUFBQSxTQUFTLEVBQUMsZ0JBQWY7QUFBZ0MsTUFBQSxHQUFHLEVBQUVWLFdBQVcsQ0FBQ1MsS0FBSyxDQUFDUixJQUFQO0FBQWhELE1BREYsQ0FMRixlQVFFO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixvQkFDRSxnQ0FBQyw4QkFBRDtBQUFrQixNQUFBLEVBQUUsd0JBQWlCUSxLQUFLLENBQUNSLElBQXZCLENBQXBCO0FBQW1ELE1BQUEsY0FBYyxFQUFFUSxLQUFLLENBQUNJO0FBQXpFLE1BREYsQ0FSRixDQURGO0FBY0QsR0F4QkQ7O0FBMEJBLFNBQU8saUNBQVVMLGtCQUFWLENBQVA7QUFDRDs7ZUFFY0QseUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCwge3dpdGhUaGVtZX0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCB7S0VQTEVSX1VORk9MREVEX0JVQ0tFVH0gZnJvbSAnQGtlcGxlci5nbC9jb25zdGFudHMnO1xuaW1wb3J0IHtGb3JtYXR0ZWRNZXNzYWdlfSBmcm9tICdAa2VwbGVyLmdsL2xvY2FsaXphdGlvbic7XG5cbmltcG9ydCB7QWRkfSBmcm9tICcuLi9jb21tb24vaWNvbnMnO1xuXG5leHBvcnQgY29uc3QgRFVNTVlfSVRFTV9JRDogc3RyaW5nID0gJ2R1bW15JztcblxuZXhwb3J0IHR5cGUgRWZmZWN0VHlwZUxpc3RJdGVtUHJvcHMgPSB7XG4gIHZhbHVlOiB7dHlwZTogc3RyaW5nOyBuYW1lOiBzdHJpbmd9O1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIGlzVGlsZT86IGJvb2xlYW47XG4gIHRoZW1lOiBhbnk7XG59O1xuXG5jb25zdCBTdHlsZWRMaXN0SXRlbSA9IHN0eWxlZC5kaXZgXG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgaGVpZ2h0OiA4OXB4O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuNHM7XG5cbiAgOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmVmZmVjdFR5cGVJY29uQmdIb3ZlckNvbG9yfTtcbiAgfVxuXG4gIC5lZmZlY3QtdHlwZS1zZWxlY3Rvcl9faXRlbV9faWNvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtgJHtLRVBMRVJfVU5GT0xERURfQlVDS0VUfS9pbWFnZXMva2VwbGVyLmdsLWxheWVyLWljb24tYmcucG5nYH0pO1xuICAgIGJhY2tncm91bmQtc2l6ZTogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5lZmZlY3RUeXBlSWNvblNpemVMfXB4XG4gICAgICAke3Byb3BzID0+IHByb3BzLnRoZW1lLmVmZmVjdFR5cGVJY29uU2l6ZUx9cHg7XG4gICAgaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmVmZmVjdFR5cGVJY29uU2l6ZUx9cHg7XG4gICAgd2lkdGg6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuZWZmZWN0VHlwZUljb25TaXplTH1weDtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG5cbiAgICAuZWZmZWN0LXByZXZpZXcge1xuICAgICAgaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmVmZmVjdFR5cGVJY29uU2l6ZUx9cHg7XG4gICAgICB3aWR0aDogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5lZmZlY3RUeXBlSWNvblNpemVMfXB4O1xuICAgIH1cbiAgfVxuXG4gIC5lZmZlY3QtdHlwZS1zZWxlY3Rvcl9faXRlbV9fbGFiZWwge1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuZWZmZWN0UGFuZWxUZXh0TWFpbn07XG4gICAgbWF4LXdpZHRoOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmVmZmVjdFR5cGVJY29uU2l6ZUx9cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgcGFkZGluZy10b3A6IDJweDtcbiAgfVxuYDtcblxuY29uc3QgU3R5bGVkQWRkQnV0dG9uID0gc3R5bGVkKEFkZClgXG4gIG1hcmdpbi1yaWdodDogOHB4O1xuICBoZWlnaHQ6IDE2cHg7XG5gO1xuXG5jb25zdCBTdHlsZWRQbGFjZWhvbGRlckJ1dHRvbiA9IHN0eWxlZC5kaXZgXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luLWxlZnQ6IDNweDtcbiAgbWFyZ2luLXJpZ2h0OiAzcHg7XG4gIGxldHRlci1zcGFjaW5nOiAwLjNweDtcbiAgZm9udC1mYW1pbHk6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuZWZmZWN0UGFuZWxBZGRFZmZlY3RGb250RmFtaWx5fTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbmA7XG5cbi8qKlxuICogVHJhbnNmb3JtcyBhbiBlZmZlY3QgdHlwZSBmcm9tIGNhbWVsIGNhc2UgaW50byBhIG5hbWUgb2YgdGhlIGltYWdlIGluIGtlYmFiIGNhc2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuY29uc3QgZ2V0SW1hZ2VVcmwgPSB0eXBlID0+IHtcbiAgY29uc3Qga2ViYWIgPSB0eXBlLnJlcGxhY2UoXG4gICAgL1tBLVpdKyg/IVthLXpdKXxbQS1aXS9nLFxuICAgICgkLCBvZnMpID0+IChvZnMgPyAnLScgOiAnJykgKyAkLnRvTG93ZXJDYXNlKClcbiAgKTtcbiAgcmV0dXJuIGAke0tFUExFUl9VTkZPTERFRF9CVUNLRVR9L2ltYWdlcy9lZmZlY3RzLyR7a2ViYWJ9LnBuZ2A7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gRWZmZWN0VHlwZUxpc3RJdGVtRmFjdG9yeSgpIHtcbiAgY29uc3QgRWZmZWN0VHlwZUxpc3RJdGVtOiBSZWFjdC5GQzxFZmZlY3RUeXBlTGlzdEl0ZW1Qcm9wcz4gPSAoe3ZhbHVlLCBpc1RpbGUsIGNsYXNzTmFtZX0pID0+IHtcbiAgICBpZiAodmFsdWU/LnR5cGUgPT09IERVTU1ZX0lURU1fSUQpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxTdHlsZWRQbGFjZWhvbGRlckJ1dHRvbj5cbiAgICAgICAgICA8U3R5bGVkQWRkQnV0dG9uIC8+XG4gICAgICAgICAgPEZvcm1hdHRlZE1lc3NhZ2UgaWQ9eydlZmZlY3RNYW5hZ2VyLmFkZEVmZmVjdCd9IC8+XG4gICAgICAgIDwvU3R5bGVkUGxhY2Vob2xkZXJCdXR0b24+XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8U3R5bGVkTGlzdEl0ZW1cbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdlZmZlY3QtdHlwZS1zZWxlY3Rvcl9faXRlbV9faW5uZXInLCBjbGFzc05hbWUsIHtcbiAgICAgICAgICBsaXN0OiAhaXNUaWxlXG4gICAgICAgIH0pfVxuICAgICAgPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImVmZmVjdC10eXBlLXNlbGVjdG9yX19pdGVtX19pY29uXCI+XG4gICAgICAgICAgPGltZyBjbGFzc05hbWU9XCJlZmZlY3QtcHJldmlld1wiIHNyYz17Z2V0SW1hZ2VVcmwodmFsdWUudHlwZSl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImVmZmVjdC10eXBlLXNlbGVjdG9yX19pdGVtX19sYWJlbFwiPlxuICAgICAgICAgIDxGb3JtYXR0ZWRNZXNzYWdlIGlkPXtgZWZmZWN0LnR5cGUuJHt2YWx1ZS50eXBlfWB9IGRlZmF1bHRNZXNzYWdlPXt2YWx1ZS5uYW1lfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvU3R5bGVkTGlzdEl0ZW0+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gd2l0aFRoZW1lKEVmZmVjdFR5cGVMaXN0SXRlbSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEVmZmVjdFR5cGVMaXN0SXRlbUZhY3Rvcnk7XG4iXX0=