import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
export default function parseVideo(_x, _x2) {
  return _parseVideo.apply(this, arguments);
}

function _parseVideo() {
  _parseVideo = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(arrayBuffer, options) {
    var blob, video;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            blob = new Blob([arrayBuffer]);
            video = document.createElement('video');
            video.src = URL.createObjectURL(blob);
            return _context.abrupt("return", video);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _parseVideo.apply(this, arguments);
}
//# sourceMappingURL=parse-video.js.map