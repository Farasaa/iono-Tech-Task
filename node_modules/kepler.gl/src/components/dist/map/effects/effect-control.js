"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = EffectControlFactory;

var _react = _interopRequireWildcard(require("react"));

var _icons = require("../../common/icons");

var _styledComponents = require("../../common/styled-components");

var _mapControlTooltip = _interopRequireDefault(require("../map-control-tooltip"));

// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
EffectControlFactory.deps = [_mapControlTooltip["default"]];

function EffectControlFactory(MapControlTooltip) {
  var defaultActionIcons = {
    effectsIcon: _icons.MagicWand
  };

  var EffectControl = function EffectControl(_ref) {
    var _mapControls$effect, _mapControls$effect2;

    var mapControls = _ref.mapControls,
        onToggleMapControl = _ref.onToggleMapControl,
        _ref$actionIcons = _ref.actionIcons,
        actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons;
    var onClick = (0, _react.useCallback)(function (event) {
      event.preventDefault();
      onToggleMapControl('effect');
    }, [onToggleMapControl]);
    var showControl = mapControls === null || mapControls === void 0 ? void 0 : (_mapControls$effect = mapControls.effect) === null || _mapControls$effect === void 0 ? void 0 : _mapControls$effect.show;

    if (!showControl) {
      return null;
    }

    var active = mapControls === null || mapControls === void 0 ? void 0 : (_mapControls$effect2 = mapControls.effect) === null || _mapControls$effect2 === void 0 ? void 0 : _mapControls$effect2.active;
    return /*#__PURE__*/_react["default"].createElement(MapControlTooltip, {
      id: "show-effect",
      message: active ? 'tooltip.hideEffectPanel' : 'tooltip.showEffectPanel'
    }, /*#__PURE__*/_react["default"].createElement(_styledComponents.MapControlButton, {
      className: "map-control-button toggle-effect",
      onClick: onClick,
      active: active
    }, /*#__PURE__*/_react["default"].createElement(actionIcons.effectsIcon, {
      height: "22px"
    })));
  };

  EffectControl.displayName = 'EffectControl';
  return /*#__PURE__*/_react["default"].memo(EffectControl);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYXAvZWZmZWN0cy9lZmZlY3QtY29udHJvbC50c3giXSwibmFtZXMiOlsiRWZmZWN0Q29udHJvbEZhY3RvcnkiLCJkZXBzIiwiTWFwQ29udHJvbFRvb2x0aXBGYWN0b3J5IiwiTWFwQ29udHJvbFRvb2x0aXAiLCJkZWZhdWx0QWN0aW9uSWNvbnMiLCJlZmZlY3RzSWNvbiIsIk1hZ2ljV2FuZCIsIkVmZmVjdENvbnRyb2wiLCJtYXBDb250cm9scyIsIm9uVG9nZ2xlTWFwQ29udHJvbCIsImFjdGlvbkljb25zIiwib25DbGljayIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzaG93Q29udHJvbCIsImVmZmVjdCIsInNob3ciLCJhY3RpdmUiLCJkaXNwbGF5TmFtZSIsIlJlYWN0IiwibWVtbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFHQTs7QUFJQTs7QUFDQTs7QUFDQTs7QUFUQTtBQUNBO0FBb0JBQSxvQkFBb0IsQ0FBQ0MsSUFBckIsR0FBNEIsQ0FBQ0MsNkJBQUQsQ0FBNUI7O0FBRWUsU0FBU0Ysb0JBQVQsQ0FDYkcsaUJBRGEsRUFFaUI7QUFDOUIsTUFBTUMsa0JBQWtCLEdBQUc7QUFDekJDLElBQUFBLFdBQVcsRUFBRUM7QUFEWSxHQUEzQjs7QUFJQSxNQUFNQyxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLE9BSUk7QUFBQTs7QUFBQSxRQUh4QkMsV0FHd0IsUUFIeEJBLFdBR3dCO0FBQUEsUUFGeEJDLGtCQUV3QixRQUZ4QkEsa0JBRXdCO0FBQUEsZ0NBRHhCQyxXQUN3QjtBQUFBLFFBRHhCQSxXQUN3QixpQ0FEVk4sa0JBQ1U7QUFDeEIsUUFBTU8sT0FBTyxHQUFHLHdCQUNkLFVBQUFDLEtBQUssRUFBSTtBQUNQQSxNQUFBQSxLQUFLLENBQUNDLGNBQU47QUFDQUosTUFBQUEsa0JBQWtCLENBQUMsUUFBRCxDQUFsQjtBQUNELEtBSmEsRUFLZCxDQUFDQSxrQkFBRCxDQUxjLENBQWhCO0FBUUEsUUFBTUssV0FBVyxHQUFHTixXQUFILGFBQUdBLFdBQUgsOENBQUdBLFdBQVcsQ0FBRU8sTUFBaEIsd0RBQUcsb0JBQXFCQyxJQUF6Qzs7QUFDQSxRQUFJLENBQUNGLFdBQUwsRUFBa0I7QUFDaEIsYUFBTyxJQUFQO0FBQ0Q7O0FBRUQsUUFBTUcsTUFBTSxHQUFHVCxXQUFILGFBQUdBLFdBQUgsK0NBQUdBLFdBQVcsQ0FBRU8sTUFBaEIseURBQUcscUJBQXFCRSxNQUFwQztBQUNBLHdCQUNFLGdDQUFDLGlCQUFEO0FBQ0UsTUFBQSxFQUFFLEVBQUMsYUFETDtBQUVFLE1BQUEsT0FBTyxFQUFFQSxNQUFNLEdBQUcseUJBQUgsR0FBK0I7QUFGaEQsb0JBSUUsZ0NBQUMsa0NBQUQ7QUFDRSxNQUFBLFNBQVMsRUFBQyxrQ0FEWjtBQUVFLE1BQUEsT0FBTyxFQUFFTixPQUZYO0FBR0UsTUFBQSxNQUFNLEVBQUVNO0FBSFYsb0JBS0UsZ0NBQUMsV0FBRCxDQUFhLFdBQWI7QUFBeUIsTUFBQSxNQUFNLEVBQUM7QUFBaEMsTUFMRixDQUpGLENBREY7QUFjRCxHQWpDRDs7QUFtQ0FWLEVBQUFBLGFBQWEsQ0FBQ1csV0FBZCxHQUE0QixlQUE1QjtBQUNBLHNCQUFPQyxrQkFBTUMsSUFBTixDQUFXYixhQUFYLENBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrLCBDb21wb25lbnRUeXBlfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7TWFwQ29udHJvbHN9IGZyb20gJ0BrZXBsZXIuZ2wvdHlwZXMnO1xuXG5pbXBvcnQge01hZ2ljV2FuZH0gZnJvbSAnLi4vLi4vY29tbW9uL2ljb25zJztcbmltcG9ydCB7TWFwQ29udHJvbEJ1dHRvbn0gZnJvbSAnLi4vLi4vY29tbW9uL3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBNYXBDb250cm9sVG9vbHRpcEZhY3RvcnkgZnJvbSAnLi4vbWFwLWNvbnRyb2wtdG9vbHRpcCc7XG5cbmludGVyZmFjZSBFZmZlY3RDb250cm9sSWNvbnMge1xuICBlZmZlY3RzSWNvbjogQ29tcG9uZW50VHlwZTxhbnk+O1xufVxuXG5leHBvcnQgdHlwZSBFZmZlY3RDb250cm9sUHJvcHMgPSB7XG4gIG1hcENvbnRyb2xzOiBNYXBDb250cm9scztcbiAgb25Ub2dnbGVNYXBDb250cm9sOiAoY29udHJvbDogc3RyaW5nKSA9PiB2b2lkO1xuICBhY3Rpb25JY29uczogRWZmZWN0Q29udHJvbEljb25zO1xufTtcblxuRWZmZWN0Q29udHJvbEZhY3RvcnkuZGVwcyA9IFtNYXBDb250cm9sVG9vbHRpcEZhY3RvcnldO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBFZmZlY3RDb250cm9sRmFjdG9yeShcbiAgTWFwQ29udHJvbFRvb2x0aXA6IFJldHVyblR5cGU8dHlwZW9mIE1hcENvbnRyb2xUb29sdGlwRmFjdG9yeT5cbik6IFJlYWN0LkZDPEVmZmVjdENvbnRyb2xQcm9wcz4ge1xuICBjb25zdCBkZWZhdWx0QWN0aW9uSWNvbnMgPSB7XG4gICAgZWZmZWN0c0ljb246IE1hZ2ljV2FuZFxuICB9O1xuXG4gIGNvbnN0IEVmZmVjdENvbnRyb2wgPSAoe1xuICAgIG1hcENvbnRyb2xzLFxuICAgIG9uVG9nZ2xlTWFwQ29udHJvbCxcbiAgICBhY3Rpb25JY29ucyA9IGRlZmF1bHRBY3Rpb25JY29uc1xuICB9OiBFZmZlY3RDb250cm9sUHJvcHMpID0+IHtcbiAgICBjb25zdCBvbkNsaWNrID0gdXNlQ2FsbGJhY2soXG4gICAgICBldmVudCA9PiB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIG9uVG9nZ2xlTWFwQ29udHJvbCgnZWZmZWN0Jyk7XG4gICAgICB9LFxuICAgICAgW29uVG9nZ2xlTWFwQ29udHJvbF1cbiAgICApO1xuXG4gICAgY29uc3Qgc2hvd0NvbnRyb2wgPSBtYXBDb250cm9scz8uZWZmZWN0Py5zaG93O1xuICAgIGlmICghc2hvd0NvbnRyb2wpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGNvbnN0IGFjdGl2ZSA9IG1hcENvbnRyb2xzPy5lZmZlY3Q/LmFjdGl2ZTtcbiAgICByZXR1cm4gKFxuICAgICAgPE1hcENvbnRyb2xUb29sdGlwXG4gICAgICAgIGlkPVwic2hvdy1lZmZlY3RcIlxuICAgICAgICBtZXNzYWdlPXthY3RpdmUgPyAndG9vbHRpcC5oaWRlRWZmZWN0UGFuZWwnIDogJ3Rvb2x0aXAuc2hvd0VmZmVjdFBhbmVsJ31cbiAgICAgID5cbiAgICAgICAgPE1hcENvbnRyb2xCdXR0b25cbiAgICAgICAgICBjbGFzc05hbWU9XCJtYXAtY29udHJvbC1idXR0b24gdG9nZ2xlLWVmZmVjdFwiXG4gICAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgICBhY3RpdmU9e2FjdGl2ZX1cbiAgICAgICAgPlxuICAgICAgICAgIDxhY3Rpb25JY29ucy5lZmZlY3RzSWNvbiBoZWlnaHQ9XCIyMnB4XCIgLz5cbiAgICAgICAgPC9NYXBDb250cm9sQnV0dG9uPlxuICAgICAgPC9NYXBDb250cm9sVG9vbHRpcD5cbiAgICApO1xuICB9O1xuXG4gIEVmZmVjdENvbnRyb2wuZGlzcGxheU5hbWUgPSAnRWZmZWN0Q29udHJvbCc7XG4gIHJldHVybiBSZWFjdC5tZW1vKEVmZmVjdENvbnRyb2wpO1xufVxuIl19