{"version":3,"file":"jpeg-sequence-encoder.js","names":["TAR","ZIP","JPEGSequenceEncoder","settings","tarBuilder","filemap","options","jpeg","quality","archive","mimeType","TARBuilder","properties","extension","extensions","ZipWriter","mimeTypes","Error","canvas","canvasToArrayBuffer","buffer","filename","pad","count","addFile","Object","keys","length","build","arrayBuffer","Blob","type","encode","FrameEncoder"],"sources":["../../../../src/encoders/video/jpeg-sequence-encoder.js"],"sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport FrameEncoder from '../frame-encoder';\nimport TARBuilder from '../tar/tar-builder';\nimport {pad, canvasToArrayBuffer} from '../utils';\nimport {encode} from '@loaders.gl/core';\nimport {ZipWriter} from '@loaders.gl/zip';\n\nconst TAR = 'tar';\nconst ZIP = 'zip';\n\nclass JPEGSequenceEncoder extends FrameEncoder {\n  /** @type {TARBuilder} */\n  tarBuilder;\n\n  /** @type {{filename: ArrayBuffer}} */\n  filemap;\n\n  /** @param {import('types').FrameEncoderSettings} settings */\n  constructor(settings) {\n    super(settings);\n    this.tarBuilder = null;\n    this.filemap = {};\n    this.options = {};\n\n    if (settings.jpeg) {\n      this.options = {...settings.jpeg};\n    }\n\n    this.options.quality = this.options.quality || 1.0;\n    this.options.archive = this.options.archive || TAR;\n\n    switch (this.options.archive) {\n      case TAR: {\n        this.mimeType = TARBuilder.properties.mimeType;\n        this.extension = `.${TARBuilder.properties.extensions[0]}`;\n        break;\n      }\n      case ZIP: {\n        this.mimeType = ZipWriter.mimeTypes[0];\n        this.extension = `.${ZipWriter.extensions[0]}`;\n        break;\n      }\n      default: {\n        throw new Error(`Unsupported archive type [zip, tar]: ${this.options.archive}`);\n      }\n    }\n  }\n\n  start() {\n    this.tarBuilder = new TARBuilder({});\n    this.filemap = {};\n  }\n\n  /** @param {HTMLCanvasElement} canvas */\n  async add(canvas) {\n    const mimeType = 'image/jpeg';\n    const extension = '.jpg';\n    const buffer = await canvasToArrayBuffer(canvas, mimeType, this.options.quality);\n    switch (this.options.archive) {\n      case TAR: {\n        const filename = pad(this.tarBuilder.count) + extension;\n        this.tarBuilder.addFile(buffer, filename);\n        break;\n      }\n      case ZIP: {\n        const filename = pad(Object.keys(this.filemap).length) + extension;\n        this.filemap[filename] = buffer;\n        break;\n      }\n      default: {\n        throw new Error(`Unsupported archive type [zip, tar]: ${this.options.archive}`);\n      }\n    }\n  }\n\n  /**\n   * @return {Promise<Blob>}\n   */\n  async save() {\n    switch (this.options.archive) {\n      case TAR: {\n        const arrayBuffer = await this.tarBuilder.build();\n        return new Blob([arrayBuffer], {type: TARBuilder.properties.mimeType});\n      }\n      case ZIP: {\n        const arrayBuffer = await encode(this.filemap, ZipWriter);\n        return new Blob([arrayBuffer], {type: ZipWriter.mimeTypes[0]});\n      }\n      default: {\n        throw new Error(`Unsupported archive type [zip, tar]: ${this.options.archive}`);\n      }\n    }\n  }\n}\n\nexport default JPEGSequenceEncoder;\n"],"mappings":"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"}