"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.findFilterIdx = findFilterIdx;
exports.findLayer = findLayer;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _keyframes = require("../keyframes");

var _animation = _interopRequireDefault(require("./animation"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function noop() {}

function findLayer(_ref) {
  var layers = _ref.layers,
      layerKeyframe = _ref.layerKeyframe;
  return layers.find(function (layer) {
    return layer.id === layerKeyframe.id;
  }) || layers.find(function (layer) {
    return layer.config.label === layerKeyframe.label;
  });
}

function findFilterIdx(_ref2) {
  var filters = _ref2.filters,
      filterKeyframe = _ref2.filterKeyframe;
  return Number.isFinite(filterKeyframe.filterIdx) ? filterKeyframe.filterIdx : filters.findIndex(function (filter) {
    return filter.id === filterKeyframe.id;
  });
}

var KeplerAnimation = function (_Animation) {
  (0, _inherits2.default)(KeplerAnimation, _Animation);

  var _super = _createSuper(KeplerAnimation);

  function KeplerAnimation(_ref3) {
    var _this;

    var _ref3$id = _ref3.id,
        id = _ref3$id === void 0 ? 'kepler' : _ref3$id,
        _ref3$layers = _ref3.layers,
        layers = _ref3$layers === void 0 ? [] : _ref3$layers,
        _ref3$layerKeyframes = _ref3.layerKeyframes,
        layerKeyframes = _ref3$layerKeyframes === void 0 ? [] : _ref3$layerKeyframes,
        _ref3$filters = _ref3.filters,
        filters = _ref3$filters === void 0 ? [] : _ref3$filters,
        _ref3$filterKeyframes = _ref3.filterKeyframes,
        filterKeyframes = _ref3$filterKeyframes === void 0 ? [] : _ref3$filterKeyframes,
        _ref3$getTimeRangeFil = _ref3.getTimeRangeFilterKeyframes,
        getTimeRangeFilterKeyframes = _ref3$getTimeRangeFil === void 0 ? undefined : _ref3$getTimeRangeFil,
        _ref3$animationConfig = _ref3.animationConfig,
        animationConfig = _ref3$animationConfig === void 0 ? undefined : _ref3$animationConfig,
        _ref3$tripKeyframe = _ref3.tripKeyframe,
        tripKeyframe = _ref3$tripKeyframe === void 0 ? undefined : _ref3$tripKeyframe,
        _ref3$cameraKeyframe = _ref3.cameraKeyframe,
        cameraKeyframe = _ref3$cameraKeyframe === void 0 ? undefined : _ref3$cameraKeyframe,
        _ref3$onTripFrameUpda = _ref3.onTripFrameUpdate,
        onTripFrameUpdate = _ref3$onTripFrameUpda === void 0 ? noop : _ref3$onTripFrameUpda,
        _ref3$onFilterFrameUp = _ref3.onFilterFrameUpdate,
        onFilterFrameUpdate = _ref3$onFilterFrameUp === void 0 ? noop : _ref3$onFilterFrameUp,
        _ref3$onLayerFrameUpd = _ref3.onLayerFrameUpdate,
        onLayerFrameUpdate = _ref3$onLayerFrameUpd === void 0 ? noop : _ref3$onLayerFrameUpd,
        _ref3$onCameraFrameUp = _ref3.onCameraFrameUpdate,
        onCameraFrameUpdate = _ref3$onCameraFrameUp === void 0 ? noop : _ref3$onCameraFrameUp;
    (0, _classCallCheck2.default)(this, KeplerAnimation);
    _this = _super.call(this, {
      id: id
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "cameraKeyframe", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "layerKeyframes", {});
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "filterKeyframes", {});
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "tripKeyframe", undefined);
    _this.onTripFrameUpdate = onTripFrameUpdate;
    _this.onFilterFrameUpdate = onFilterFrameUpdate;
    _this.onLayerFrameUpdate = onLayerFrameUpdate;
    _this.onCameraFrameUpdate = onCameraFrameUpdate;
    _this.layerKeyframes = {};
    _this.filterKeyframes = {};

    _this.setKeyframes({
      layers: layers,
      layerKeyframes: layerKeyframes,
      filters: filters,
      filterKeyframes: filterKeyframes,
      cameraKeyframe: cameraKeyframe,
      animationConfig: animationConfig,
      tripKeyframe: tripKeyframe,
      getTimeRangeFilterKeyframes: getTimeRangeFilterKeyframes
    });

    _this.draw();

    return _this;
  }

  (0, _createClass2.default)(KeplerAnimation, [{
    key: "setKeyframes",
    value: function setKeyframes(_ref4) {
      var _this2 = this;

      var _ref4$layers = _ref4.layers,
          layers = _ref4$layers === void 0 ? [] : _ref4$layers,
          _ref4$layerKeyframes = _ref4.layerKeyframes,
          layerKeyframes = _ref4$layerKeyframes === void 0 ? [] : _ref4$layerKeyframes,
          _ref4$filters = _ref4.filters,
          filters = _ref4$filters === void 0 ? [] : _ref4$filters,
          _ref4$filterKeyframes = _ref4.filterKeyframes,
          filterKeyframes = _ref4$filterKeyframes === void 0 ? [] : _ref4$filterKeyframes,
          _ref4$getTimeRangeFil = _ref4.getTimeRangeFilterKeyframes,
          getTimeRangeFilterKeyframes = _ref4$getTimeRangeFil === void 0 ? undefined : _ref4$getTimeRangeFil,
          _ref4$animationConfig = _ref4.animationConfig,
          animationConfig = _ref4$animationConfig === void 0 ? undefined : _ref4$animationConfig,
          _ref4$tripKeyframe = _ref4.tripKeyframe,
          tripKeyframe = _ref4$tripKeyframe === void 0 ? undefined : _ref4$tripKeyframe,
          _ref4$cameraKeyframe = _ref4.cameraKeyframe,
          cameraKeyframe = _ref4$cameraKeyframe === void 0 ? undefined : _ref4$cameraKeyframe,
          _ref4$timeline = _ref4.timeline,
          timeline = _ref4$timeline === void 0 ? undefined : _ref4$timeline;

      if (this.tripKeyframe && tripKeyframe) {
        this.tripKeyframe.set(_objectSpread({
          animationConfig: animationConfig
        }, tripKeyframe));
      } else if (tripKeyframe) {
        this.tripKeyframe = new _keyframes.KeplerTripKeyframes(_objectSpread({
          animationConfig: animationConfig
        }, tripKeyframe));
        this.unattachedKeyframes.push(this.tripKeyframe);
      }

      if (this.cameraKeyframe && cameraKeyframe) {
        this.cameraKeyframe.set(cameraKeyframe);
      } else if (cameraKeyframe) {
        this.cameraKeyframe = new _keyframes.CameraKeyframes(cameraKeyframe);
        this.unattachedKeyframes.push(this.cameraKeyframe);
      }

      if (layerKeyframes.length > 0) {
        this.layerKeyframes = layerKeyframes.reduce(function (acc, layerKeyframe) {
          var layer = findLayer({
            layers: layers,
            layerKeyframe: layerKeyframe
          });

          if (layer) {
            if (acc[layer.id]) {
              acc[layer.id].set(_objectSpread({
                layer: layer
              }, layerKeyframe));
            } else {
              acc[layer.id] = new _keyframes.KeplerLayerKeyframes(_objectSpread({
                layer: layer
              }, layerKeyframe));

              _this2.unattachedKeyframes.push(acc[layer.id]);
            }
          }

          return acc;
        }, this.layerKeyframes);
      }

      if (filterKeyframes.length > 0) {
        this.filterKeyframes = filterKeyframes.reduce(function (acc, filterKeyframe) {
          var filterIdx = findFilterIdx({
            filters: filters,
            filterKeyframe: filterKeyframe
          });
          var filter = filters[filterIdx];

          if (filter) {
            if (acc[filter.id]) {
              acc[filter.id].set(_objectSpread({
                filter: filter
              }, filterKeyframe));
            } else {
              acc[filter.id] = new _keyframes.KeplerFilterKeyframes(_objectSpread({
                filter: filter,
                filterIdx: filterIdx,
                getTimeRangeFilterKeyframes: getTimeRangeFilterKeyframes
              }, filterKeyframe));

              _this2.unattachedKeyframes.push(acc[filter.id]);
            }
          }

          return acc;
        }, this.filterKeyframes);
      }

      if (timeline) {
        this.attachKeyframes(timeline);
      }
    }
  }, {
    key: "getKeyframes",
    value: function getKeyframes() {
      return {
        cameraKeyframe: this.cameraKeyframe,
        layerKeyframes: this.layerKeyframes,
        filterKeyframes: this.filterKeyframes,
        tripKeyframe: this.tripKeyframe
      };
    }
  }, {
    key: "animator",
    value: function animator(animation) {
      if (animation.cameraKeyframe) {
        animation.onCameraFrameUpdate(animation.cameraKeyframe.getFrame());
      }

      if (animation.tripKeyframe) {
        animation.onTripFrameUpdate(animation.tripKeyframe.getFrame().currentTime);
      }

      for (var _i = 0, _Object$values = Object.values(animation.filterKeyframes); _i < _Object$values.length; _i++) {
        var filterKeyframe = _Object$values[_i];
        animation.onFilterFrameUpdate(filterKeyframe.filterIdx, 'value', filterKeyframe.getFrame());
      }

      for (var _i2 = 0, _Object$values2 = Object.values(animation.layerKeyframes); _i2 < _Object$values2.length; _i2++) {
        var layerKeyframe = _Object$values2[_i2];
        animation.onLayerFrameUpdate(layerKeyframe.layer, layerKeyframe.getFrame());
      }
    }
  }]);
  return KeplerAnimation;
}(_animation.default);

exports.default = KeplerAnimation;
//# sourceMappingURL=kepler-animation.js.map