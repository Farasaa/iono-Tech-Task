{"version":3,"sources":["../../../../src/encoders/video/webm-encoder.js"],"names":["WebMWriter","FrameEncoder","WebMEncoder","settings","quality","webm","canvas","document","createElement","toDataURL","substr","console","error","extension","mimeType","videoWriter","start","bind","add","save","fileWriter","fd","frameRate","framerate","addFrame","Promise","resolve","complete"],"mappings":";;;;;;;;;;;;;;AAsBA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;IAKMC,W;;;;;AAKJ,uBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AACpB,8BAAMA,QAAN;;AADoB;;AAEpB,UAAKC,OAAL,GAAe,GAAf;;AACA,QAAID,QAAQ,CAACE,IAAT,IAAiBF,QAAQ,CAACE,IAAT,CAAcD,OAAnC,EAA4C;AAC1C,YAAKA,OAAL,GAAeD,QAAQ,CAACE,IAAT,CAAcD,OAA7B;AACD;;AAED,QAAME,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;;AACA,QAAIF,MAAM,CAACG,SAAP,CAAiB,YAAjB,EAA+BC,MAA/B,CAAsC,CAAtC,EAAyC,EAAzC,MAAiD,YAArD,EAAmE;AACjEC,MAAAA,OAAO,CAACC,KAAR,CAAc,gDAAd;AACD;;AAED,UAAKC,SAAL,GAAiB,OAAjB;AACA,UAAKC,QAAL,GAAgB,YAAhB;AAEA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,+BAAb;AACA,UAAKC,GAAL,GAAW,MAAKA,GAAL,CAASD,IAAT,+BAAX;AACA,UAAKE,IAAL,GAAY,MAAKA,IAAL,CAAUF,IAAV,+BAAZ;AAlBoB;AAmBrB;;;;4BAEO;AACN,WAAKF,WAAL,GAAmB,IAAIf,UAAJ,CAAe;AAChCI,QAAAA,OAAO,EAAE,KAAKA,OADkB;AAEhCgB,QAAAA,UAAU,EAAE,IAFoB;AAGhCC,QAAAA,EAAE,EAAE,IAH4B;AAIhCC,QAAAA,SAAS,EAAE,KAAKC;AAJgB,OAAf,CAAnB;AAMD;;;;6EAGSjB,M;;;;;AACR,qBAAKS,WAAL,CAAiBS,QAAjB,CAA0BlB,MAA1B;;uBACMmB,OAAO,CAACC,OAAR,E;;;;;;;;;;;;;;;;;;;;;;;;kDAOC,KAAKX,WAAL,CAAiBY,QAAjB,E;;;;;;;;;;;;;;;;;;;EA7Ce1B,Y;;AAiD1B,eAAeC,WAAf","sourcesContent":["// Copyright (c) 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable no-console */\n/* global console, document */\nimport WebMWriter from 'webm-writer';\nimport FrameEncoder from '../frame-encoder';\n\n/**\n * WebM Encoder\n */\nclass WebMEncoder extends FrameEncoder {\n  /** @type {WebMWriter} */\n  videoWriter;\n\n  /** @param {import('types').FrameEncoderSettings} settings */\n  constructor(settings) {\n    super(settings);\n    this.quality = 0.8;\n    if (settings.webm && settings.webm.quality) {\n      this.quality = settings.webm.quality;\n    }\n\n    const canvas = document.createElement('canvas');\n    if (canvas.toDataURL('image/webp').substr(5, 10) !== 'image/webp') {\n      console.error('WebP not supported - try another export format');\n    }\n\n    this.extension = '.webm';\n    this.mimeType = 'video/webm';\n\n    this.videoWriter = null;\n    this.start = this.start.bind(this);\n    this.add = this.add.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  start() {\n    this.videoWriter = new WebMWriter({\n      quality: this.quality,\n      fileWriter: null,\n      fd: null,\n      frameRate: this.framerate\n    });\n  }\n\n  /** @param {HTMLCanvasElement} canvas */\n  async add(canvas) {\n    this.videoWriter.addFrame(canvas);\n    await Promise.resolve();\n  }\n\n  /**\n   * @return {Promise<Blob>}\n   */\n  async save() {\n    return this.videoWriter.complete();\n  }\n}\n\nexport default WebMEncoder;\n"],"file":"webm-encoder.js"}