"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _checkbox = _interopRequireDefault(require("./checkbox"));

var _utils = require("@kepler.gl/utils");

var _templateObject;

var MapLayerSelect = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  padding: 12px;\n\n  .map-layer-selector__item {\n    margin: 12px 0;\n  }\n"])));

/** @type {typeof import('./map-layer-selector').default} */
var MapLayerSelector = function MapLayerSelector(_ref) {
  var layers = _ref.layers,
      onMapToggleLayer = _ref.onMapToggleLayer;
  return /*#__PURE__*/_react["default"].createElement(MapLayerSelect, {
    className: "map-layer-selector"
  }, layers.map(function (layer, index) {
    return /*#__PURE__*/_react["default"].createElement("div", {
      key: layer.id,
      className: "map-layer-selector__item"
    }, /*#__PURE__*/_react["default"].createElement(_checkbox["default"], {
      type: "radio",
      checked: layer.isVisible,
      id: "".concat(layer.id, "-toggle-").concat((0, _utils.generateHashId)(4)),
      label: layer.name,
      onChange: function onChange() {
        onMapToggleLayer(layer.id);
      }
    }));
  }));
};

var _default = MapLayerSelector;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vbWFwLWxheWVyLXNlbGVjdG9yLnRzeCJdLCJuYW1lcyI6WyJNYXBMYXllclNlbGVjdCIsInN0eWxlZCIsImRpdiIsIk1hcExheWVyU2VsZWN0b3IiLCJsYXllcnMiLCJvbk1hcFRvZ2dsZUxheWVyIiwibWFwIiwibGF5ZXIiLCJpbmRleCIsImlkIiwiaXNWaXNpYmxlIiwibmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLGNBQWMsR0FBR0MsNkJBQU9DLEdBQVYscUtBQXBCOztBQWtCQTtBQUNBLElBQU1DLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUI7QUFBQSxNQUFFQyxNQUFGLFFBQUVBLE1BQUY7QUFBQSxNQUFVQyxnQkFBVixRQUFVQSxnQkFBVjtBQUFBLHNCQUN2QixnQ0FBQyxjQUFEO0FBQWdCLElBQUEsU0FBUyxFQUFDO0FBQTFCLEtBQ0dELE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFVBQUNDLEtBQUQsRUFBUUMsS0FBUjtBQUFBLHdCQUNWO0FBQUssTUFBQSxHQUFHLEVBQUVELEtBQUssQ0FBQ0UsRUFBaEI7QUFBb0IsTUFBQSxTQUFTLEVBQUM7QUFBOUIsb0JBQ0UsZ0NBQUMsb0JBQUQ7QUFDRSxNQUFBLElBQUksRUFBQyxPQURQO0FBRUUsTUFBQSxPQUFPLEVBQUVGLEtBQUssQ0FBQ0csU0FGakI7QUFHRSxNQUFBLEVBQUUsWUFBS0gsS0FBSyxDQUFDRSxFQUFYLHFCQUF3QiwyQkFBZSxDQUFmLENBQXhCLENBSEo7QUFJRSxNQUFBLEtBQUssRUFBRUYsS0FBSyxDQUFDSSxJQUpmO0FBS0UsTUFBQSxRQUFRLEVBQUUsb0JBQU07QUFDZE4sUUFBQUEsZ0JBQWdCLENBQUNFLEtBQUssQ0FBQ0UsRUFBUCxDQUFoQjtBQUNEO0FBUEgsTUFERixDQURVO0FBQUEsR0FBWCxDQURILENBRHVCO0FBQUEsQ0FBekI7O2VBa0JlTixnQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBDaGVja2JveCBmcm9tICcuL2NoZWNrYm94JztcbmltcG9ydCB7Z2VuZXJhdGVIYXNoSWR9IGZyb20gJ0BrZXBsZXIuZ2wvdXRpbHMnO1xuXG5jb25zdCBNYXBMYXllclNlbGVjdCA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmc6IDEycHg7XG5cbiAgLm1hcC1sYXllci1zZWxlY3Rvcl9faXRlbSB7XG4gICAgbWFyZ2luOiAxMnB4IDA7XG4gIH1cbmA7XG5pbnRlcmZhY2UgTGF5ZXIge1xuICBpZDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIGlzVmlzaWJsZTogYm9vbGVhbjtcbn1cblxuaW50ZXJmYWNlIE1hcExheWVyU2VsZWN0b3JQcm9wcyB7XG4gIGxheWVyczogTGF5ZXJbXTtcbiAgb25NYXBUb2dnbGVMYXllcjogKGxheWVySWQ6IHN0cmluZykgPT4gdm9pZDtcbn1cblxuLyoqIEB0eXBlIHt0eXBlb2YgaW1wb3J0KCcuL21hcC1sYXllci1zZWxlY3RvcicpLmRlZmF1bHR9ICovXG5jb25zdCBNYXBMYXllclNlbGVjdG9yID0gKHtsYXllcnMsIG9uTWFwVG9nZ2xlTGF5ZXJ9OiBNYXBMYXllclNlbGVjdG9yUHJvcHMpID0+IChcbiAgPE1hcExheWVyU2VsZWN0IGNsYXNzTmFtZT1cIm1hcC1sYXllci1zZWxlY3RvclwiPlxuICAgIHtsYXllcnMubWFwKChsYXllciwgaW5kZXgpID0+IChcbiAgICAgIDxkaXYga2V5PXtsYXllci5pZH0gY2xhc3NOYW1lPVwibWFwLWxheWVyLXNlbGVjdG9yX19pdGVtXCI+XG4gICAgICAgIDxDaGVja2JveFxuICAgICAgICAgIHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgY2hlY2tlZD17bGF5ZXIuaXNWaXNpYmxlfVxuICAgICAgICAgIGlkPXtgJHtsYXllci5pZH0tdG9nZ2xlLSR7Z2VuZXJhdGVIYXNoSWQoNCl9YH1cbiAgICAgICAgICBsYWJlbD17bGF5ZXIubmFtZX1cbiAgICAgICAgICBvbkNoYW5nZT17KCkgPT4ge1xuICAgICAgICAgICAgb25NYXBUb2dnbGVMYXllcihsYXllci5pZCk7XG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICkpfVxuICA8L01hcExheWVyU2VsZWN0PlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgTWFwTGF5ZXJTZWxlY3RvcjtcbiJdfQ==