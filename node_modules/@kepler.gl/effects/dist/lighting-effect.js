"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _core = require("@deck.gl/core");

var _momentTimezone = _interopRequireDefault(require("moment-timezone"));

var _constants = require("@kepler.gl/constants");

var _utils = require("@kepler.gl/utils");

var _effect = _interopRequireDefault(require("./effect"));

var _customDeckLightingEffect = _interopRequireDefault(require("./custom-deck-lighting-effect"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var LIGHT_AND_SHADOW_EFFECT_DESC = _objectSpread(_objectSpread({}, _constants.LIGHT_AND_SHADOW_EFFECT), {}, {
  "class": null
});

var LightingEffect = /*#__PURE__*/function (_Effect) {
  (0, _inherits2["default"])(LightingEffect, _Effect);

  var _super = _createSuper(LightingEffect);

  // deckEffect: PostProcessEffect | LightingEffect | null;
  function LightingEffect(props) {
    (0, _classCallCheck2["default"])(this, LightingEffect);
    return _super.call(this, props);
  }

  (0, _createClass2["default"])(LightingEffect, [{
    key: "_initializeEffect",
    value: function _initializeEffect() {
      this.parameters = _objectSpread(_objectSpread({}, _constants.DEFAULT_LIGHT_AND_SHADOW_PROPS), {}, {
        timezone: _momentTimezone["default"].tz.guess(true)
      }, this.parameters);
      var parameters = this.parameters;
      var ambientLight = new _core.AmbientLight({
        color: parameters.ambientLightColor,
        intensity: parameters.ambientLightIntensity
      });
      var sunLight = new _core._SunLight({
        timestamp: parameters.timestamp,
        color: parameters.sunLightColor,
        intensity: parameters.sunLightIntensity,
        _shadow: true
      });
      this.deckEffect = new _customDeckLightingEffect["default"]({
        ambientLight: ambientLight,
        sunLight: sunLight
      });

      if (this.deckEffect) {
        this.deckEffect.shadowColor = [].concat((0, _toConsumableArray2["default"])((0, _utils.normalizeColor)(parameters.shadowColor)), [parameters.shadowIntensity]);
      }
    }
  }, {
    key: "getDefaultProps",
    value: function getDefaultProps() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return (0, _get2["default"])((0, _getPrototypeOf2["default"])(LightingEffect.prototype), "getDefaultProps", this).call(this, _objectSpread({
        type: LIGHT_AND_SHADOW_EFFECT_DESC.type
      }, props));
    }
  }, {
    key: "setProps",
    value: function setProps(props) {
      (0, _get2["default"])((0, _getPrototypeOf2["default"])(LightingEffect.prototype), "setProps", this).call(this, props); // any uniform updated?

      if (props.parameters) {
        var parameters = this.parameters;

        if (this.type === LIGHT_AND_SHADOW_EFFECT_DESC.type) {
          /** @type {LightingEffect} */
          var effect = this.deckEffect;

          if (effect) {
            effect.shadowColor = [].concat((0, _toConsumableArray2["default"])((0, _utils.normalizeColor)(parameters.shadowColor)), [parameters.shadowIntensity]);
            effect.ambientLight.intensity = parameters.ambientLightIntensity;
            effect.ambientLight.color = parameters.ambientLightColor.slice();
            var sunLight = effect.directionalLights[0];

            if (sunLight) {
              sunLight.intensity = parameters.sunLightIntensity;
              sunLight.color = parameters.sunLightColor.slice();
              sunLight.timestamp = parameters.timestamp;
            }
          }
        }
      }
    }
  }]);
  return LightingEffect;
}(_effect["default"]);

var _default = LightingEffect;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9saWdodGluZy1lZmZlY3QudHMiXSwibmFtZXMiOlsiTElHSFRfQU5EX1NIQURPV19FRkZFQ1RfREVTQyIsIkxJR0hUX0FORF9TSEFET1dfRUZGRUNUIiwiTGlnaHRpbmdFZmZlY3QiLCJwcm9wcyIsInBhcmFtZXRlcnMiLCJERUZBVUxUX0xJR0hUX0FORF9TSEFET1dfUFJPUFMiLCJ0aW1lem9uZSIsIm1vbWVudCIsInR6IiwiZ3Vlc3MiLCJhbWJpZW50TGlnaHQiLCJBbWJpZW50TGlnaHQiLCJjb2xvciIsImFtYmllbnRMaWdodENvbG9yIiwiaW50ZW5zaXR5IiwiYW1iaWVudExpZ2h0SW50ZW5zaXR5Iiwic3VuTGlnaHQiLCJTdW5MaWdodCIsInRpbWVzdGFtcCIsInN1bkxpZ2h0Q29sb3IiLCJzdW5MaWdodEludGVuc2l0eSIsIl9zaGFkb3ciLCJkZWNrRWZmZWN0IiwiQ3VzdG9tRGVja0xpZ2h0aW5nRWZmZWN0Iiwic2hhZG93Q29sb3IiLCJzaGFkb3dJbnRlbnNpdHkiLCJ0eXBlIiwiZWZmZWN0Iiwic2xpY2UiLCJkaXJlY3Rpb25hbExpZ2h0cyIsIkVmZmVjdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUVBOztBQUNBOztBQUdBOztBQUNBOzs7Ozs7Ozs7O0FBRUEsSUFBTUEsNEJBQTRCLG1DQUM3QkMsa0NBRDZCO0FBRWhDLFdBQU87QUFGeUIsRUFBbEM7O0lBS01DLGM7Ozs7O0FBQ0o7QUFFQSwwQkFBWUMsS0FBWixFQUF1QztBQUFBO0FBQUEsNkJBQy9CQSxLQUQrQjtBQUV0Qzs7OztXQUVELDZCQUFvQjtBQUNsQixXQUFLQyxVQUFMLG1DQUNLQyx5Q0FETDtBQUVFQyxRQUFBQSxRQUFRLEVBQUVDLDJCQUFPQyxFQUFQLENBQVVDLEtBQVYsQ0FBZ0IsSUFBaEI7QUFGWixTQUdLLEtBQUtMLFVBSFY7QUFEa0IsVUFNWEEsVUFOVyxHQU1HLElBTkgsQ0FNWEEsVUFOVztBQVFsQixVQUFNTSxZQUFZLEdBQUcsSUFBSUMsa0JBQUosQ0FBaUI7QUFDcENDLFFBQUFBLEtBQUssRUFBRVIsVUFBVSxDQUFDUyxpQkFEa0I7QUFFcENDLFFBQUFBLFNBQVMsRUFBRVYsVUFBVSxDQUFDVztBQUZjLE9BQWpCLENBQXJCO0FBS0EsVUFBTUMsUUFBUSxHQUFHLElBQUlDLGVBQUosQ0FBYTtBQUM1QkMsUUFBQUEsU0FBUyxFQUFFZCxVQUFVLENBQUNjLFNBRE07QUFFNUJOLFFBQUFBLEtBQUssRUFBRVIsVUFBVSxDQUFDZSxhQUZVO0FBRzVCTCxRQUFBQSxTQUFTLEVBQUVWLFVBQVUsQ0FBQ2dCLGlCQUhNO0FBSTVCQyxRQUFBQSxPQUFPLEVBQUU7QUFKbUIsT0FBYixDQUFqQjtBQU9BLFdBQUtDLFVBQUwsR0FBa0IsSUFBSUMsb0NBQUosQ0FBNkI7QUFDN0NiLFFBQUFBLFlBQVksRUFBWkEsWUFENkM7QUFFN0NNLFFBQUFBLFFBQVEsRUFBUkE7QUFGNkMsT0FBN0IsQ0FBbEI7O0FBSUEsVUFBSSxLQUFLTSxVQUFULEVBQXFCO0FBQ25CLGFBQUtBLFVBQUwsQ0FBZ0JFLFdBQWhCLGlEQUNLLDJCQUFlcEIsVUFBVSxDQUFDb0IsV0FBMUIsQ0FETCxJQUVFcEIsVUFBVSxDQUFDcUIsZUFGYjtBQUlEO0FBQ0Y7OztXQUVELDJCQUE2RDtBQUFBLFVBQTdDdEIsS0FBNkMsdUVBQWpCLEVBQWlCO0FBQzNEO0FBQThCdUIsUUFBQUEsSUFBSSxFQUFFMUIsNEJBQTRCLENBQUMwQjtBQUFqRSxTQUEwRXZCLEtBQTFFO0FBQ0Q7OztXQUVELGtCQUFTQSxLQUFULEVBQW9DO0FBQ2xDLHFIQUFlQSxLQUFmLEVBRGtDLENBR2xDOztBQUNBLFVBQUlBLEtBQUssQ0FBQ0MsVUFBVixFQUFzQjtBQUFBLFlBQ2JBLFVBRGEsR0FDQyxJQURELENBQ2JBLFVBRGE7O0FBR3BCLFlBQUksS0FBS3NCLElBQUwsS0FBYzFCLDRCQUE0QixDQUFDMEIsSUFBL0MsRUFBcUQ7QUFDbkQ7QUFDQSxjQUFNQyxNQUFNLEdBQUcsS0FBS0wsVUFBcEI7O0FBQ0EsY0FBSUssTUFBSixFQUFZO0FBQ1ZBLFlBQUFBLE1BQU0sQ0FBQ0gsV0FBUCxpREFDSywyQkFBZXBCLFVBQVUsQ0FBQ29CLFdBQTFCLENBREwsSUFFRXBCLFVBQVUsQ0FBQ3FCLGVBRmI7QUFLQUUsWUFBQUEsTUFBTSxDQUFDakIsWUFBUCxDQUFvQkksU0FBcEIsR0FBZ0NWLFVBQVUsQ0FBQ1cscUJBQTNDO0FBQ0FZLFlBQUFBLE1BQU0sQ0FBQ2pCLFlBQVAsQ0FBb0JFLEtBQXBCLEdBQTRCUixVQUFVLENBQUNTLGlCQUFYLENBQTZCZSxLQUE3QixFQUE1QjtBQUVBLGdCQUFNWixRQUFRLEdBQUdXLE1BQU0sQ0FBQ0UsaUJBQVAsQ0FBeUIsQ0FBekIsQ0FBakI7O0FBQ0EsZ0JBQUliLFFBQUosRUFBYztBQUNaQSxjQUFBQSxRQUFRLENBQUNGLFNBQVQsR0FBcUJWLFVBQVUsQ0FBQ2dCLGlCQUFoQztBQUNBSixjQUFBQSxRQUFRLENBQUNKLEtBQVQsR0FBaUJSLFVBQVUsQ0FBQ2UsYUFBWCxDQUF5QlMsS0FBekIsRUFBakI7QUFDQVosY0FBQUEsUUFBUSxDQUFDRSxTQUFULEdBQXFCZCxVQUFVLENBQUNjLFNBQWhDO0FBQ0Q7QUFDRjtBQUNGO0FBQ0Y7QUFDRjs7O0VBdkUwQlksa0I7O2VBMEVkNUIsYyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCB7QW1iaWVudExpZ2h0LCBfU3VuTGlnaHQgYXMgU3VuTGlnaHR9IGZyb20gJ0BkZWNrLmdsL2NvcmUnO1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQtdGltZXpvbmUnO1xuXG5pbXBvcnQge0xJR0hUX0FORF9TSEFET1dfRUZGRUNULCBERUZBVUxUX0xJR0hUX0FORF9TSEFET1dfUFJPUFN9IGZyb20gJ0BrZXBsZXIuZ2wvY29uc3RhbnRzJztcbmltcG9ydCB7bm9ybWFsaXplQ29sb3J9IGZyb20gJ0BrZXBsZXIuZ2wvdXRpbHMnO1xuaW1wb3J0IHtFZmZlY3RQcm9wcywgRWZmZWN0UHJvcHNQYXJ0aWFsfSBmcm9tICdAa2VwbGVyLmdsL3R5cGVzJztcblxuaW1wb3J0IEVmZmVjdCBmcm9tICcuL2VmZmVjdCc7XG5pbXBvcnQgQ3VzdG9tRGVja0xpZ2h0aW5nRWZmZWN0IGZyb20gJy4vY3VzdG9tLWRlY2stbGlnaHRpbmctZWZmZWN0JztcblxuY29uc3QgTElHSFRfQU5EX1NIQURPV19FRkZFQ1RfREVTQyA9IHtcbiAgLi4uTElHSFRfQU5EX1NIQURPV19FRkZFQ1QsXG4gIGNsYXNzOiBudWxsXG59O1xuXG5jbGFzcyBMaWdodGluZ0VmZmVjdCBleHRlbmRzIEVmZmVjdCB7XG4gIC8vIGRlY2tFZmZlY3Q6IFBvc3RQcm9jZXNzRWZmZWN0IHwgTGlnaHRpbmdFZmZlY3QgfCBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzOiBFZmZlY3RQcm9wc1BhcnRpYWwpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cblxuICBfaW5pdGlhbGl6ZUVmZmVjdCgpIHtcbiAgICB0aGlzLnBhcmFtZXRlcnMgPSB7XG4gICAgICAuLi5ERUZBVUxUX0xJR0hUX0FORF9TSEFET1dfUFJPUFMsXG4gICAgICB0aW1lem9uZTogbW9tZW50LnR6Lmd1ZXNzKHRydWUpLFxuICAgICAgLi4udGhpcy5wYXJhbWV0ZXJzXG4gICAgfTtcbiAgICBjb25zdCB7cGFyYW1ldGVyc30gPSB0aGlzO1xuXG4gICAgY29uc3QgYW1iaWVudExpZ2h0ID0gbmV3IEFtYmllbnRMaWdodCh7XG4gICAgICBjb2xvcjogcGFyYW1ldGVycy5hbWJpZW50TGlnaHRDb2xvcixcbiAgICAgIGludGVuc2l0eTogcGFyYW1ldGVycy5hbWJpZW50TGlnaHRJbnRlbnNpdHlcbiAgICB9KTtcblxuICAgIGNvbnN0IHN1bkxpZ2h0ID0gbmV3IFN1bkxpZ2h0KHtcbiAgICAgIHRpbWVzdGFtcDogcGFyYW1ldGVycy50aW1lc3RhbXAsXG4gICAgICBjb2xvcjogcGFyYW1ldGVycy5zdW5MaWdodENvbG9yLFxuICAgICAgaW50ZW5zaXR5OiBwYXJhbWV0ZXJzLnN1bkxpZ2h0SW50ZW5zaXR5LFxuICAgICAgX3NoYWRvdzogdHJ1ZVxuICAgIH0pO1xuXG4gICAgdGhpcy5kZWNrRWZmZWN0ID0gbmV3IEN1c3RvbURlY2tMaWdodGluZ0VmZmVjdCh7XG4gICAgICBhbWJpZW50TGlnaHQsXG4gICAgICBzdW5MaWdodFxuICAgIH0pO1xuICAgIGlmICh0aGlzLmRlY2tFZmZlY3QpIHtcbiAgICAgIHRoaXMuZGVja0VmZmVjdC5zaGFkb3dDb2xvciA9IFtcbiAgICAgICAgLi4ubm9ybWFsaXplQ29sb3IocGFyYW1ldGVycy5zaGFkb3dDb2xvciksXG4gICAgICAgIHBhcmFtZXRlcnMuc2hhZG93SW50ZW5zaXR5XG4gICAgICBdO1xuICAgIH1cbiAgfVxuXG4gIGdldERlZmF1bHRQcm9wcyhwcm9wczogRWZmZWN0UHJvcHNQYXJ0aWFsID0ge30pOiBFZmZlY3RQcm9wcyB7XG4gICAgcmV0dXJuIHN1cGVyLmdldERlZmF1bHRQcm9wcyh7dHlwZTogTElHSFRfQU5EX1NIQURPV19FRkZFQ1RfREVTQy50eXBlLCAuLi5wcm9wc30pO1xuICB9XG5cbiAgc2V0UHJvcHMocHJvcHM6IEVmZmVjdFByb3BzUGFydGlhbCkge1xuICAgIHN1cGVyLnNldFByb3BzKHByb3BzKTtcblxuICAgIC8vIGFueSB1bmlmb3JtIHVwZGF0ZWQ/XG4gICAgaWYgKHByb3BzLnBhcmFtZXRlcnMpIHtcbiAgICAgIGNvbnN0IHtwYXJhbWV0ZXJzfSA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLnR5cGUgPT09IExJR0hUX0FORF9TSEFET1dfRUZGRUNUX0RFU0MudHlwZSkge1xuICAgICAgICAvKiogQHR5cGUge0xpZ2h0aW5nRWZmZWN0fSAqL1xuICAgICAgICBjb25zdCBlZmZlY3QgPSB0aGlzLmRlY2tFZmZlY3Q7XG4gICAgICAgIGlmIChlZmZlY3QpIHtcbiAgICAgICAgICBlZmZlY3Quc2hhZG93Q29sb3IgPSBbXG4gICAgICAgICAgICAuLi5ub3JtYWxpemVDb2xvcihwYXJhbWV0ZXJzLnNoYWRvd0NvbG9yKSxcbiAgICAgICAgICAgIHBhcmFtZXRlcnMuc2hhZG93SW50ZW5zaXR5XG4gICAgICAgICAgXTtcblxuICAgICAgICAgIGVmZmVjdC5hbWJpZW50TGlnaHQuaW50ZW5zaXR5ID0gcGFyYW1ldGVycy5hbWJpZW50TGlnaHRJbnRlbnNpdHk7XG4gICAgICAgICAgZWZmZWN0LmFtYmllbnRMaWdodC5jb2xvciA9IHBhcmFtZXRlcnMuYW1iaWVudExpZ2h0Q29sb3Iuc2xpY2UoKTtcblxuICAgICAgICAgIGNvbnN0IHN1bkxpZ2h0ID0gZWZmZWN0LmRpcmVjdGlvbmFsTGlnaHRzWzBdO1xuICAgICAgICAgIGlmIChzdW5MaWdodCkge1xuICAgICAgICAgICAgc3VuTGlnaHQuaW50ZW5zaXR5ID0gcGFyYW1ldGVycy5zdW5MaWdodEludGVuc2l0eTtcbiAgICAgICAgICAgIHN1bkxpZ2h0LmNvbG9yID0gcGFyYW1ldGVycy5zdW5MaWdodENvbG9yLnNsaWNlKCk7XG4gICAgICAgICAgICBzdW5MaWdodC50aW1lc3RhbXAgPSBwYXJhbWV0ZXJzLnRpbWVzdGFtcDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTGlnaHRpbmdFZmZlY3Q7XG4iXX0=