{"version":3,"sources":["../../../../src/encoders/tar/utils.js"],"names":["lookup","clean","length","i","buffer","Uint8Array","extend","orig","addLength","multipleOf","newSize","parseInt","set","pad","num","bytes","base","toString","substr","stringToUint8","input","out","offset","charCodeAt","uint8ToBase64","uint8","extraBytes","output","temp","tripletToBase64"],"mappings":"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","sourcesContent":["// Copyright (c) 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nconst lookup = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '+',\n  '/'\n];\nexport function clean(length) {\n  let i;\n  const buffer = new Uint8Array(length);\n  for (i = 0; i < length; i += 1) {\n    buffer[i] = 0;\n  }\n  return buffer;\n}\n\nexport function extend(orig, length, addLength, multipleOf) {\n  const newSize = length + addLength;\n  const buffer = clean((parseInt(newSize / multipleOf, 10) + 1) * multipleOf);\n\n  buffer.set(orig);\n\n  return buffer;\n}\n\nexport function pad(num, bytes, base) {\n  num = num.toString(base || 8);\n  return '000000000000'.substr(num.length + 12 - bytes) + num;\n}\n\nexport function stringToUint8(input, out, offset) {\n  let i;\n  let length;\n\n  out = out || clean(input.length);\n\n  offset = offset || 0;\n  for (i = 0, length = input.length; i < length; i += 1) {\n    out[offset] = input.charCodeAt(i);\n    offset += 1;\n  }\n\n  return out;\n}\n\nexport function uint8ToBase64(uint8) {\n  let i;\n  // if we have 1 byte left, pad 2 bytes\n  const extraBytes = uint8.length % 3;\n  let output = '';\n  let temp;\n  let length;\n\n  function tripletToBase64(num) {\n    return (\n      lookup[(num >> 18) & 0x3f] +\n      lookup[(num >> 12) & 0x3f] +\n      lookup[(num >> 6) & 0x3f] +\n      lookup[num & 0x3f]\n    );\n  }\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n    temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n    output += tripletToBase64(temp);\n  }\n\n  // this prevents an ERR_INVALID_URL in Chrome (Firefox okay)\n  switch (output.length % 4) {\n    case 1:\n      output += '=';\n      break;\n    case 2:\n      output += '==';\n      break;\n    default:\n      break;\n  }\n\n  return output;\n}\n"],"file":"utils.js"}