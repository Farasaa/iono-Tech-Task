"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _reactIntl = require("react-intl");

var _localization = require("@kepler.gl/localization");

var _styledComponents = require("./styled-components");

var _icons = require("./icons");

var _styledComponents2 = _interopRequireDefault(require("styled-components"));

var _utils = require("@kepler.gl/utils");

var _templateObject;

var StyledInfoHelper = _styledComponents2["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  align-items: center;\n  margin-left: 10px;\n  color: ", ";\n  display: inline-flex;\n  .info-helper__content {\n    width: ", ";\n    max-width: ", ";\n  }\n  :hover {\n    cursor: pointer;\n    color: ", ";\n  }\n"])), function (props) {
  return props.theme.labelColor;
}, function (props) {
  return props.width ? "".concat(props.width, "px") : 'auto';
}, function (props) {
  return props.width ? 'auto' : '100px';
}, function (props) {
  return props.theme.textColorHl;
});

function InfoHelperFactory() {
  var InfoHelper = function InfoHelper(_ref) {
    var description = _ref.description,
        property = _ref.property,
        containerClass = _ref.containerClass,
        width = _ref.width,
        id = _ref.id;
    // TODO: move intl out
    var intl = (0, _reactIntl.useIntl)();
    return /*#__PURE__*/_react["default"].createElement(StyledInfoHelper, {
      className: "info-helper ".concat(containerClass || ''),
      width: width,
      "data-tip": true,
      "data-for": id
    }, /*#__PURE__*/_react["default"].createElement(_icons.Docs, {
      height: "16px"
    }), /*#__PURE__*/_react["default"].createElement(_styledComponents.Tooltip, {
      id: id,
      effect: "solid"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "info-helper__content"
    }, description && /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: description,
      defaultValue: description,
      values: {
        property: intl.formatMessage({
          id: property ? "property.".concat((0, _utils.camelize)(property)) : 'misc.empty'
        })
      }
    }))));
  };

  return InfoHelper;
}

var _default = InfoHelperFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vaW5mby1oZWxwZXIudHN4Il0sIm5hbWVzIjpbIlN0eWxlZEluZm9IZWxwZXIiLCJzdHlsZWQiLCJkaXYiLCJwcm9wcyIsInRoZW1lIiwibGFiZWxDb2xvciIsIndpZHRoIiwidGV4dENvbG9ySGwiLCJJbmZvSGVscGVyRmFjdG9yeSIsIkluZm9IZWxwZXIiLCJkZXNjcmlwdGlvbiIsInByb3BlcnR5IiwiY29udGFpbmVyQ2xhc3MiLCJpZCIsImludGwiLCJmb3JtYXRNZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBTUEsSUFBTUEsZ0JBQWdCLEdBQUdDLDhCQUFPQyxHQUFWLGlUQUdYLFVBQUFDLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUMsVUFBaEI7QUFBQSxDQUhNLEVBTVQsVUFBQUYsS0FBSztBQUFBLFNBQUtBLEtBQUssQ0FBQ0csS0FBTixhQUFpQkgsS0FBSyxDQUFDRyxLQUF2QixVQUFtQyxNQUF4QztBQUFBLENBTkksRUFPTCxVQUFBSCxLQUFLO0FBQUEsU0FBS0EsS0FBSyxDQUFDRyxLQUFOLEdBQWMsTUFBZCxHQUF1QixPQUE1QjtBQUFBLENBUEEsRUFXVCxVQUFBSCxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlHLFdBQWhCO0FBQUEsQ0FYSSxDQUF0Qjs7QUF1QkEsU0FBU0MsaUJBQVQsR0FBNkI7QUFDM0IsTUFBTUMsVUFBVSxHQUFHLFNBQWJBLFVBQWEsT0FBeUU7QUFBQSxRQUF2RUMsV0FBdUUsUUFBdkVBLFdBQXVFO0FBQUEsUUFBMURDLFFBQTBELFFBQTFEQSxRQUEwRDtBQUFBLFFBQWhEQyxjQUFnRCxRQUFoREEsY0FBZ0Q7QUFBQSxRQUFoQ04sS0FBZ0MsUUFBaENBLEtBQWdDO0FBQUEsUUFBekJPLEVBQXlCLFFBQXpCQSxFQUF5QjtBQUMxRjtBQUNBLFFBQU1DLElBQUksR0FBRyx5QkFBYjtBQUVBLHdCQUNFLGdDQUFDLGdCQUFEO0FBQ0UsTUFBQSxTQUFTLHdCQUFpQkYsY0FBYyxJQUFJLEVBQW5DLENBRFg7QUFFRSxNQUFBLEtBQUssRUFBRU4sS0FGVDtBQUdFLHNCQUhGO0FBSUUsa0JBQVVPO0FBSlosb0JBTUUsZ0NBQUMsV0FBRDtBQUFNLE1BQUEsTUFBTSxFQUFDO0FBQWIsTUFORixlQU9FLGdDQUFDLHlCQUFEO0FBQVMsTUFBQSxFQUFFLEVBQUVBLEVBQWI7QUFBaUIsTUFBQSxNQUFNLEVBQUM7QUFBeEIsb0JBQ0U7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLE9BQ0dILFdBQVcsaUJBQ1YsZ0NBQUMsOEJBQUQ7QUFDRSxNQUFBLEVBQUUsRUFBRUEsV0FETjtBQUVFLE1BQUEsWUFBWSxFQUFFQSxXQUZoQjtBQUdFLE1BQUEsTUFBTSxFQUFFO0FBQ05DLFFBQUFBLFFBQVEsRUFBRUcsSUFBSSxDQUFDQyxhQUFMLENBQW1CO0FBQzNCRixVQUFBQSxFQUFFLEVBQUVGLFFBQVEsc0JBQWUscUJBQVNBLFFBQVQsQ0FBZixJQUFzQztBQUR2QixTQUFuQjtBQURKO0FBSFYsTUFGSixDQURGLENBUEYsQ0FERjtBQXlCRCxHQTdCRDs7QUE4QkEsU0FBT0YsVUFBUDtBQUNEOztlQUVjRCxpQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge3VzZUludGx9IGZyb20gJ3JlYWN0LWludGwnO1xuaW1wb3J0IHtGb3JtYXR0ZWRNZXNzYWdlfSBmcm9tICdAa2VwbGVyLmdsL2xvY2FsaXphdGlvbic7XG5pbXBvcnQge1Rvb2x0aXB9IGZyb20gJy4vc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtEb2NzfSBmcm9tICcuL2ljb25zJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtjYW1lbGl6ZX0gZnJvbSAnQGtlcGxlci5nbC91dGlscyc7XG5cbmludGVyZmFjZSBTdHlsZWRJbmZvSGVscGVyUHJvcHMge1xuICB3aWR0aD86IG51bWJlcjtcbn1cblxuY29uc3QgU3R5bGVkSW5mb0hlbHBlciA9IHN0eWxlZC5kaXY8U3R5bGVkSW5mb0hlbHBlclByb3BzPmBcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmxhYmVsQ29sb3J9O1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgLmluZm8taGVscGVyX19jb250ZW50IHtcbiAgICB3aWR0aDogJHtwcm9wcyA9PiAocHJvcHMud2lkdGggPyBgJHtwcm9wcy53aWR0aH1weGAgOiAnYXV0bycpfTtcbiAgICBtYXgtd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLndpZHRoID8gJ2F1dG8nIDogJzEwMHB4Jyl9O1xuICB9XG4gIDpob3ZlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnRleHRDb2xvckhsfTtcbiAgfVxuYDtcblxuaW50ZXJmYWNlIEluZm9IZWxwZXJQcm9wcyB7XG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIGNvbnRhaW5lckNsYXNzPzogc3RyaW5nO1xuICB3aWR0aD86IG51bWJlcjtcbiAgcHJvcGVydHk/OiBzdHJpbmc7XG4gIGlkPzogc3RyaW5nO1xufVxuXG5mdW5jdGlvbiBJbmZvSGVscGVyRmFjdG9yeSgpIHtcbiAgY29uc3QgSW5mb0hlbHBlciA9ICh7ZGVzY3JpcHRpb24sIHByb3BlcnR5LCBjb250YWluZXJDbGFzcywgd2lkdGgsIGlkfTogSW5mb0hlbHBlclByb3BzKSA9PiB7XG4gICAgLy8gVE9ETzogbW92ZSBpbnRsIG91dFxuICAgIGNvbnN0IGludGwgPSB1c2VJbnRsKCk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFN0eWxlZEluZm9IZWxwZXJcbiAgICAgICAgY2xhc3NOYW1lPXtgaW5mby1oZWxwZXIgJHtjb250YWluZXJDbGFzcyB8fCAnJ31gfVxuICAgICAgICB3aWR0aD17d2lkdGh9XG4gICAgICAgIGRhdGEtdGlwXG4gICAgICAgIGRhdGEtZm9yPXtpZH1cbiAgICAgID5cbiAgICAgICAgPERvY3MgaGVpZ2h0PVwiMTZweFwiIC8+XG4gICAgICAgIDxUb29sdGlwIGlkPXtpZH0gZWZmZWN0PVwic29saWRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImluZm8taGVscGVyX19jb250ZW50XCI+XG4gICAgICAgICAgICB7ZGVzY3JpcHRpb24gJiYgKFxuICAgICAgICAgICAgICA8Rm9ybWF0dGVkTWVzc2FnZVxuICAgICAgICAgICAgICAgIGlkPXtkZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9e2Rlc2NyaXB0aW9ufVxuICAgICAgICAgICAgICAgIHZhbHVlcz17e1xuICAgICAgICAgICAgICAgICAgcHJvcGVydHk6IGludGwuZm9ybWF0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgIGlkOiBwcm9wZXJ0eSA/IGBwcm9wZXJ0eS4ke2NhbWVsaXplKHByb3BlcnR5KX1gIDogJ21pc2MuZW1wdHknXG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICA8L1N0eWxlZEluZm9IZWxwZXI+XG4gICAgKTtcbiAgfTtcbiAgcmV0dXJuIEluZm9IZWxwZXI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEluZm9IZWxwZXJGYWN0b3J5O1xuIl19