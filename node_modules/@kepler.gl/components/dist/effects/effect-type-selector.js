"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _itemSelector = _interopRequireDefault(require("../common/item-selector/item-selector"));

var _effectTypeDropdownList = _interopRequireDefault(require("./effect-type-dropdown-list"));

var _effectTypeListItem = _interopRequireWildcard(require("./effect-type-list-item"));

var _templateObject, _templateObject2;

var DropdownWrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  border: 0;\n  width: 100%;\n  left: 0;\n  z-index: ", ";\n  width: 297px;\n  margin-left: -194px;\n  margin-top: 26px;\n\n  .typeahead__input {\n    border-color: ", ";\n    border-radius: 4px 4px 0px 0px !important;\n  }\n  .typeahead__input_box {\n    padding: 0px;\n  }\n  .typeahead__input_icon {\n    top: 34px;\n    right: 9px;\n  }\n"])), function (props) {
  return props.theme.dropdownWrapperZ;
}, function (props) {
  return props.theme.activeColor;
});

var StyledEffectTypeSelector = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  .item-selector .item-selector__dropdown {\n    padding: 4px 10px 4px 10px;\n    background-color: ", ";\n    border-radius: ", ";\n    font-size: ", ";\n    border: none;\n    :hover {\n      background-color: ", ";\n    }\n    .item-selector__dropdown__value {\n      color: ", ";\n    }\n  }\n"])), function (props) {
  return props.theme.secondaryBtnBgd;
}, function (props) {
  return props.theme.primaryBtnRadius;
}, function (props) {
  return props.theme.primaryBtnFontSizeDefault;
}, function (props) {
  return props.theme.secondaryBtnBgdHover;
}, function (props) {
  return props.theme.secondaryBtnActColor;
});

var getDisplayOption = function getDisplayOption(op) {
  return op.name;
};

var getOptionValue = function getOptionValue(op) {
  return op.type;
};

EffectTypeSelectorFactory.deps = [_effectTypeListItem["default"], _effectTypeDropdownList["default"]];

function EffectTypeSelectorFactory(EffectTypeListItem, EffectTypeDropdownList) {
  var EffectTypeSelector = function EffectTypeSelector(_ref) {
    var options = _ref.options,
        onSelect = _ref.onSelect,
        onBlur = _ref.onBlur,
        onOpen = _ref.onOpen;
    // Make sure effect type selector has dummy as selection
    var selectedItems = (0, _react.useMemo)(function () {
      return [{
        type: _effectTypeListItem.DUMMY_ITEM_ID,
        name: _effectTypeListItem.DUMMY_ITEM_ID
      }];
    }, []);
    return /*#__PURE__*/_react["default"].createElement(StyledEffectTypeSelector, {
      className: "effect-config__type"
    }, /*#__PURE__*/_react["default"].createElement(_itemSelector["default"], {
      selectedItems: selectedItems,
      options: options,
      multiSelect: false,
      disabled: false,
      placeholder: "effectManager.addEffect",
      onChange: onSelect,
      onBlur: onBlur,
      onOpen: onOpen,
      getOptionValue: getOptionValue,
      filterOption: "name",
      displayOption: getDisplayOption,
      DropDownLineItemRenderComponent: EffectTypeListItem,
      DropDownRenderComponent: EffectTypeDropdownList,
      DropDownWrapperComponent: DropdownWrapper
    }));
  };

  return (0, _styledComponents.withTheme)(EffectTypeSelector);
}

var _default = EffectTypeSelectorFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lZmZlY3RzL2VmZmVjdC10eXBlLXNlbGVjdG9yLnRzeCJdLCJuYW1lcyI6WyJEcm9wZG93bldyYXBwZXIiLCJzdHlsZWQiLCJkaXYiLCJwcm9wcyIsInRoZW1lIiwiZHJvcGRvd25XcmFwcGVyWiIsImFjdGl2ZUNvbG9yIiwiU3R5bGVkRWZmZWN0VHlwZVNlbGVjdG9yIiwic2Vjb25kYXJ5QnRuQmdkIiwicHJpbWFyeUJ0blJhZGl1cyIsInByaW1hcnlCdG5Gb250U2l6ZURlZmF1bHQiLCJzZWNvbmRhcnlCdG5CZ2RIb3ZlciIsInNlY29uZGFyeUJ0bkFjdENvbG9yIiwiZ2V0RGlzcGxheU9wdGlvbiIsIm9wIiwibmFtZSIsImdldE9wdGlvblZhbHVlIiwidHlwZSIsIkVmZmVjdFR5cGVTZWxlY3RvckZhY3RvcnkiLCJkZXBzIiwiRWZmZWN0VHlwZUxpc3RJdGVtRmFjdG9yeSIsIkVmZmVjdFR5cGVEcm9wZG93bkxpc3RGYWN0b3J5IiwiRWZmZWN0VHlwZUxpc3RJdGVtIiwiRWZmZWN0VHlwZURyb3Bkb3duTGlzdCIsIkVmZmVjdFR5cGVTZWxlY3RvciIsIm9wdGlvbnMiLCJvblNlbGVjdCIsIm9uQmx1ciIsIm9uT3BlbiIsInNlbGVjdGVkSXRlbXMiLCJEVU1NWV9JVEVNX0lEIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7QUFVQSxJQUFNQSxlQUFlLEdBQUdDLDZCQUFPQyxHQUFWLCthQUlSLFVBQUFDLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUMsZ0JBQWhCO0FBQUEsQ0FKRyxFQVVELFVBQUFGLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUUsV0FBaEI7QUFBQSxDQVZKLENBQXJCOztBQXNCQSxJQUFNQyx3QkFBd0IsR0FBR04sNkJBQU9DLEdBQVYsb1lBR04sVUFBQUMsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZSSxlQUFoQjtBQUFBLENBSEMsRUFJVCxVQUFBTCxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlLLGdCQUFoQjtBQUFBLENBSkksRUFLYixVQUFBTixLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlNLHlCQUFoQjtBQUFBLENBTFEsRUFRSixVQUFBUCxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlPLG9CQUFoQjtBQUFBLENBUkQsRUFXZixVQUFBUixLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlRLG9CQUFoQjtBQUFBLENBWFUsQ0FBOUI7O0FBZ0JBLElBQU1DLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBQUMsRUFBRTtBQUFBLFNBQUlBLEVBQUUsQ0FBQ0MsSUFBUDtBQUFBLENBQTNCOztBQUNBLElBQU1DLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsQ0FBQUYsRUFBRTtBQUFBLFNBQUlBLEVBQUUsQ0FBQ0csSUFBUDtBQUFBLENBQXpCOztBQUVBQyx5QkFBeUIsQ0FBQ0MsSUFBMUIsR0FBaUMsQ0FBQ0MsOEJBQUQsRUFBNEJDLGtDQUE1QixDQUFqQzs7QUFFQSxTQUFTSCx5QkFBVCxDQUFtQ0ksa0JBQW5DLEVBQXVEQyxzQkFBdkQsRUFBK0U7QUFDN0UsTUFBTUMsa0JBQXFELEdBQUcsU0FBeERBLGtCQUF3RCxPQUsvQjtBQUFBLFFBSjdCQyxPQUk2QixRQUo3QkEsT0FJNkI7QUFBQSxRQUg3QkMsUUFHNkIsUUFIN0JBLFFBRzZCO0FBQUEsUUFGN0JDLE1BRTZCLFFBRjdCQSxNQUU2QjtBQUFBLFFBRDdCQyxNQUM2QixRQUQ3QkEsTUFDNkI7QUFDN0I7QUFDQSxRQUFNQyxhQUFhLEdBQUcsb0JBQVEsWUFBTTtBQUNsQyxhQUFPLENBQ0w7QUFDRVosUUFBQUEsSUFBSSxFQUFFYSxpQ0FEUjtBQUVFZixRQUFBQSxJQUFJLEVBQUVlO0FBRlIsT0FESyxDQUFQO0FBTUQsS0FQcUIsRUFPbkIsRUFQbUIsQ0FBdEI7QUFTQSx3QkFDRSxnQ0FBQyx3QkFBRDtBQUEwQixNQUFBLFNBQVMsRUFBQztBQUFwQyxvQkFDRSxnQ0FBQyx3QkFBRDtBQUNFLE1BQUEsYUFBYSxFQUFFRCxhQURqQjtBQUVFLE1BQUEsT0FBTyxFQUFFSixPQUZYO0FBR0UsTUFBQSxXQUFXLEVBQUUsS0FIZjtBQUlFLE1BQUEsUUFBUSxFQUFFLEtBSlo7QUFLRSxNQUFBLFdBQVcsRUFBQyx5QkFMZDtBQU1FLE1BQUEsUUFBUSxFQUFFQyxRQU5aO0FBT0UsTUFBQSxNQUFNLEVBQUVDLE1BUFY7QUFRRSxNQUFBLE1BQU0sRUFBRUMsTUFSVjtBQVNFLE1BQUEsY0FBYyxFQUFFWixjQVRsQjtBQVVFLE1BQUEsWUFBWSxFQUFDLE1BVmY7QUFXRSxNQUFBLGFBQWEsRUFBRUgsZ0JBWGpCO0FBWUUsTUFBQSwrQkFBK0IsRUFBRVMsa0JBWm5DO0FBYUUsTUFBQSx1QkFBdUIsRUFBRUMsc0JBYjNCO0FBY0UsTUFBQSx3QkFBd0IsRUFBRXZCO0FBZDVCLE1BREYsQ0FERjtBQW9CRCxHQXBDRDs7QUFzQ0EsU0FBTyxpQ0FBVXdCLGtCQUFWLENBQVA7QUFDRDs7ZUFFY04seUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHt1c2VNZW1vfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkLCB7d2l0aFRoZW1lfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBJdGVtU2VsZWN0b3IgZnJvbSAnLi4vY29tbW9uL2l0ZW0tc2VsZWN0b3IvaXRlbS1zZWxlY3Rvcic7XG5pbXBvcnQgRWZmZWN0VHlwZURyb3Bkb3duTGlzdEZhY3RvcnkgZnJvbSAnLi9lZmZlY3QtdHlwZS1kcm9wZG93bi1saXN0JztcbmltcG9ydCBFZmZlY3RUeXBlTGlzdEl0ZW1GYWN0b3J5LCB7RFVNTVlfSVRFTV9JRH0gZnJvbSAnLi9lZmZlY3QtdHlwZS1saXN0LWl0ZW0nO1xuXG5leHBvcnQgdHlwZSBFZmZlY3RUeXBlU2VsZWN0b3JQcm9wcyA9IHtcbiAgb3B0aW9uczoge3R5cGU6IHN0cmluZzsgbmFtZTogc3RyaW5nOyBkaXNhYmxlZDogYm9vbGVhbn1bXTtcbiAgb25TZWxlY3Q6ICh0eXBlOiBhbnkpID0+IHZvaWQ7XG4gIHRoZW1lOiBhbnk7XG4gIG9uQmx1cj86ICgpID0+IHZvaWQ7XG4gIG9uT3Blbj86ICgpID0+IHZvaWQ7XG59O1xuXG5jb25zdCBEcm9wZG93bldyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBib3JkZXI6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmRyb3Bkb3duV3JhcHBlclp9O1xuICB3aWR0aDogMjk3cHg7XG4gIG1hcmdpbi1sZWZ0OiAtMTk0cHg7XG4gIG1hcmdpbi10b3A6IDI2cHg7XG5cbiAgLnR5cGVhaGVhZF9faW5wdXQge1xuICAgIGJvcmRlci1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5hY3RpdmVDb2xvcn07XG4gICAgYm9yZGVyLXJhZGl1czogNHB4IDRweCAwcHggMHB4ICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnR5cGVhaGVhZF9faW5wdXRfYm94IHtcbiAgICBwYWRkaW5nOiAwcHg7XG4gIH1cbiAgLnR5cGVhaGVhZF9faW5wdXRfaWNvbiB7XG4gICAgdG9wOiAzNHB4O1xuICAgIHJpZ2h0OiA5cHg7XG4gIH1cbmA7XG5cbmNvbnN0IFN0eWxlZEVmZmVjdFR5cGVTZWxlY3RvciA9IHN0eWxlZC5kaXZgXG4gIC5pdGVtLXNlbGVjdG9yIC5pdGVtLXNlbGVjdG9yX19kcm9wZG93biB7XG4gICAgcGFkZGluZzogNHB4IDEwcHggNHB4IDEwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5zZWNvbmRhcnlCdG5CZ2R9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUucHJpbWFyeUJ0blJhZGl1c307XG4gICAgZm9udC1zaXplOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnByaW1hcnlCdG5Gb250U2l6ZURlZmF1bHR9O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICA6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5zZWNvbmRhcnlCdG5CZ2RIb3Zlcn07XG4gICAgfVxuICAgIC5pdGVtLXNlbGVjdG9yX19kcm9wZG93bl9fdmFsdWUge1xuICAgICAgY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuc2Vjb25kYXJ5QnRuQWN0Q29sb3J9O1xuICAgIH1cbiAgfVxuYDtcblxuY29uc3QgZ2V0RGlzcGxheU9wdGlvbiA9IG9wID0+IG9wLm5hbWU7XG5jb25zdCBnZXRPcHRpb25WYWx1ZSA9IG9wID0+IG9wLnR5cGU7XG5cbkVmZmVjdFR5cGVTZWxlY3RvckZhY3RvcnkuZGVwcyA9IFtFZmZlY3RUeXBlTGlzdEl0ZW1GYWN0b3J5LCBFZmZlY3RUeXBlRHJvcGRvd25MaXN0RmFjdG9yeV07XG5cbmZ1bmN0aW9uIEVmZmVjdFR5cGVTZWxlY3RvckZhY3RvcnkoRWZmZWN0VHlwZUxpc3RJdGVtLCBFZmZlY3RUeXBlRHJvcGRvd25MaXN0KSB7XG4gIGNvbnN0IEVmZmVjdFR5cGVTZWxlY3RvcjogUmVhY3QuRkM8RWZmZWN0VHlwZVNlbGVjdG9yUHJvcHM+ID0gKHtcbiAgICBvcHRpb25zLFxuICAgIG9uU2VsZWN0LFxuICAgIG9uQmx1cixcbiAgICBvbk9wZW5cbiAgfTogRWZmZWN0VHlwZVNlbGVjdG9yUHJvcHMpID0+IHtcbiAgICAvLyBNYWtlIHN1cmUgZWZmZWN0IHR5cGUgc2VsZWN0b3IgaGFzIGR1bW15IGFzIHNlbGVjdGlvblxuICAgIGNvbnN0IHNlbGVjdGVkSXRlbXMgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgIHJldHVybiBbXG4gICAgICAgIHtcbiAgICAgICAgICB0eXBlOiBEVU1NWV9JVEVNX0lELFxuICAgICAgICAgIG5hbWU6IERVTU1ZX0lURU1fSURcbiAgICAgICAgfVxuICAgICAgXTtcbiAgICB9LCBbXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFN0eWxlZEVmZmVjdFR5cGVTZWxlY3RvciBjbGFzc05hbWU9XCJlZmZlY3QtY29uZmlnX190eXBlXCI+XG4gICAgICAgIDxJdGVtU2VsZWN0b3JcbiAgICAgICAgICBzZWxlY3RlZEl0ZW1zPXtzZWxlY3RlZEl0ZW1zfVxuICAgICAgICAgIG9wdGlvbnM9e29wdGlvbnN9XG4gICAgICAgICAgbXVsdGlTZWxlY3Q9e2ZhbHNlfVxuICAgICAgICAgIGRpc2FibGVkPXtmYWxzZX1cbiAgICAgICAgICBwbGFjZWhvbGRlcj1cImVmZmVjdE1hbmFnZXIuYWRkRWZmZWN0XCJcbiAgICAgICAgICBvbkNoYW5nZT17b25TZWxlY3R9XG4gICAgICAgICAgb25CbHVyPXtvbkJsdXJ9XG4gICAgICAgICAgb25PcGVuPXtvbk9wZW59XG4gICAgICAgICAgZ2V0T3B0aW9uVmFsdWU9e2dldE9wdGlvblZhbHVlfVxuICAgICAgICAgIGZpbHRlck9wdGlvbj1cIm5hbWVcIlxuICAgICAgICAgIGRpc3BsYXlPcHRpb249e2dldERpc3BsYXlPcHRpb259XG4gICAgICAgICAgRHJvcERvd25MaW5lSXRlbVJlbmRlckNvbXBvbmVudD17RWZmZWN0VHlwZUxpc3RJdGVtfVxuICAgICAgICAgIERyb3BEb3duUmVuZGVyQ29tcG9uZW50PXtFZmZlY3RUeXBlRHJvcGRvd25MaXN0fVxuICAgICAgICAgIERyb3BEb3duV3JhcHBlckNvbXBvbmVudD17RHJvcGRvd25XcmFwcGVyfVxuICAgICAgICAvPlxuICAgICAgPC9TdHlsZWRFZmZlY3RUeXBlU2VsZWN0b3I+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gd2l0aFRoZW1lKEVmZmVjdFR5cGVTZWxlY3Rvcik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEVmZmVjdFR5cGVTZWxlY3RvckZhY3Rvcnk7XG4iXX0=