{"version":3,"sources":["../../../../src/components/export-video/export-video-panel.js"],"names":["React","styled","withTheme","DEFAULT_PADDING","DEFAULT_ICON_BUTTON_HEIGHT","DEFAULT_ROW_GAP","DEFAULT_SETTINGS_WIDTH","ExportVideoPanelSettings","ExportVideoPanelPreview","ExportVideoPanelFooter","WithKeplerUI","PanelCloseInner","div","PanelClose","handleClose","IconButton","Icons","StyledTitle","props","theme","titleTextColor","lineHeight","PanelBodyInner","exportVideoWidth","PanelBody","mapData","adapter","setViewState","setMediaType","setCameraPreset","setFileName","setResolution","settingsData","durationMs","frameRate","resolution","mediaType","viewState","setDuration","Panel","ExportVideoPanel","header","handlePreviewVideo","handleRenderVideo"],"mappings":"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","sourcesContent":["// Copyright (c) 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\nimport styled, {withTheme} from 'styled-components';\n\nimport {\n  DEFAULT_PADDING,\n  DEFAULT_ICON_BUTTON_HEIGHT,\n  DEFAULT_ROW_GAP,\n  DEFAULT_SETTINGS_WIDTH\n} from './constants';\nimport ExportVideoPanelSettings from './export-video-panel-settings';\nimport {ExportVideoPanelPreview} from './export-video-panel-preview'; // Not yet part of standard library. TODO when updated\nimport ExportVideoPanelFooter from './export-video-panel-footer';\n\nimport {WithKeplerUI} from '../inject-kepler';\n\nconst PanelCloseInner = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding: ${DEFAULT_PADDING}px ${DEFAULT_PADDING}px 0 ${DEFAULT_PADDING}px;\n`;\n\nconst PanelClose = ({handleClose}) => (\n  <WithKeplerUI>\n    {({IconButton, Icons}) => (\n      <PanelCloseInner className=\"export-video-panel__close\">\n        <IconButton className=\"export-video-panel__button\" link onClick={handleClose}>\n          <Icons.Delete height={DEFAULT_ICON_BUTTON_HEIGHT} />\n        </IconButton>\n      </PanelCloseInner>\n    )}\n  </WithKeplerUI>\n);\n\nconst StyledTitle = styled.div`\n  color: ${props => props.theme.titleTextColor};\n  font-size: 20px;\n  font-weight: 400;\n  line-height: ${props => props.theme.lineHeight};\n  padding: 0 ${DEFAULT_PADDING}px 16px ${DEFAULT_PADDING}px;\n`;\n\nconst PanelBodyInner = styled.div`\n  padding: 0 ${DEFAULT_PADDING}px;\n  display: grid;\n  grid-template-columns: ${props => props.exportVideoWidth}px ${DEFAULT_SETTINGS_WIDTH}px;\n  grid-template-rows: auto;\n  grid-column-gap: ${DEFAULT_ROW_GAP}px;\n`;\n\nconst PanelBody = ({\n  exportVideoWidth,\n  mapData,\n  adapter,\n  setViewState,\n  setMediaType,\n  setCameraPreset,\n  setFileName,\n  setResolution,\n  settingsData,\n  durationMs,\n  frameRate,\n  resolution,\n  mediaType,\n  viewState,\n  setDuration\n}) => (\n  <PanelBodyInner className=\"export-video-panel__body\" exportVideoWidth={exportVideoWidth}>\n    <ExportVideoPanelPreview\n      mapData={mapData}\n      adapter={adapter}\n      setViewState={setViewState}\n      exportVideoWidth={exportVideoWidth}\n      resolution={resolution}\n      viewState={viewState}\n    />\n    <ExportVideoPanelSettings\n      setMediaType={setMediaType}\n      setCameraPreset={setCameraPreset}\n      setFileName={setFileName}\n      setResolution={setResolution}\n      settingsData={settingsData}\n      durationMs={durationMs}\n      frameRate={frameRate}\n      resolution={resolution}\n      mediaType={mediaType}\n      setDuration={setDuration}\n    />\n    {/* TODO: inject additional keyframing tools here */}\n  </PanelBodyInner>\n);\n\nconst Panel = styled.div`\n  width: ${props =>\n    props.exportVideoWidth + 2 * DEFAULT_PADDING + DEFAULT_ROW_GAP + DEFAULT_SETTINGS_WIDTH}px;\n`;\n\nconst ExportVideoPanel = ({\n  // UI Props\n  exportVideoWidth,\n  handleClose,\n  header,\n  // Map Props\n  mapData,\n  setViewState,\n  // Settings Props\n  settingsData,\n  setMediaType,\n  setCameraPreset,\n  setFileName,\n  setResolution,\n  // Hubble Props\n  adapter,\n  handlePreviewVideo,\n  handleRenderVideo,\n  durationMs,\n  frameRate,\n  resolution,\n  mediaType,\n  viewState,\n  setDuration\n}) => {\n  return (\n    <Panel exportVideoWidth={exportVideoWidth} className=\"export-video-panel\">\n      {header !== false ? (\n        <>\n          <PanelClose handleClose={handleClose} />\n          <StyledTitle className=\"export-video-panel__title\">Export Video</StyledTitle>\n        </>\n      ) : null}\n      <PanelBody\n        exportVideoWidth={exportVideoWidth}\n        mapData={mapData}\n        adapter={adapter}\n        setMediaType={setMediaType}\n        setCameraPreset={setCameraPreset}\n        setFileName={setFileName}\n        setResolution={setResolution}\n        settingsData={settingsData}\n        setViewState={setViewState}\n        durationMs={durationMs}\n        frameRate={frameRate}\n        resolution={resolution}\n        mediaType={mediaType}\n        viewState={viewState}\n        setDuration={setDuration}\n      />\n      <ExportVideoPanelFooter\n        handleClose={handleClose}\n        handlePreviewVideo={handlePreviewVideo}\n        handleRenderVideo={handleRenderVideo}\n      />\n    </Panel>\n  );\n};\n\nexport default withTheme(ExportVideoPanel);\n"],"file":"export-video-panel.js"}