"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _multiSelectFilter = _interopRequireDefault(require("../multi-select-filter"));

var _filterPanelWithFieldSelect = _interopRequireDefault(require("./filter-panel-with-field-select"));

// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
MultiSelectFilterPanelFactory.deps = [_filterPanelWithFieldSelect["default"], _multiSelectFilter["default"]];

function MultiSelectFilterPanelFactory(FieldPanelWithFieldSelect, MultiSelectFilterComponent) {
  var MultiSelectFilterPanel = /*#__PURE__*/_react["default"].memo(function (_ref) {
    var idx = _ref.idx,
        datasets = _ref.datasets,
        allAvailableFields = _ref.allAvailableFields,
        filter = _ref.filter,
        setFilter = _ref.setFilter,
        removeFilter = _ref.removeFilter;
    var onSetFilter = (0, _react.useCallback)(function (value) {
      return setFilter(idx, 'value', value);
    }, [idx, setFilter]);
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: "multi-select-filter-panel"
    }, /*#__PURE__*/_react["default"].createElement(FieldPanelWithFieldSelect, {
      allAvailableFields: allAvailableFields,
      datasets: datasets,
      filter: filter,
      idx: idx,
      removeFilter: removeFilter,
      setFilter: setFilter
    }, filter.type && /*#__PURE__*/_react["default"].createElement("div", {
      className: "filter-panel__filter"
    }, /*#__PURE__*/_react["default"].createElement(MultiSelectFilterComponent, {
      filter: filter,
      setFilter: onSetFilter
    }))));
  });

  MultiSelectFilterPanel.displayName = 'MultiSelectFilterPanel';
  return MultiSelectFilterPanel;
}

var _default = MultiSelectFilterPanelFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9maWx0ZXJzL2ZpbHRlci1wYW5lbHMvbXVsdGktc2VsZWN0LWZpbHRlci1wYW5lbC50c3giXSwibmFtZXMiOlsiTXVsdGlTZWxlY3RGaWx0ZXJQYW5lbEZhY3RvcnkiLCJkZXBzIiwiRmllbGRQYW5lbFdpdGhGaWVsZFNlbGVjdEZhY3RvcnkiLCJNdWx0aVNlbGVjdEZpbHRlckZhY3RvcnkiLCJGaWVsZFBhbmVsV2l0aEZpZWxkU2VsZWN0IiwiTXVsdGlTZWxlY3RGaWx0ZXJDb21wb25lbnQiLCJNdWx0aVNlbGVjdEZpbHRlclBhbmVsIiwiUmVhY3QiLCJtZW1vIiwiaWR4IiwiZGF0YXNldHMiLCJhbGxBdmFpbGFibGVGaWVsZHMiLCJmaWx0ZXIiLCJzZXRGaWx0ZXIiLCJyZW1vdmVGaWx0ZXIiLCJvblNldEZpbHRlciIsInZhbHVlIiwidHlwZSIsImRpc3BsYXlOYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUVBOztBQU5BO0FBQ0E7QUFRQUEsNkJBQTZCLENBQUNDLElBQTlCLEdBQXFDLENBQUNDLHNDQUFELEVBQW1DQyw2QkFBbkMsQ0FBckM7O0FBRUEsU0FBU0gsNkJBQVQsQ0FDRUkseUJBREYsRUFFRUMsMEJBRkYsRUFHRTtBQUNBLE1BQU1DLHNCQUErRCxnQkFBR0Msa0JBQU1DLElBQU4sQ0FDdEUsZ0JBQTBFO0FBQUEsUUFBeEVDLEdBQXdFLFFBQXhFQSxHQUF3RTtBQUFBLFFBQW5FQyxRQUFtRSxRQUFuRUEsUUFBbUU7QUFBQSxRQUF6REMsa0JBQXlELFFBQXpEQSxrQkFBeUQ7QUFBQSxRQUFyQ0MsTUFBcUMsUUFBckNBLE1BQXFDO0FBQUEsUUFBN0JDLFNBQTZCLFFBQTdCQSxTQUE2QjtBQUFBLFFBQWxCQyxZQUFrQixRQUFsQkEsWUFBa0I7QUFDeEUsUUFBTUMsV0FBVyxHQUFHLHdCQUFZLFVBQUFDLEtBQUs7QUFBQSxhQUFJSCxTQUFTLENBQUNKLEdBQUQsRUFBTSxPQUFOLEVBQWVPLEtBQWYsQ0FBYjtBQUFBLEtBQWpCLEVBQXFELENBQUNQLEdBQUQsRUFBTUksU0FBTixDQUFyRCxDQUFwQjtBQUVBLHdCQUNFO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixvQkFDRSxnQ0FBQyx5QkFBRDtBQUNFLE1BQUEsa0JBQWtCLEVBQUVGLGtCQUR0QjtBQUVFLE1BQUEsUUFBUSxFQUFFRCxRQUZaO0FBR0UsTUFBQSxNQUFNLEVBQUVFLE1BSFY7QUFJRSxNQUFBLEdBQUcsRUFBRUgsR0FKUDtBQUtFLE1BQUEsWUFBWSxFQUFFSyxZQUxoQjtBQU1FLE1BQUEsU0FBUyxFQUFFRDtBQU5iLE9BUUdELE1BQU0sQ0FBQ0ssSUFBUCxpQkFDQztBQUFLLE1BQUEsU0FBUyxFQUFDO0FBQWYsb0JBQ0UsZ0NBQUMsMEJBQUQ7QUFBNEIsTUFBQSxNQUFNLEVBQUVMLE1BQXBDO0FBQTRDLE1BQUEsU0FBUyxFQUFFRztBQUF2RCxNQURGLENBVEosQ0FERixDQURGO0FBa0JELEdBdEJxRSxDQUF4RTs7QUF5QkFULEVBQUFBLHNCQUFzQixDQUFDWSxXQUF2QixHQUFxQyx3QkFBckM7QUFFQSxTQUFPWixzQkFBUDtBQUNEOztlQUVjTiw2QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTXVsdGlTZWxlY3RGaWx0ZXJGYWN0b3J5IGZyb20gJy4uL211bHRpLXNlbGVjdC1maWx0ZXInO1xuaW1wb3J0IHtNdWx0aVNlbGVjdEZpbHRlcn0gZnJvbSAnQGtlcGxlci5nbC90eXBlcyc7XG5pbXBvcnQgRmllbGRQYW5lbFdpdGhGaWVsZFNlbGVjdEZhY3RvcnkgZnJvbSAnLi9maWx0ZXItcGFuZWwtd2l0aC1maWVsZC1zZWxlY3QnO1xuaW1wb3J0IHtGaWx0ZXJQYW5lbENvbXBvbmVudH0gZnJvbSAnLi90eXBlcyc7XG5cbk11bHRpU2VsZWN0RmlsdGVyUGFuZWxGYWN0b3J5LmRlcHMgPSBbRmllbGRQYW5lbFdpdGhGaWVsZFNlbGVjdEZhY3RvcnksIE11bHRpU2VsZWN0RmlsdGVyRmFjdG9yeV07XG5cbmZ1bmN0aW9uIE11bHRpU2VsZWN0RmlsdGVyUGFuZWxGYWN0b3J5KFxuICBGaWVsZFBhbmVsV2l0aEZpZWxkU2VsZWN0OiBSZXR1cm5UeXBlPHR5cGVvZiBGaWVsZFBhbmVsV2l0aEZpZWxkU2VsZWN0RmFjdG9yeT4sXG4gIE11bHRpU2VsZWN0RmlsdGVyQ29tcG9uZW50OiBSZXR1cm5UeXBlPHR5cGVvZiBNdWx0aVNlbGVjdEZpbHRlckZhY3Rvcnk+XG4pIHtcbiAgY29uc3QgTXVsdGlTZWxlY3RGaWx0ZXJQYW5lbDogRmlsdGVyUGFuZWxDb21wb25lbnQ8TXVsdGlTZWxlY3RGaWx0ZXI+ID0gUmVhY3QubWVtbyhcbiAgICAoe2lkeCwgZGF0YXNldHMsIGFsbEF2YWlsYWJsZUZpZWxkcywgZmlsdGVyLCBzZXRGaWx0ZXIsIHJlbW92ZUZpbHRlcn0pID0+IHtcbiAgICAgIGNvbnN0IG9uU2V0RmlsdGVyID0gdXNlQ2FsbGJhY2sodmFsdWUgPT4gc2V0RmlsdGVyKGlkeCwgJ3ZhbHVlJywgdmFsdWUpLCBbaWR4LCBzZXRGaWx0ZXJdKTtcblxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdWx0aS1zZWxlY3QtZmlsdGVyLXBhbmVsXCI+XG4gICAgICAgICAgPEZpZWxkUGFuZWxXaXRoRmllbGRTZWxlY3RcbiAgICAgICAgICAgIGFsbEF2YWlsYWJsZUZpZWxkcz17YWxsQXZhaWxhYmxlRmllbGRzfVxuICAgICAgICAgICAgZGF0YXNldHM9e2RhdGFzZXRzfVxuICAgICAgICAgICAgZmlsdGVyPXtmaWx0ZXJ9XG4gICAgICAgICAgICBpZHg9e2lkeH1cbiAgICAgICAgICAgIHJlbW92ZUZpbHRlcj17cmVtb3ZlRmlsdGVyfVxuICAgICAgICAgICAgc2V0RmlsdGVyPXtzZXRGaWx0ZXJ9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2ZpbHRlci50eXBlICYmIChcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaWx0ZXItcGFuZWxfX2ZpbHRlclwiPlxuICAgICAgICAgICAgICAgIDxNdWx0aVNlbGVjdEZpbHRlckNvbXBvbmVudCBmaWx0ZXI9e2ZpbHRlcn0gc2V0RmlsdGVyPXtvblNldEZpbHRlcn0gLz5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvRmllbGRQYW5lbFdpdGhGaWVsZFNlbGVjdD5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbiAgKTtcblxuICBNdWx0aVNlbGVjdEZpbHRlclBhbmVsLmRpc3BsYXlOYW1lID0gJ011bHRpU2VsZWN0RmlsdGVyUGFuZWwnO1xuXG4gIHJldHVybiBNdWx0aVNlbGVjdEZpbHRlclBhbmVsO1xufVxuXG5leHBvcnQgZGVmYXVsdCBNdWx0aVNlbGVjdEZpbHRlclBhbmVsRmFjdG9yeTtcbiJdfQ==