"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.providerStateReducerFactory = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reduxActions = require("redux-actions");

var providerStateUpdaters = _interopRequireWildcard(require("./provider-state-updaters"));

var _actions = require("@kepler.gl/actions");

var _actionHandler;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Important: Do not rename `actionHandler` or the assignment pattern of property value.
 * It is used to generate documentation
 */
var actionHandler = (_actionHandler = {}, (0, _defineProperty2["default"])(_actionHandler, _actions.ProviderActionTypes.EXPORT_FILE_TO_CLOUD, providerStateUpdaters.exportFileToCloudUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ProviderActionTypes.EXPORT_FILE_SUCCESS, providerStateUpdaters.exportFileSuccessUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ProviderActionTypes.EXPORT_FILE_ERROR, providerStateUpdaters.exportFileErrorUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ProviderActionTypes.RESET_PROVIDER_STATUS, providerStateUpdaters.resetProviderStatusUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ProviderActionTypes.POST_SAVE_LOAD_SUCCESS, providerStateUpdaters.postSaveLoadSuccessUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ProviderActionTypes.LOAD_CLOUD_MAP, providerStateUpdaters.loadCloudMapUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ProviderActionTypes.LOAD_CLOUD_MAP_SUCCESS, providerStateUpdaters.loadCloudMapSuccessUpdater), (0, _defineProperty2["default"])(_actionHandler, _actions.ProviderActionTypes.LOAD_CLOUD_MAP_ERROR, providerStateUpdaters.loadCloudMapErrorUpdater), _actionHandler); // construct provider-state reducer

var providerStateReducerFactory = function providerStateReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (// @ts-expect-error
    (0, _reduxActions.handleActions)(actionHandler, _objectSpread(_objectSpread(_objectSpread({}, providerStateUpdaters.INITIAL_PROVIDER_STATE), initialState), {}, {
      initialState: initialState
    }))
  );
};

exports.providerStateReducerFactory = providerStateReducerFactory;

var _default = providerStateReducerFactory();

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wcm92aWRlci1zdGF0ZS50cyJdLCJuYW1lcyI6WyJhY3Rpb25IYW5kbGVyIiwiQWN0aW9uVHlwZXMiLCJFWFBPUlRfRklMRV9UT19DTE9VRCIsInByb3ZpZGVyU3RhdGVVcGRhdGVycyIsImV4cG9ydEZpbGVUb0Nsb3VkVXBkYXRlciIsIkVYUE9SVF9GSUxFX1NVQ0NFU1MiLCJleHBvcnRGaWxlU3VjY2Vzc1VwZGF0ZXIiLCJFWFBPUlRfRklMRV9FUlJPUiIsImV4cG9ydEZpbGVFcnJvclVwZGF0ZXIiLCJSRVNFVF9QUk9WSURFUl9TVEFUVVMiLCJyZXNldFByb3ZpZGVyU3RhdHVzVXBkYXRlciIsIlBPU1RfU0FWRV9MT0FEX1NVQ0NFU1MiLCJwb3N0U2F2ZUxvYWRTdWNjZXNzVXBkYXRlciIsIkxPQURfQ0xPVURfTUFQIiwibG9hZENsb3VkTWFwVXBkYXRlciIsIkxPQURfQ0xPVURfTUFQX1NVQ0NFU1MiLCJsb2FkQ2xvdWRNYXBTdWNjZXNzVXBkYXRlciIsIkxPQURfQ0xPVURfTUFQX0VSUk9SIiwibG9hZENsb3VkTWFwRXJyb3JVcGRhdGVyIiwicHJvdmlkZXJTdGF0ZVJlZHVjZXJGYWN0b3J5IiwiaW5pdGlhbFN0YXRlIiwiSU5JVElBTF9QUk9WSURFUl9TVEFURSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsYUFBYSwwRUFDaEJDLDZCQUFZQyxvQkFESSxFQUNtQkMscUJBQXFCLENBQUNDLHdCQUR6QyxvREFFaEJILDZCQUFZSSxtQkFGSSxFQUVrQkYscUJBQXFCLENBQUNHLHdCQUZ4QyxvREFHaEJMLDZCQUFZTSxpQkFISSxFQUdnQkoscUJBQXFCLENBQUNLLHNCQUh0QyxvREFJaEJQLDZCQUFZUSxxQkFKSSxFQUlvQk4scUJBQXFCLENBQUNPLDBCQUoxQyxvREFLaEJULDZCQUFZVSxzQkFMSSxFQUtxQlIscUJBQXFCLENBQUNTLDBCQUwzQyxvREFNaEJYLDZCQUFZWSxjQU5JLEVBTWFWLHFCQUFxQixDQUFDVyxtQkFObkMsb0RBT2hCYiw2QkFBWWMsc0JBUEksRUFPcUJaLHFCQUFxQixDQUFDYSwwQkFQM0Msb0RBUWhCZiw2QkFBWWdCLG9CQVJJLEVBUW1CZCxxQkFBcUIsQ0FBQ2Usd0JBUnpDLGtCQUFuQixDLENBV0E7O0FBQ08sSUFBTUMsMkJBQTJCLEdBQUcsU0FBOUJBLDJCQUE4QjtBQUFBLE1BQUNDLFlBQUQsdUVBQWdCLEVBQWhCO0FBQUEsU0FDekM7QUFDQSxxQ0FBY3BCLGFBQWQsZ0RBQ0tHLHFCQUFxQixDQUFDa0Isc0JBRDNCLEdBRUtELFlBRkw7QUFHRUEsTUFBQUEsWUFBWSxFQUFaQTtBQUhGO0FBRnlDO0FBQUEsQ0FBcEM7Ozs7ZUFRUUQsMkJBQTJCLEUiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQge2hhbmRsZUFjdGlvbnN9IGZyb20gJ3JlZHV4LWFjdGlvbnMnO1xuaW1wb3J0ICogYXMgcHJvdmlkZXJTdGF0ZVVwZGF0ZXJzIGZyb20gJy4vcHJvdmlkZXItc3RhdGUtdXBkYXRlcnMnO1xuaW1wb3J0IHtQcm92aWRlckFjdGlvblR5cGVzIGFzIEFjdGlvblR5cGVzfSBmcm9tICdAa2VwbGVyLmdsL2FjdGlvbnMnO1xuXG4vKipcbiAqIEltcG9ydGFudDogRG8gbm90IHJlbmFtZSBgYWN0aW9uSGFuZGxlcmAgb3IgdGhlIGFzc2lnbm1lbnQgcGF0dGVybiBvZiBwcm9wZXJ0eSB2YWx1ZS5cbiAqIEl0IGlzIHVzZWQgdG8gZ2VuZXJhdGUgZG9jdW1lbnRhdGlvblxuICovXG5jb25zdCBhY3Rpb25IYW5kbGVyID0ge1xuICBbQWN0aW9uVHlwZXMuRVhQT1JUX0ZJTEVfVE9fQ0xPVURdOiBwcm92aWRlclN0YXRlVXBkYXRlcnMuZXhwb3J0RmlsZVRvQ2xvdWRVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuRVhQT1JUX0ZJTEVfU1VDQ0VTU106IHByb3ZpZGVyU3RhdGVVcGRhdGVycy5leHBvcnRGaWxlU3VjY2Vzc1VwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5FWFBPUlRfRklMRV9FUlJPUl06IHByb3ZpZGVyU3RhdGVVcGRhdGVycy5leHBvcnRGaWxlRXJyb3JVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuUkVTRVRfUFJPVklERVJfU1RBVFVTXTogcHJvdmlkZXJTdGF0ZVVwZGF0ZXJzLnJlc2V0UHJvdmlkZXJTdGF0dXNVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuUE9TVF9TQVZFX0xPQURfU1VDQ0VTU106IHByb3ZpZGVyU3RhdGVVcGRhdGVycy5wb3N0U2F2ZUxvYWRTdWNjZXNzVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLkxPQURfQ0xPVURfTUFQXTogcHJvdmlkZXJTdGF0ZVVwZGF0ZXJzLmxvYWRDbG91ZE1hcFVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5MT0FEX0NMT1VEX01BUF9TVUNDRVNTXTogcHJvdmlkZXJTdGF0ZVVwZGF0ZXJzLmxvYWRDbG91ZE1hcFN1Y2Nlc3NVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuTE9BRF9DTE9VRF9NQVBfRVJST1JdOiBwcm92aWRlclN0YXRlVXBkYXRlcnMubG9hZENsb3VkTWFwRXJyb3JVcGRhdGVyXG59O1xuXG4vLyBjb25zdHJ1Y3QgcHJvdmlkZXItc3RhdGUgcmVkdWNlclxuZXhwb3J0IGNvbnN0IHByb3ZpZGVyU3RhdGVSZWR1Y2VyRmFjdG9yeSA9IChpbml0aWFsU3RhdGUgPSB7fSkgPT5cbiAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICBoYW5kbGVBY3Rpb25zKGFjdGlvbkhhbmRsZXIsIHtcbiAgICAuLi5wcm92aWRlclN0YXRlVXBkYXRlcnMuSU5JVElBTF9QUk9WSURFUl9TVEFURSxcbiAgICAuLi5pbml0aWFsU3RhdGUsXG4gICAgaW5pdGlhbFN0YXRlXG4gIH0pO1xuXG5leHBvcnQgZGVmYXVsdCBwcm92aWRlclN0YXRlUmVkdWNlckZhY3RvcnkoKTtcbiJdfQ==