"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.opacityFrame = exports.elevationScaleFrame = exports.radiusFrame = exports.filterFrame = exports.cameraFrame = void 0;

var _popmotion = require("popmotion");

var cameraFrame = function cameraFrame(cameraKeyframes) {
  var factor = cameraKeyframes.factor;
  var start = cameraKeyframes.getStartData();
  var end = cameraKeyframes.getEndData();

  var latitude = _popmotion.transform.interpolate([0, 1], [start.latitude, end.latitude], {
    ease: end.ease
  });

  var longitude = _popmotion.transform.interpolate([0, 1], [start.longitude, end.longitude], {
    ease: end.ease
  });

  var zoom = _popmotion.transform.interpolate([0, 1], [start.zoom, end.zoom], {
    ease: end.ease
  });

  var bearing = _popmotion.transform.interpolate([0, 1], [start.bearing, end.bearing], {
    ease: end.ease
  });

  var pitch = _popmotion.transform.interpolate([0, 1], [start.pitch, end.pitch], {
    ease: end.ease
  });

  var cameraState = {
    latitude: latitude(factor),
    longitude: longitude(factor),
    zoom: zoom(factor),
    bearing: bearing(factor),
    pitch: pitch(factor)
  };
  return cameraState;
};

exports.cameraFrame = cameraFrame;

var filterFrame = function filterFrame(filterKeyframes) {
  var factor = filterKeyframes.factor;
  var start = filterKeyframes.getStartData();
  var end = filterKeyframes.getEndData();

  var left = _popmotion.transform.interpolate([0, 1], [start[0], end[0]], {
    ease: end.ease
  });

  var right = _popmotion.transform.interpolate([0, 1], [start[1], end[1]], {
    ease: end.ease
  });

  return [left(factor), right(factor)];
};

exports.filterFrame = filterFrame;

var radiusFrame = function radiusFrame(keyframes) {
  var factor = keyframes.factor;
  var start = keyframes.getStartData();
  var end = keyframes.getEndData();

  var radius = _popmotion.transform.interpolate([0, 1], [start.radius, end.radius], {
    ease: end.ease
  });

  return radius(factor);
};

exports.radiusFrame = radiusFrame;

var elevationScaleFrame = function elevationScaleFrame(keyframes) {
  var factor = keyframes.factor;
  var start = keyframes.getStartData();
  var end = keyframes.getEndData();

  var elevationScale = _popmotion.transform.interpolate([0, 1], [start.elevationScale, end.elevationScale], {
    ease: end.ease
  });

  return elevationScale(factor);
};

exports.elevationScaleFrame = elevationScaleFrame;

var opacityFrame = function opacityFrame(keyframes) {
  var factor = keyframes.factor;
  var start = keyframes.getStartData();
  var end = keyframes.getEndData();

  var opacity = _popmotion.transform.interpolate([0, 1], [start.opacity, end.opacity], {
    ease: end.ease
  });

  return opacity(factor);
};

exports.opacityFrame = opacityFrame;
//# sourceMappingURL=frame.js.map