"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AddDataButtonFactory = AddDataButtonFactory;
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _localization = require("@kepler.gl/localization");

var _icons = require("../../common/icons");

var _styledComponents2 = require("../../common/styled-components");

var _sourceDataCatalog = _interopRequireDefault(require("../common/source-data-catalog"));

var _templateObject, _templateObject2;

var StyledDatasetTitle = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  line-height: ", ";\n  font-weight: 400;\n  letter-spacing: 1.25px;\n  color: ", ";\n  font-size: 11px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ", ";\n"])), function (props) {
  return props.theme.sidePanelTitleLineHeight;
}, function (props) {
  return props.theme.subtextColor;
}, function (props) {
  return props.showDatasetList ? '16px' : '4px';
});

var StyledDatasetSection = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  border-bottom: 1px solid ", ";\n"])), function (props) {
  return props.theme.sidePanelBorderColor;
});

function AddDataButtonFactory() {
  var AddDataButton = /*#__PURE__*/_react["default"].memo(function (_ref) {
    var onClick = _ref.onClick,
        isInactive = _ref.isInactive;
    return /*#__PURE__*/_react["default"].createElement(_styledComponents2.Button, {
      className: "add-data-button",
      onClick: onClick,
      inactive: !isInactive,
      width: "105px",
      secondary: true
    }, /*#__PURE__*/_react["default"].createElement(_icons.Add, {
      height: "12px"
    }), /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'layerManager.addData'
    }));
  });

  AddDataButton.displayName = 'AddDataButton';
  return AddDataButton;
}

DatasetSectionFactory.deps = [_sourceDataCatalog["default"], AddDataButtonFactory];

function DatasetSectionFactory(SourceDataCatalog, AddDataButton) {
  var DatasetSection = function DatasetSection(props) {
    var datasets = props.datasets,
        showDatasetTable = props.showDatasetTable,
        updateTableColor = props.updateTableColor,
        showDeleteDataset = props.showDeleteDataset,
        removeDataset = props.removeDataset,
        showDatasetList = props.showDatasetList,
        showAddDataModal = props.showAddDataModal;
    var datasetCount = Object.keys(datasets).length;
    return /*#__PURE__*/_react["default"].createElement(StyledDatasetSection, null, /*#__PURE__*/_react["default"].createElement(StyledDatasetTitle, {
      showDatasetList: showDatasetList
    }, /*#__PURE__*/_react["default"].createElement("span", null, "Datasets", datasetCount ? "(".concat(datasetCount, ")") : ''), /*#__PURE__*/_react["default"].createElement(AddDataButton, {
      onClick: showAddDataModal,
      isInactive: !datasetCount
    })), showDatasetList && /*#__PURE__*/_react["default"].createElement(SourceDataCatalog, {
      datasets: datasets,
      showDatasetTable: showDatasetTable,
      updateTableColor: updateTableColor,
      removeDataset: removeDataset,
      showDeleteDataset: showDeleteDataset
    }));
  };

  return DatasetSection;
}

var _default = DatasetSectionFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaWRlLXBhbmVsL2xheWVyLXBhbmVsL2RhdGFzZXQtc2VjdGlvbi50c3giXSwibmFtZXMiOlsiU3R5bGVkRGF0YXNldFRpdGxlIiwic3R5bGVkIiwiZGl2IiwicHJvcHMiLCJ0aGVtZSIsInNpZGVQYW5lbFRpdGxlTGluZUhlaWdodCIsInN1YnRleHRDb2xvciIsInNob3dEYXRhc2V0TGlzdCIsIlN0eWxlZERhdGFzZXRTZWN0aW9uIiwic2lkZVBhbmVsQm9yZGVyQ29sb3IiLCJBZGREYXRhQnV0dG9uRmFjdG9yeSIsIkFkZERhdGFCdXR0b24iLCJSZWFjdCIsIm1lbW8iLCJvbkNsaWNrIiwiaXNJbmFjdGl2ZSIsImRpc3BsYXlOYW1lIiwiRGF0YXNldFNlY3Rpb25GYWN0b3J5IiwiZGVwcyIsIlNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeSIsIlNvdXJjZURhdGFDYXRhbG9nIiwiRGF0YXNldFNlY3Rpb24iLCJkYXRhc2V0cyIsInNob3dEYXRhc2V0VGFibGUiLCJ1cGRhdGVUYWJsZUNvbG9yIiwic2hvd0RlbGV0ZURhdGFzZXQiLCJyZW1vdmVEYXRhc2V0Iiwic2hvd0FkZERhdGFNb2RhbCIsImRhdGFzZXRDb3VudCIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7O0FBbUJBLElBQU1BLGtCQUFrQixHQUFHQyw2QkFBT0MsR0FBVix3U0FDUCxVQUFBQyxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlDLHdCQUFoQjtBQUFBLENBREUsRUFJYixVQUFBRixLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlFLFlBQWhCO0FBQUEsQ0FKUSxFQVNMLFVBQUFILEtBQUs7QUFBQSxTQUFLQSxLQUFLLENBQUNJLGVBQU4sR0FBd0IsTUFBeEIsR0FBaUMsS0FBdEM7QUFBQSxDQVRBLENBQXhCOztBQVlBLElBQU1DLG9CQUFvQixHQUFHUCw2QkFBT0MsR0FBViw2SEFDRyxVQUFBQyxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlLLG9CQUFoQjtBQUFBLENBRFIsQ0FBMUI7O0FBSU8sU0FBU0Msb0JBQVQsR0FBZ0M7QUFDckMsTUFBTUMsYUFBMkMsZ0JBQUdDLGtCQUFNQyxJQUFOLENBQVc7QUFBQSxRQUFFQyxPQUFGLFFBQUVBLE9BQUY7QUFBQSxRQUFXQyxVQUFYLFFBQVdBLFVBQVg7QUFBQSx3QkFDN0QsZ0NBQUMseUJBQUQ7QUFDRSxNQUFBLFNBQVMsRUFBQyxpQkFEWjtBQUVFLE1BQUEsT0FBTyxFQUFFRCxPQUZYO0FBR0UsTUFBQSxRQUFRLEVBQUUsQ0FBQ0MsVUFIYjtBQUlFLE1BQUEsS0FBSyxFQUFDLE9BSlI7QUFLRSxNQUFBLFNBQVM7QUFMWCxvQkFPRSxnQ0FBQyxVQUFEO0FBQUssTUFBQSxNQUFNLEVBQUM7QUFBWixNQVBGLGVBUUUsZ0NBQUMsOEJBQUQ7QUFBa0IsTUFBQSxFQUFFLEVBQUU7QUFBdEIsTUFSRixDQUQ2RDtBQUFBLEdBQVgsQ0FBcEQ7O0FBWUFKLEVBQUFBLGFBQWEsQ0FBQ0ssV0FBZCxHQUE0QixlQUE1QjtBQUNBLFNBQU9MLGFBQVA7QUFDRDs7QUFFRE0scUJBQXFCLENBQUNDLElBQXRCLEdBQTZCLENBQUNDLDZCQUFELEVBQTJCVCxvQkFBM0IsQ0FBN0I7O0FBRUEsU0FBU08scUJBQVQsQ0FDRUcsaUJBREYsRUFFRVQsYUFGRixFQUdFO0FBQ0EsTUFBTVUsY0FBNkMsR0FBRyxTQUFoREEsY0FBZ0QsQ0FBQWxCLEtBQUssRUFBSTtBQUFBLFFBRTNEbUIsUUFGMkQsR0FTekRuQixLQVR5RCxDQUUzRG1CLFFBRjJEO0FBQUEsUUFHM0RDLGdCQUgyRCxHQVN6RHBCLEtBVHlELENBRzNEb0IsZ0JBSDJEO0FBQUEsUUFJM0RDLGdCQUoyRCxHQVN6RHJCLEtBVHlELENBSTNEcUIsZ0JBSjJEO0FBQUEsUUFLM0RDLGlCQUwyRCxHQVN6RHRCLEtBVHlELENBSzNEc0IsaUJBTDJEO0FBQUEsUUFNM0RDLGFBTjJELEdBU3pEdkIsS0FUeUQsQ0FNM0R1QixhQU4yRDtBQUFBLFFBTzNEbkIsZUFQMkQsR0FTekRKLEtBVHlELENBTzNESSxlQVAyRDtBQUFBLFFBUTNEb0IsZ0JBUjJELEdBU3pEeEIsS0FUeUQsQ0FRM0R3QixnQkFSMkQ7QUFVN0QsUUFBTUMsWUFBWSxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWVIsUUFBWixFQUFzQlMsTUFBM0M7QUFFQSx3QkFDRSxnQ0FBQyxvQkFBRCxxQkFDRSxnQ0FBQyxrQkFBRDtBQUFvQixNQUFBLGVBQWUsRUFBRXhCO0FBQXJDLG9CQUNFLDBEQUFlcUIsWUFBWSxjQUFPQSxZQUFQLFNBQXlCLEVBQXBELENBREYsZUFFRSxnQ0FBQyxhQUFEO0FBQWUsTUFBQSxPQUFPLEVBQUVELGdCQUF4QjtBQUEwQyxNQUFBLFVBQVUsRUFBRSxDQUFDQztBQUF2RCxNQUZGLENBREYsRUFLR3JCLGVBQWUsaUJBQ2QsZ0NBQUMsaUJBQUQ7QUFDRSxNQUFBLFFBQVEsRUFBRWUsUUFEWjtBQUVFLE1BQUEsZ0JBQWdCLEVBQUVDLGdCQUZwQjtBQUdFLE1BQUEsZ0JBQWdCLEVBQUVDLGdCQUhwQjtBQUlFLE1BQUEsYUFBYSxFQUFFRSxhQUpqQjtBQUtFLE1BQUEsaUJBQWlCLEVBQUVEO0FBTHJCLE1BTkosQ0FERjtBQWlCRCxHQTdCRDs7QUErQkEsU0FBT0osY0FBUDtBQUNEOztlQUVjSixxQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7Rm9ybWF0dGVkTWVzc2FnZX0gZnJvbSAnQGtlcGxlci5nbC9sb2NhbGl6YXRpb24nO1xuaW1wb3J0IHtBZGR9IGZyb20gJy4uLy4uL2NvbW1vbi9pY29ucyc7XG5pbXBvcnQge0J1dHRvbn0gZnJvbSAnLi4vLi4vY29tbW9uL3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IFNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeSBmcm9tICcuLi9jb21tb24vc291cmNlLWRhdGEtY2F0YWxvZyc7XG5pbXBvcnQge1VJU3RhdGVBY3Rpb25zLCBWaXNTdGF0ZUFjdGlvbnMsIEFjdGlvbkhhbmRsZXJ9IGZyb20gJ0BrZXBsZXIuZ2wvYWN0aW9ucyc7XG5pbXBvcnQge0RhdGFzZXRzfSBmcm9tICdAa2VwbGVyLmdsL3RhYmxlJztcblxudHlwZSBBZGREYXRhQnV0dG9uUHJvcHMgPSB7XG4gIG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIGlzSW5hY3RpdmU6IGJvb2xlYW47XG59O1xuXG50eXBlIERhdGFzZXRTZWN0aW9uUHJvcHMgPSB7XG4gIGRhdGFzZXRzOiBEYXRhc2V0cztcbiAgc2hvd0RhdGFzZXRMaXN0PzogYm9vbGVhbjtcbiAgc2hvd0RlbGV0ZURhdGFzZXQ/OiBib29sZWFuO1xuICBzaG93RGF0YXNldFRhYmxlOiBBY3Rpb25IYW5kbGVyPHR5cGVvZiBWaXNTdGF0ZUFjdGlvbnMuc2hvd0RhdGFzZXRUYWJsZT47XG4gIHVwZGF0ZVRhYmxlQ29sb3I6IEFjdGlvbkhhbmRsZXI8dHlwZW9mIFZpc1N0YXRlQWN0aW9ucy51cGRhdGVUYWJsZUNvbG9yPjtcbiAgcmVtb3ZlRGF0YXNldDogQWN0aW9uSGFuZGxlcjx0eXBlb2YgVUlTdGF0ZUFjdGlvbnMub3BlbkRlbGV0ZU1vZGFsPjtcbiAgc2hvd0FkZERhdGFNb2RhbDogKCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IFN0eWxlZERhdGFzZXRUaXRsZSA9IHN0eWxlZC5kaXY8e3Nob3dEYXRhc2V0TGlzdD86IGJvb2xlYW59PmBcbiAgbGluZS1oZWlnaHQ6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuc2lkZVBhbmVsVGl0bGVMaW5lSGVpZ2h0fTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDEuMjVweDtcbiAgY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuc3VidGV4dENvbG9yfTtcbiAgZm9udC1zaXplOiAxMXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206ICR7cHJvcHMgPT4gKHByb3BzLnNob3dEYXRhc2V0TGlzdCA/ICcxNnB4JyA6ICc0cHgnKX07XG5gO1xuXG5jb25zdCBTdHlsZWREYXRhc2V0U2VjdGlvbiA9IHN0eWxlZC5kaXZgXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAke3Byb3BzID0+IHByb3BzLnRoZW1lLnNpZGVQYW5lbEJvcmRlckNvbG9yfTtcbmA7XG5cbmV4cG9ydCBmdW5jdGlvbiBBZGREYXRhQnV0dG9uRmFjdG9yeSgpIHtcbiAgY29uc3QgQWRkRGF0YUJ1dHRvbjogUmVhY3QuRkM8QWRkRGF0YUJ1dHRvblByb3BzPiA9IFJlYWN0Lm1lbW8oKHtvbkNsaWNrLCBpc0luYWN0aXZlfSkgPT4gKFxuICAgIDxCdXR0b25cbiAgICAgIGNsYXNzTmFtZT1cImFkZC1kYXRhLWJ1dHRvblwiXG4gICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgaW5hY3RpdmU9eyFpc0luYWN0aXZlfVxuICAgICAgd2lkdGg9XCIxMDVweFwiXG4gICAgICBzZWNvbmRhcnlcbiAgICA+XG4gICAgICA8QWRkIGhlaWdodD1cIjEycHhcIiAvPlxuICAgICAgPEZvcm1hdHRlZE1lc3NhZ2UgaWQ9eydsYXllck1hbmFnZXIuYWRkRGF0YSd9IC8+XG4gICAgPC9CdXR0b24+XG4gICkpO1xuICBBZGREYXRhQnV0dG9uLmRpc3BsYXlOYW1lID0gJ0FkZERhdGFCdXR0b24nO1xuICByZXR1cm4gQWRkRGF0YUJ1dHRvbjtcbn1cblxuRGF0YXNldFNlY3Rpb25GYWN0b3J5LmRlcHMgPSBbU291cmNlRGF0YUNhdGFsb2dGYWN0b3J5LCBBZGREYXRhQnV0dG9uRmFjdG9yeV07XG5cbmZ1bmN0aW9uIERhdGFzZXRTZWN0aW9uRmFjdG9yeShcbiAgU291cmNlRGF0YUNhdGFsb2c6IFJldHVyblR5cGU8dHlwZW9mIFNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeT4sXG4gIEFkZERhdGFCdXR0b246IFJldHVyblR5cGU8dHlwZW9mIEFkZERhdGFCdXR0b25GYWN0b3J5PlxuKSB7XG4gIGNvbnN0IERhdGFzZXRTZWN0aW9uOiBSZWFjdC5GQzxEYXRhc2V0U2VjdGlvblByb3BzPiA9IHByb3BzID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBkYXRhc2V0cyxcbiAgICAgIHNob3dEYXRhc2V0VGFibGUsXG4gICAgICB1cGRhdGVUYWJsZUNvbG9yLFxuICAgICAgc2hvd0RlbGV0ZURhdGFzZXQsXG4gICAgICByZW1vdmVEYXRhc2V0LFxuICAgICAgc2hvd0RhdGFzZXRMaXN0LFxuICAgICAgc2hvd0FkZERhdGFNb2RhbFxuICAgIH0gPSBwcm9wcztcbiAgICBjb25zdCBkYXRhc2V0Q291bnQgPSBPYmplY3Qua2V5cyhkYXRhc2V0cykubGVuZ3RoO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxTdHlsZWREYXRhc2V0U2VjdGlvbj5cbiAgICAgICAgPFN0eWxlZERhdGFzZXRUaXRsZSBzaG93RGF0YXNldExpc3Q9e3Nob3dEYXRhc2V0TGlzdH0+XG4gICAgICAgICAgPHNwYW4+RGF0YXNldHN7ZGF0YXNldENvdW50ID8gYCgke2RhdGFzZXRDb3VudH0pYCA6ICcnfTwvc3Bhbj5cbiAgICAgICAgICA8QWRkRGF0YUJ1dHRvbiBvbkNsaWNrPXtzaG93QWRkRGF0YU1vZGFsfSBpc0luYWN0aXZlPXshZGF0YXNldENvdW50fSAvPlxuICAgICAgICA8L1N0eWxlZERhdGFzZXRUaXRsZT5cbiAgICAgICAge3Nob3dEYXRhc2V0TGlzdCAmJiAoXG4gICAgICAgICAgPFNvdXJjZURhdGFDYXRhbG9nXG4gICAgICAgICAgICBkYXRhc2V0cz17ZGF0YXNldHN9XG4gICAgICAgICAgICBzaG93RGF0YXNldFRhYmxlPXtzaG93RGF0YXNldFRhYmxlfVxuICAgICAgICAgICAgdXBkYXRlVGFibGVDb2xvcj17dXBkYXRlVGFibGVDb2xvcn1cbiAgICAgICAgICAgIHJlbW92ZURhdGFzZXQ9e3JlbW92ZURhdGFzZXR9XG4gICAgICAgICAgICBzaG93RGVsZXRlRGF0YXNldD17c2hvd0RlbGV0ZURhdGFzZXR9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgIDwvU3R5bGVkRGF0YXNldFNlY3Rpb24+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gRGF0YXNldFNlY3Rpb247XG59XG5cbmV4cG9ydCBkZWZhdWx0IERhdGFzZXRTZWN0aW9uRmFjdG9yeTtcbiJdfQ==