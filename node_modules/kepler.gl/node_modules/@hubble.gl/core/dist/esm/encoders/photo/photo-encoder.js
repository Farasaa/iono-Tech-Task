import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import FrameEncoder from '../frame-encoder';
import { canvasToArrayBuffer } from '../utils';

var PhotoEncoder = function (_FrameEncoder) {
  _inherits(PhotoEncoder, _FrameEncoder);

  var _super = _createSuper(PhotoEncoder);

  function PhotoEncoder(settings) {
    var _this;

    _classCallCheck(this, PhotoEncoder);

    _this = _super.call(this, settings);

    _defineProperty(_assertThisInitialized(_this), "blob", void 0);

    _this.blob = null;
    _this.add = _this.add.bind(_assertThisInitialized(_this));
    return _this;
  }

  _createClass(PhotoEncoder, [{
    key: "add",
    value: function () {
      var _add = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(canvas) {
        var buffer;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return canvasToArrayBuffer(canvas, this.mimeType, this.quality);

              case 2:
                buffer = _context.sent;
                this.blob = new Blob([buffer], {
                  type: this.mimeType
                });
                return _context.abrupt("return", Promise.resolve());

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function add(_x) {
        return _add.apply(this, arguments);
      }

      return add;
    }()
  }, {
    key: "save",
    value: function () {
      var _save = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2() {
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", Promise.resolve(this.blob));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function save() {
        return _save.apply(this, arguments);
      }

      return save;
    }()
  }]);

  return PhotoEncoder;
}(FrameEncoder);

export default PhotoEncoder;
//# sourceMappingURL=photo-encoder.js.map