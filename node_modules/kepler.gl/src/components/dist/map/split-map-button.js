"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _styledComponents = require("../common/styled-components");

var _icons = require("../common/icons");

var _mapControlTooltip = _interopRequireDefault(require("./map-control-tooltip"));

// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
SplitMapButtonFactory.deps = [_mapControlTooltip["default"]];

function SplitMapButtonFactory(MapControlTooltip) {
  var defaultActionIcons = {
    "delete": _icons.Delete,
    split: _icons.Split
  };
  /** @type {import('./split-map-button').SplitMapButtonComponent} */

  var SplitMapButton = function SplitMapButton(_ref) {
    var isSplit = _ref.isSplit,
        mapIndex = _ref.mapIndex,
        onToggleSplitMap = _ref.onToggleSplitMap,
        _ref$actionIcons = _ref.actionIcons,
        actionIcons = _ref$actionIcons === void 0 ? defaultActionIcons : _ref$actionIcons,
        mapControls = _ref.mapControls,
        readOnly = _ref.readOnly;
    var splitMap = (mapControls === null || mapControls === void 0 ? void 0 : mapControls.splitMap) || {};
    var onClick = (0, _react.useCallback)(function (event) {
      event.preventDefault();
      onToggleSplitMap(isSplit ? mapIndex : undefined);
    }, [isSplit, mapIndex, onToggleSplitMap]);
    var isVisible = (0, _react.useMemo)(function () {
      return splitMap.show && readOnly !== true;
    }, [splitMap.show, readOnly]);

    if (!splitMap.show) {
      return null;
    }

    return isVisible ? /*#__PURE__*/_react["default"].createElement(MapControlTooltip, {
      id: "action-toggle",
      message: isSplit ? 'tooltip.closePanel' : 'tooltip.switchToDualView'
    }, /*#__PURE__*/_react["default"].createElement(_styledComponents.MapControlButton, {
      active: isSplit,
      onClick: onClick,
      className: (0, _classnames["default"])('map-control-button', 'split-map', {
        'close-map': isSplit
      })
    }, isSplit ? /*#__PURE__*/_react["default"].createElement(actionIcons["delete"], {
      height: "18px"
    }) : /*#__PURE__*/_react["default"].createElement(actionIcons.split, {
      height: "18px"
    }))) : null;
  };

  SplitMapButton.displayName = 'SplitMapButton';
  return /*#__PURE__*/_react["default"].memo(SplitMapButton);
}

var _default = SplitMapButtonFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYXAvc3BsaXQtbWFwLWJ1dHRvbi50c3giXSwibmFtZXMiOlsiU3BsaXRNYXBCdXR0b25GYWN0b3J5IiwiZGVwcyIsIk1hcENvbnRyb2xUb29sdGlwRmFjdG9yeSIsIk1hcENvbnRyb2xUb29sdGlwIiwiZGVmYXVsdEFjdGlvbkljb25zIiwiRGVsZXRlIiwic3BsaXQiLCJTcGxpdCIsIlNwbGl0TWFwQnV0dG9uIiwiaXNTcGxpdCIsIm1hcEluZGV4Iiwib25Ub2dnbGVTcGxpdE1hcCIsImFjdGlvbkljb25zIiwibWFwQ29udHJvbHMiLCJyZWFkT25seSIsInNwbGl0TWFwIiwib25DbGljayIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJ1bmRlZmluZWQiLCJpc1Zpc2libGUiLCJzaG93IiwiZGlzcGxheU5hbWUiLCJSZWFjdCIsIm1lbW8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBUEE7QUFDQTtBQVNBQSxxQkFBcUIsQ0FBQ0MsSUFBdEIsR0FBNkIsQ0FBQ0MsNkJBQUQsQ0FBN0I7O0FBZ0JBLFNBQVNGLHFCQUFULENBQStCRyxpQkFBL0IsRUFBa0Q7QUFDaEQsTUFBTUMsa0JBQWtCLEdBQUc7QUFDekIsY0FBUUMsYUFEaUI7QUFFekJDLElBQUFBLEtBQUssRUFBRUM7QUFGa0IsR0FBM0I7QUFLQTs7QUFDQSxNQUFNQyxjQUE2QyxHQUFHLFNBQWhEQSxjQUFnRCxPQU9oRDtBQUFBLFFBTkpDLE9BTUksUUFOSkEsT0FNSTtBQUFBLFFBTEpDLFFBS0ksUUFMSkEsUUFLSTtBQUFBLFFBSkpDLGdCQUlJLFFBSkpBLGdCQUlJO0FBQUEsZ0NBSEpDLFdBR0k7QUFBQSxRQUhKQSxXQUdJLGlDQUhVUixrQkFHVjtBQUFBLFFBRkpTLFdBRUksUUFGSkEsV0FFSTtBQUFBLFFBREpDLFFBQ0ksUUFESkEsUUFDSTtBQUNKLFFBQU1DLFFBQVEsR0FBRyxDQUFBRixXQUFXLFNBQVgsSUFBQUEsV0FBVyxXQUFYLFlBQUFBLFdBQVcsQ0FBRUUsUUFBYixLQUEwQixFQUEzQztBQUNBLFFBQU1DLE9BQU8sR0FBRyx3QkFDZCxVQUFBQyxLQUFLLEVBQUk7QUFDUEEsTUFBQUEsS0FBSyxDQUFDQyxjQUFOO0FBQ0FQLE1BQUFBLGdCQUFnQixDQUFDRixPQUFPLEdBQUdDLFFBQUgsR0FBY1MsU0FBdEIsQ0FBaEI7QUFDRCxLQUphLEVBS2QsQ0FBQ1YsT0FBRCxFQUFVQyxRQUFWLEVBQW9CQyxnQkFBcEIsQ0FMYyxDQUFoQjtBQVFBLFFBQU1TLFNBQVMsR0FBRyxvQkFBUTtBQUFBLGFBQU1MLFFBQVEsQ0FBQ00sSUFBVCxJQUFpQlAsUUFBUSxLQUFLLElBQXBDO0FBQUEsS0FBUixFQUFrRCxDQUFDQyxRQUFRLENBQUNNLElBQVYsRUFBZ0JQLFFBQWhCLENBQWxELENBQWxCOztBQUVBLFFBQUksQ0FBQ0MsUUFBUSxDQUFDTSxJQUFkLEVBQW9CO0FBQ2xCLGFBQU8sSUFBUDtBQUNEOztBQUNELFdBQU9ELFNBQVMsZ0JBQ2QsZ0NBQUMsaUJBQUQ7QUFDRSxNQUFBLEVBQUUsRUFBQyxlQURMO0FBRUUsTUFBQSxPQUFPLEVBQUVYLE9BQU8sR0FBRyxvQkFBSCxHQUEwQjtBQUY1QyxvQkFJRSxnQ0FBQyxrQ0FBRDtBQUNFLE1BQUEsTUFBTSxFQUFFQSxPQURWO0FBRUUsTUFBQSxPQUFPLEVBQUVPLE9BRlg7QUFHRSxNQUFBLFNBQVMsRUFBRSw0QkFBVyxvQkFBWCxFQUFpQyxXQUFqQyxFQUE4QztBQUFDLHFCQUFhUDtBQUFkLE9BQTlDO0FBSGIsT0FLR0EsT0FBTyxnQkFBRyxnQ0FBQyxXQUFEO0FBQW9CLE1BQUEsTUFBTSxFQUFDO0FBQTNCLE1BQUgsZ0JBQTBDLGdDQUFDLFdBQUQsQ0FBYSxLQUFiO0FBQW1CLE1BQUEsTUFBTSxFQUFDO0FBQTFCLE1BTHBELENBSkYsQ0FEYyxHQWFaLElBYko7QUFjRCxHQXBDRDs7QUFzQ0FELEVBQUFBLGNBQWMsQ0FBQ2MsV0FBZixHQUE2QixnQkFBN0I7QUFDQSxzQkFBT0Msa0JBQU1DLElBQU4sQ0FBV2hCLGNBQVgsQ0FBUDtBQUNEOztlQUVjUixxQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudFR5cGUsIHVzZUNhbGxiYWNrLCB1c2VNZW1vfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7TWFwQ29udHJvbEJ1dHRvbn0gZnJvbSAnLi4vY29tbW9uL3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7RGVsZXRlLCBTcGxpdH0gZnJvbSAnLi4vY29tbW9uL2ljb25zJztcbmltcG9ydCBNYXBDb250cm9sVG9vbHRpcEZhY3RvcnkgZnJvbSAnLi9tYXAtY29udHJvbC10b29sdGlwJztcbmltcG9ydCB7TWFwQ29udHJvbEl0ZW0sIE1hcENvbnRyb2xzfSBmcm9tICdAa2VwbGVyLmdsL3R5cGVzJztcblxuU3BsaXRNYXBCdXR0b25GYWN0b3J5LmRlcHMgPSBbTWFwQ29udHJvbFRvb2x0aXBGYWN0b3J5XTtcblxuaW50ZXJmYWNlIFNwbGl0TWFwQnV0dG9uSWNvbnMge1xuICBkZWxldGU6IENvbXBvbmVudFR5cGU8YW55PjtcbiAgc3BsaXQ6IENvbXBvbmVudFR5cGU8YW55Pjtcbn1cblxuZXhwb3J0IHR5cGUgU3BsaXRNYXBCdXR0b25Qcm9wcyA9IHtcbiAgaXNTcGxpdDogYm9vbGVhbjtcbiAgbWFwSW5kZXg6IG51bWJlcjtcbiAgb25Ub2dnbGVTcGxpdE1hcDogKGluZGV4PzogbnVtYmVyKSA9PiB2b2lkO1xuICBhY3Rpb25JY29uczogU3BsaXRNYXBCdXR0b25JY29ucztcbiAgcmVhZE9ubHk6IGJvb2xlYW47XG4gIG1hcENvbnRyb2xzOiBNYXBDb250cm9scztcbn07XG5cbmZ1bmN0aW9uIFNwbGl0TWFwQnV0dG9uRmFjdG9yeShNYXBDb250cm9sVG9vbHRpcCkge1xuICBjb25zdCBkZWZhdWx0QWN0aW9uSWNvbnMgPSB7XG4gICAgZGVsZXRlOiBEZWxldGUsXG4gICAgc3BsaXQ6IFNwbGl0XG4gIH07XG5cbiAgLyoqIEB0eXBlIHtpbXBvcnQoJy4vc3BsaXQtbWFwLWJ1dHRvbicpLlNwbGl0TWFwQnV0dG9uQ29tcG9uZW50fSAqL1xuICBjb25zdCBTcGxpdE1hcEJ1dHRvbjogUmVhY3QuRkM8U3BsaXRNYXBCdXR0b25Qcm9wcz4gPSAoe1xuICAgIGlzU3BsaXQsXG4gICAgbWFwSW5kZXgsXG4gICAgb25Ub2dnbGVTcGxpdE1hcCxcbiAgICBhY3Rpb25JY29ucyA9IGRlZmF1bHRBY3Rpb25JY29ucyxcbiAgICBtYXBDb250cm9scyxcbiAgICByZWFkT25seVxuICB9KSA9PiB7XG4gICAgY29uc3Qgc3BsaXRNYXAgPSBtYXBDb250cm9scz8uc3BsaXRNYXAgfHwgKHt9IGFzIE1hcENvbnRyb2xJdGVtKTtcbiAgICBjb25zdCBvbkNsaWNrID0gdXNlQ2FsbGJhY2soXG4gICAgICBldmVudCA9PiB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIG9uVG9nZ2xlU3BsaXRNYXAoaXNTcGxpdCA/IG1hcEluZGV4IDogdW5kZWZpbmVkKTtcbiAgICAgIH0sXG4gICAgICBbaXNTcGxpdCwgbWFwSW5kZXgsIG9uVG9nZ2xlU3BsaXRNYXBdXG4gICAgKTtcblxuICAgIGNvbnN0IGlzVmlzaWJsZSA9IHVzZU1lbW8oKCkgPT4gc3BsaXRNYXAuc2hvdyAmJiByZWFkT25seSAhPT0gdHJ1ZSwgW3NwbGl0TWFwLnNob3csIHJlYWRPbmx5XSk7XG5cbiAgICBpZiAoIXNwbGl0TWFwLnNob3cpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gaXNWaXNpYmxlID8gKFxuICAgICAgPE1hcENvbnRyb2xUb29sdGlwXG4gICAgICAgIGlkPVwiYWN0aW9uLXRvZ2dsZVwiXG4gICAgICAgIG1lc3NhZ2U9e2lzU3BsaXQgPyAndG9vbHRpcC5jbG9zZVBhbmVsJyA6ICd0b29sdGlwLnN3aXRjaFRvRHVhbFZpZXcnfVxuICAgICAgPlxuICAgICAgICA8TWFwQ29udHJvbEJ1dHRvblxuICAgICAgICAgIGFjdGl2ZT17aXNTcGxpdH1cbiAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NuYW1lcygnbWFwLWNvbnRyb2wtYnV0dG9uJywgJ3NwbGl0LW1hcCcsIHsnY2xvc2UtbWFwJzogaXNTcGxpdH0pfVxuICAgICAgICA+XG4gICAgICAgICAge2lzU3BsaXQgPyA8YWN0aW9uSWNvbnMuZGVsZXRlIGhlaWdodD1cIjE4cHhcIiAvPiA6IDxhY3Rpb25JY29ucy5zcGxpdCBoZWlnaHQ9XCIxOHB4XCIgLz59XG4gICAgICAgIDwvTWFwQ29udHJvbEJ1dHRvbj5cbiAgICAgIDwvTWFwQ29udHJvbFRvb2x0aXA+XG4gICAgKSA6IG51bGw7XG4gIH07XG5cbiAgU3BsaXRNYXBCdXR0b24uZGlzcGxheU5hbWUgPSAnU3BsaXRNYXBCdXR0b24nO1xuICByZXR1cm4gUmVhY3QubWVtbyhTcGxpdE1hcEJ1dHRvbik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNwbGl0TWFwQnV0dG9uRmFjdG9yeTtcbiJdfQ==