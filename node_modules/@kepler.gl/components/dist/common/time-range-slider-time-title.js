"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _icons = require("./icons");

var _utils = require("@kepler.gl/utils");

var _templateObject;

var TimeValueWrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  align-items: center;\n  font-size: ", ";\n  justify-content: ", ";\n\n  .horizontal-bar {\n    padding: 0 12px;\n    color: ", ";\n  }\n\n  .time-value {\n    display: flex;\n    flex-direction: ", ";\n    align-items: flex-start;\n    max-width: ", ";\n    span {\n      color: ", ";\n    }\n  }\n\n  .time-value:last-child {\n    align-items: flex-end;\n    text-align: right;\n  }\n"])), function (props) {
  return props.theme.timeTitleFontSize;
}, function (props) {
  return props.isEnlarged ? 'center' : 'space-between';
}, function (props) {
  return props.theme.textColor;
}, function (props) {
  return props.isEnlarged ? 'row' : 'column';
}, function (props) {
  return !props.isEnlarged ? '40%' : 'auto';
}, function (props) {
  return props.theme.textColor;
});

var TimeValue = function TimeValue(_ref) {
  var value = _ref.value;
  return (
    /*#__PURE__*/
    // render two lines if not enlarged
    _react["default"].createElement("div", {
      className: "time-value"
    }, /*#__PURE__*/_react["default"].createElement("span", null, value))
  );
};

function TimeRangeSliderTimeTitleFactory() {
  var TimeTitle = function TimeTitle(_ref2) {
    var value = _ref2.value,
        isEnlarged = _ref2.isEnlarged,
        timezone = _ref2.timezone,
        timeFormat = _ref2.timeFormat;
    return /*#__PURE__*/_react["default"].createElement(TimeValueWrapper, {
      isEnlarged: isEnlarged,
      className: "time-range-slider__time-title"
    }, /*#__PURE__*/_react["default"].createElement(TimeValue, {
      key: 0,
      value: (0, _utils.datetimeFormatter)(timezone)(timeFormat)(value[0])
    }), isEnlarged ? /*#__PURE__*/_react["default"].createElement("div", {
      className: "horizontal-bar"
    }, /*#__PURE__*/_react["default"].createElement(_icons.Minus, {
      height: "12px"
    })) : null, /*#__PURE__*/_react["default"].createElement(TimeValue, {
      key: 1,
      value: (0, _utils.datetimeFormatter)(timezone)(timeFormat)(value[1])
    }));
  };

  return TimeTitle;
}

var _default = TimeRangeSliderTimeTitleFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vdGltZS1yYW5nZS1zbGlkZXItdGltZS10aXRsZS50c3giXSwibmFtZXMiOlsiVGltZVZhbHVlV3JhcHBlciIsInN0eWxlZCIsImRpdiIsInByb3BzIiwidGhlbWUiLCJ0aW1lVGl0bGVGb250U2l6ZSIsImlzRW5sYXJnZWQiLCJ0ZXh0Q29sb3IiLCJUaW1lVmFsdWUiLCJ2YWx1ZSIsIlRpbWVSYW5nZVNsaWRlclRpbWVUaXRsZUZhY3RvcnkiLCJUaW1lVGl0bGUiLCJ0aW1lem9uZSIsInRpbWVGb3JtYXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFNQSxJQUFNQSxnQkFBZ0IsR0FBR0MsNkJBQU9DLEdBQVYsOGVBR1AsVUFBQUMsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZQyxpQkFBaEI7QUFBQSxDQUhFLEVBSUQsVUFBQUYsS0FBSztBQUFBLFNBQUtBLEtBQUssQ0FBQ0csVUFBTixHQUFtQixRQUFuQixHQUE4QixlQUFuQztBQUFBLENBSkosRUFRVCxVQUFBSCxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlHLFNBQWhCO0FBQUEsQ0FSSSxFQWFBLFVBQUFKLEtBQUs7QUFBQSxTQUFLQSxLQUFLLENBQUNHLFVBQU4sR0FBbUIsS0FBbkIsR0FBMkIsUUFBaEM7QUFBQSxDQWJMLEVBZUwsVUFBQUgsS0FBSztBQUFBLFNBQUssQ0FBQ0EsS0FBSyxDQUFDRyxVQUFQLEdBQW9CLEtBQXBCLEdBQTRCLE1BQWpDO0FBQUEsQ0FmQSxFQWlCUCxVQUFBSCxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlHLFNBQWhCO0FBQUEsQ0FqQkUsQ0FBdEI7O0FBMkJBLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZO0FBQUEsTUFBRUMsS0FBRixRQUFFQSxLQUFGO0FBQUE7QUFBQTtBQUNoQjtBQUNBO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixvQkFDRSw4Q0FBT0EsS0FBUCxDQURGO0FBRmdCO0FBQUEsQ0FBbEI7O0FBY0EsU0FBU0MsK0JBQVQsR0FBMkM7QUFDekMsTUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVk7QUFBQSxRQUFFRixLQUFGLFNBQUVBLEtBQUY7QUFBQSxRQUFTSCxVQUFULFNBQVNBLFVBQVQ7QUFBQSxRQUFxQk0sUUFBckIsU0FBcUJBLFFBQXJCO0FBQUEsUUFBK0JDLFVBQS9CLFNBQStCQSxVQUEvQjtBQUFBLHdCQUNoQixnQ0FBQyxnQkFBRDtBQUFrQixNQUFBLFVBQVUsRUFBRVAsVUFBOUI7QUFBMEMsTUFBQSxTQUFTLEVBQUM7QUFBcEQsb0JBQ0UsZ0NBQUMsU0FBRDtBQUFXLE1BQUEsR0FBRyxFQUFFLENBQWhCO0FBQW1CLE1BQUEsS0FBSyxFQUFFLDhCQUFrQk0sUUFBbEIsRUFBNEJDLFVBQTVCLEVBQXdDSixLQUFLLENBQUMsQ0FBRCxDQUE3QztBQUExQixNQURGLEVBRUdILFVBQVUsZ0JBQ1Q7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLG9CQUNFLGdDQUFDLFlBQUQ7QUFBTyxNQUFBLE1BQU0sRUFBQztBQUFkLE1BREYsQ0FEUyxHQUlQLElBTk4sZUFPRSxnQ0FBQyxTQUFEO0FBQVcsTUFBQSxHQUFHLEVBQUUsQ0FBaEI7QUFBbUIsTUFBQSxLQUFLLEVBQUUsOEJBQWtCTSxRQUFsQixFQUE0QkMsVUFBNUIsRUFBd0NKLEtBQUssQ0FBQyxDQUFELENBQTdDO0FBQTFCLE1BUEYsQ0FEZ0I7QUFBQSxHQUFsQjs7QUFZQSxTQUFPRSxTQUFQO0FBQ0Q7O2VBRWNELCtCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtNaW51c30gZnJvbSAnLi9pY29ucyc7XG5pbXBvcnQge2RhdGV0aW1lRm9ybWF0dGVyfSBmcm9tICdAa2VwbGVyLmdsL3V0aWxzJztcblxuaW50ZXJmYWNlIFRpbWVWYWx1ZVdyYXBwZXJQcm9wcyB7XG4gIGlzRW5sYXJnZWQ/OiBib29sZWFuO1xufVxuXG5jb25zdCBUaW1lVmFsdWVXcmFwcGVyID0gc3R5bGVkLmRpdjxUaW1lVmFsdWVXcmFwcGVyUHJvcHM+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LXNpemU6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUudGltZVRpdGxlRm9udFNpemV9O1xuICBqdXN0aWZ5LWNvbnRlbnQ6ICR7cHJvcHMgPT4gKHByb3BzLmlzRW5sYXJnZWQgPyAnY2VudGVyJyA6ICdzcGFjZS1iZXR3ZWVuJyl9O1xuXG4gIC5ob3Jpem9udGFsLWJhciB7XG4gICAgcGFkZGluZzogMCAxMnB4O1xuICAgIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnRleHRDb2xvcn07XG4gIH1cblxuICAudGltZS12YWx1ZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogJHtwcm9wcyA9PiAocHJvcHMuaXNFbmxhcmdlZCA/ICdyb3cnIDogJ2NvbHVtbicpfTtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICBtYXgtd2lkdGg6ICR7cHJvcHMgPT4gKCFwcm9wcy5pc0VubGFyZ2VkID8gJzQwJScgOiAnYXV0bycpfTtcbiAgICBzcGFuIHtcbiAgICAgIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnRleHRDb2xvcn07XG4gICAgfVxuICB9XG5cbiAgLnRpbWUtdmFsdWU6bGFzdC1jaGlsZCB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICB9XG5gO1xuXG5jb25zdCBUaW1lVmFsdWUgPSAoe3ZhbHVlfSkgPT4gKFxuICAvLyByZW5kZXIgdHdvIGxpbmVzIGlmIG5vdCBlbmxhcmdlZFxuICA8ZGl2IGNsYXNzTmFtZT1cInRpbWUtdmFsdWVcIj5cbiAgICA8c3Bhbj57dmFsdWV9PC9zcGFuPlxuICA8L2Rpdj5cbik7XG5cbmludGVyZmFjZSBUaW1lVGl0bGVQcm9wcyB7XG4gIHZhbHVlOiBudW1iZXJbXTtcbiAgaXNFbmxhcmdlZD86IGJvb2xlYW47XG4gIHRpbWV6b25lPzogc3RyaW5nIHwgbnVsbDtcbiAgdGltZUZvcm1hdDogc3RyaW5nO1xufVxuXG5mdW5jdGlvbiBUaW1lUmFuZ2VTbGlkZXJUaW1lVGl0bGVGYWN0b3J5KCkge1xuICBjb25zdCBUaW1lVGl0bGUgPSAoe3ZhbHVlLCBpc0VubGFyZ2VkLCB0aW1lem9uZSwgdGltZUZvcm1hdH06IFRpbWVUaXRsZVByb3BzKSA9PiAoXG4gICAgPFRpbWVWYWx1ZVdyYXBwZXIgaXNFbmxhcmdlZD17aXNFbmxhcmdlZH0gY2xhc3NOYW1lPVwidGltZS1yYW5nZS1zbGlkZXJfX3RpbWUtdGl0bGVcIj5cbiAgICAgIDxUaW1lVmFsdWUga2V5PXswfSB2YWx1ZT17ZGF0ZXRpbWVGb3JtYXR0ZXIodGltZXpvbmUpKHRpbWVGb3JtYXQpKHZhbHVlWzBdKX0gLz5cbiAgICAgIHtpc0VubGFyZ2VkID8gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhvcml6b250YWwtYmFyXCI+XG4gICAgICAgICAgPE1pbnVzIGhlaWdodD1cIjEycHhcIiAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICkgOiBudWxsfVxuICAgICAgPFRpbWVWYWx1ZSBrZXk9ezF9IHZhbHVlPXtkYXRldGltZUZvcm1hdHRlcih0aW1lem9uZSkodGltZUZvcm1hdCkodmFsdWVbMV0pfSAvPlxuICAgIDwvVGltZVZhbHVlV3JhcHBlcj5cbiAgKTtcblxuICByZXR1cm4gVGltZVRpdGxlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUaW1lUmFuZ2VTbGlkZXJUaW1lVGl0bGVGYWN0b3J5O1xuIl19