{"version":3,"file":"video-capture.js","names":["VideoCapture","recording","capturing","timeMs","timecode","encoder","filename","_getNextTimeMs","bind","_step","_capture","capture","render","download","stop","_save","Encoder","formatConfigs","undefined","onStop","isRecording","console","time","_sanitizeFilename","_sanatizeTimecode","log","duration","framerate","start","canvas","proceedToNextFrame","then","data","kind","nextTimeMs","onComplete","onSave","onStopped","abort","timeEnd","finish","blob","extension","mimeType","callback","save","guid","parsedTimecode","end","Error","error","add","catch","reason","frameLengthMs","Math","floor"],"sources":["../../../src/capture/video-capture.js"],"sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable no-console */\nimport download from 'downloadjs';\n// eslint-disable-next-line no-unused-vars\nimport {FrameEncoder} from '../encoders';\nimport {guid} from './utils';\n\nexport class VideoCapture {\n  /** @type {boolean} - True if recording new canvas frames, false when saving, idle, etc. */\n  recording;\n  /** @type {boolean} - True when working on a image frame capture. */\n  capturing;\n  /** @type {number} */\n  timeMs;\n  /** @type {{start: number, end: number, duration: number, framerate: number}} */\n  timecode;\n  /** @type {FrameEncoder} */\n  encoder;\n  /** @type {string} */\n  filename;\n\n  constructor() {\n    this.recording = false;\n    this.capturing = false;\n    this.timeMs = 0;\n    this.timecode = null;\n    this.encoder = null;\n    this.filename = null;\n\n    this._getNextTimeMs = this._getNextTimeMs.bind(this);\n    this._step = this._step.bind(this);\n    this._capture = this._capture.bind(this);\n    this.capture = this.capture.bind(this);\n    this.render = this.render.bind(this);\n    this.download = this.download.bind(this);\n    this.stop = this.stop.bind(this);\n    this._save = this._save.bind(this);\n  }\n\n  isRecording() {\n    return this.recording;\n  }\n\n  /**\n   * Start recording.\n   * @param {Object} params\n   * @param {typeof FrameEncoder} params.Encoder\n   * @param {import('types').FormatConfigs} params.formatConfigs\n   * @param {{start: number, end: number, framerate: number, duration?: number}} params.timecode\n   * @param {() => void} params.onStop\n   */\n  render({Encoder, formatConfigs, timecode, filename = undefined, onStop = undefined}) {\n    if (!this.isRecording()) {\n      console.time('render');\n      this.filename = this._sanitizeFilename(filename);\n      this.timecode = this._sanatizeTimecode(timecode);\n      console.log(`Starting recording for ${this.timecode.duration}ms.`);\n      this.onStop = onStop;\n      this.encoder = new Encoder({...formatConfigs, framerate: this.timecode.framerate});\n      this.recording = true;\n      this.encoder.start();\n    }\n  }\n\n  /**\n   * Capture a frame of the canvas.\n   * @param {(nextTimeMs: number) => void} proceedToNextFrame\n   */\n  capture(canvas, proceedToNextFrame) {\n    if (!this.capturing && this.isRecording()) {\n      this.capturing = true;\n      // capture canvas\n      this._capture(canvas).then(data => {\n        this.capturing = false;\n        if (data.kind === 'next-frame') {\n          proceedToNextFrame(data.nextTimeMs);\n        } else if (data.kind === 'stop') {\n          this.onStop();\n        } else {\n          console.log(data);\n        }\n      });\n    }\n  }\n\n  /**\n   * Stop and save recording. Execute onComplete when finished.\n   * @param {Object} params\n   * @param {() => void} params.onStopped\n   * @param {(blob: Blob) => void} params.onSave\n   * @param {() => void} params.onComplete\n   * @param {boolean} [params.abort]\n   */\n  stop({onComplete = undefined, onSave = undefined, onStopped = undefined, abort = false}) {\n    if (this.isRecording()) {\n      console.log(`Stopped recording. Recorded for ${this.timeMs}ms.`);\n      this.recording = false;\n      this.capturing = false;\n      if (onStopped) {\n        onStopped();\n      }\n      console.timeEnd('render');\n      const finish = () => {\n        if (onComplete) {\n          // eslint-disable-next-line callback-return\n          onComplete();\n        }\n        this.timecode = null;\n        this.onStop = undefined;\n      };\n      if (!abort) {\n        this._save(onSave).then(finish);\n      }\n      finish();\n    }\n  }\n\n  /**\n   * @param {Blob} blob\n   */\n\n  download(blob) {\n    if (blob) {\n      download(blob, this.filename + this.encoder.extension, this.encoder.mimeType);\n    }\n    return false;\n  }\n\n  /**\n   * @param { (blob: Blob) => void } callback\n   */\n  async _save(callback) {\n    if (!callback) {\n      callback = this.download;\n    }\n    console.time('save');\n    await this.encoder\n      .save()\n      .then(callback)\n      .then(() => console.timeEnd('save'));\n  }\n\n  /**\n   * @param {string} filename\n   */\n  _sanitizeFilename(filename) {\n    if (!filename) {\n      filename = guid();\n    }\n    return filename;\n  }\n\n  /**\n   * @param {{start: number, end: number, framerate: number, duration?: number}} timecode\n   */\n  _sanatizeTimecode(timecode) {\n    const parsedTimecode = {\n      duration: undefined,\n      ...timecode\n    };\n\n    if (!parsedTimecode.start) {\n      parsedTimecode.start = 0;\n    }\n    this.timeMs = parsedTimecode.start;\n\n    if (!parsedTimecode.duration) {\n      parsedTimecode.duration = parsedTimecode.end - parsedTimecode.start;\n    }\n\n    if (parsedTimecode.duration <= 0) {\n      throw new Error(\n        `Invalid recording length (${parsedTimecode.duration}ms).  Must be greater than 0.`\n      );\n    }\n    return parsedTimecode;\n  }\n\n  /**\n   * Capture the current canvas.\n   * @param {HTMLCanvasElement} canvas\n   * @returns {Promise<import('types').CaptureStep>}\n   */\n  async _capture(canvas) {\n    // console.log('video-capture');\n    if (!this.isRecording()) {\n      return {kind: 'error', error: 'NOT_RECORDING'};\n    }\n    // getting blob from canvas\n    return await this.encoder\n      .add(canvas)\n      .then(this._step)\n      .catch(reason => ({kind: 'error', error: reason}));\n  }\n\n  /**\n   * @returns {import('types').CaptureStep}\n   */\n  _step() {\n    // generating next frame timestamp\n    const nextTimeMs = this._getNextTimeMs();\n    if (nextTimeMs > this.timecode.end) {\n      return {kind: 'stop'};\n    }\n    this.timeMs = nextTimeMs;\n    return {kind: 'next-frame', nextTimeMs};\n  }\n\n  // Get next time MS based on current time MS and framerate\n  // @return time in milliseconds for next frame.\n  _getNextTimeMs() {\n    const frameLengthMs = Math.floor(1000.0 / this.timecode.framerate);\n    return this.timeMs + frameLengthMs;\n  }\n}\n"],"mappings":"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"}