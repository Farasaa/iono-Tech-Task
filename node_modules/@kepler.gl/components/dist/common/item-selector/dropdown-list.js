"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ListItem = exports.classList = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _constants = require("@kepler.gl/constants");

var _templateObject, _templateObject2;

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var LEFT_BUTTON = 0;
var classList = {
  list: 'list-selector',
  listHeader: 'list__header',
  listSection: 'list__section',
  listItem: 'list__item',
  listItemAnchor: 'list__item__anchor',
  listItemFixed: 'list__item__fixed'
};
exports.classList = classList;

var defaultDisplay = function defaultDisplay(d) {
  return d;
};

var ListItem = function ListItem(_ref) {
  var value = _ref.value,
      _ref$displayOption = _ref.displayOption,
      displayOption = _ref$displayOption === void 0 ? defaultDisplay : _ref$displayOption,
      disabled = _ref.disabled,
      light = _ref.light;
  var displayValue = displayOption(value);
  return /*#__PURE__*/_react["default"].createElement("span", {
    title: displayValue,
    className: (0, _classnames["default"])(classList.listItemAnchor, {
      disabled: disabled
    })
  }, displayValue);
};

exports.ListItem = ListItem;

var DropdownListWrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  background-color: ", ";\n  border-top: 1px solid\n    ", ";\n  ", ";\n"])), function (props) {
  return props.light ? props.theme.dropdownListBgdLT : props.theme.dropdownListBgd;
}, function (props) {
  return props.light ? props.theme.dropdownListBorderTopLT : props.theme.dropdownListBorderTop;
}, function (props) {
  return props.light ? props.theme.dropdownListLT : props.theme.dropdownList;
});

var DropdownFooterWrapper = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  height: '0px';\n"])));

var DropdownList = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(DropdownList, _Component);

  var _super = _createSuper(DropdownList);

  function DropdownList(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, DropdownList);
    _this = _super.call(this, props);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "initNumberOfOptions", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "page", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "prevY", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "loadingRef", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "observer", void 0);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleObserver", function (entities) {
      var y = entities[0].boundingClientRect.y;

      if (_this.prevY > y) {
        var options = _this._getOptions(_this.page);

        if (options) _this.setState({
          options: options
        });
      }

      _this.prevY = y;
    });
    _this.state = {
      options: []
    };
    _this.initNumberOfOptions = _constants.INIT_FILTER_ITEMS_IN_DROPDOWN;
    _this.page = 0;
    _this.prevY = 0;
    _this.loadingRef = /*#__PURE__*/_react["default"].createRef();
    return _this;
  }

  (0, _createClass2["default"])(DropdownList, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var options = this._getOptions(this.page);

      this.setState({
        options: options
      });
      var divOptions = {
        root: null,
        rootMargin: '0%',
        threshold: 1.0
      };

      if (this.loadingRef.current) {
        this.observer = new IntersectionObserver(this.handleObserver, divOptions);
        this.observer.observe(this.loadingRef.current);
      }
    }
  }, {
    key: "getSnapshotBeforeUpdate",
    value: function getSnapshotBeforeUpdate(prevProps, prevState) {
      if (prevProps.options !== this.props.options) {
        // check if user searching, reset state.options at the first time
        var options = this._getOptions(0);

        this.setState({
          options: options
        });
      }

      return null;
    } // prevent console warning: getSnapshotBeforeUpdate() should be used with componentDidUpdate().

  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState, snapshot) {}
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.loadingRef.current) {
        var _this$observer;

        (_this$observer = this.observer) === null || _this$observer === void 0 ? void 0 : _this$observer.unobserve(this.loadingRef.current);
      }
    }
  }, {
    key: "_getOptions",
    value: function _getOptions(page) {
      if (!this.props.options) {
        return [];
      }

      var n = this.props.options.length;

      if (n === 0) {
        return [];
      }

      var start = page * this.initNumberOfOptions;
      var end = start + this.initNumberOfOptions > n ? n : start + this.initNumberOfOptions;

      if (start < end && end <= n) {
        this.page = page + 1; // in case of user searching, props.options will be updated
        // so "page" value will be set to 0 and previous state.options will be discarded

        return [].concat((0, _toConsumableArray2["default"])(page > 0 ? this.state.options || [] : []), (0, _toConsumableArray2["default"])(this.props.options.slice(start, end)));
      }

      return null;
    }
  }, {
    key: "_onClick",
    value: function _onClick(result, event) {
      event.preventDefault(); // only work when left is clicked

      if (event.type === 'mousedown' && event.button === LEFT_BUTTON || event.type === 'click') {
        var _this$props$onOptionS, _this$props;

        (_this$props$onOptionS = (_this$props = this.props).onOptionSelected) === null || _this$props$onOptionS === void 0 ? void 0 : _this$props$onOptionS.call(_this$props, result, event);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props$options,
          _this$props$customCla,
          _this$props$customCla2,
          _this2 = this,
          _this$state$options;

      var _this$props2 = this.props,
          fixedOptions = _this$props2.fixedOptions,
          light = _this$props2.light,
          _this$props2$allowCus = _this$props2.allowCustomValues,
          allowCustomValues = _this$props2$allowCus === void 0 ? 0 : _this$props2$allowCus,
          _this$props2$customLi = _this$props2.customListItemComponent,
          CustomListItemComponent = _this$props2$customLi === void 0 ? ListItem : _this$props2$customLi;
      var _this$props$displayOp = this.props.displayOption,
          display = _this$props$displayOp === void 0 ? defaultDisplay : _this$props$displayOp; // Don't render if there are no options to display

      if (!((_this$props$options = this.props.options) !== null && _this$props$options !== void 0 && _this$props$options.length) && allowCustomValues <= 0) {
        return /*#__PURE__*/_react["default"].createElement("div", null);
      }

      var valueOffset = Array.isArray(fixedOptions) ? fixedOptions.length : 0; // For some reason onClick is not fired when clicked on an option
      // onMouseDown is used here as a workaround of #205 and other

      return /*#__PURE__*/_react["default"].createElement(DropdownListWrapper, {
        className: (0, _classnames["default"])(classList.list, (_this$props$customCla = this.props.customClasses) === null || _this$props$customCla === void 0 ? void 0 : _this$props$customCla.results),
        light: light
      }, this.props.customListHeaderComponent ? /*#__PURE__*/_react["default"].createElement("div", {
        className: (0, _classnames["default"])(classList.listHeader, (_this$props$customCla2 = this.props.customClasses) === null || _this$props$customCla2 === void 0 ? void 0 : _this$props$customCla2.listHeader)
      }, /*#__PURE__*/_react["default"].createElement(this.props.customListHeaderComponent, null)) : null, valueOffset > 0 ? /*#__PURE__*/_react["default"].createElement("div", {
        className: classList.listSection
      }, fixedOptions === null || fixedOptions === void 0 ? void 0 : fixedOptions.map(function (value, i) {
        var _this2$props$customCl;

        return /*#__PURE__*/_react["default"].createElement("div", {
          className: (0, _classnames["default"])(classList.listItem, (0, _defineProperty2["default"])({
            hover: _this2.props.selectionIndex === i
          }, classList.listItemFixed, true), (_this2$props$customCl = _this2.props.customClasses) === null || _this2$props$customCl === void 0 ? void 0 : _this2$props$customCl.listItem),
          key: "".concat(display(value), "_").concat(i),
          onMouseDown: function onMouseDown(e) {
            return _this2._onClick(value, e);
          },
          onClick: function onClick(e) {
            return _this2._onClick(value, e);
          }
        }, /*#__PURE__*/_react["default"].createElement(CustomListItemComponent, {
          value: value,
          displayOption: display
        }));
      })) : null, (_this$state$options = this.state.options) === null || _this$state$options === void 0 ? void 0 : _this$state$options.map(function (value, i) {
        var _this2$props$customCl2;

        return /*#__PURE__*/_react["default"].createElement("div", {
          className: (0, _classnames["default"])(classList.listItem, {
            hover: _this2.props.selectionIndex === i + valueOffset
          }, (_this2$props$customCl2 = _this2.props.customClasses) === null || _this2$props$customCl2 === void 0 ? void 0 : _this2$props$customCl2.listItem),
          key: "".concat(display(value), "_").concat(i),
          onMouseDown: function onMouseDown(e) {
            return _this2._onClick(value, e);
          },
          onClick: function onClick(e) {
            return _this2._onClick(value, e);
          }
        }, /*#__PURE__*/_react["default"].createElement(CustomListItemComponent, {
          value: value,
          displayOption: display
        }));
      }), /*#__PURE__*/_react["default"].createElement(DropdownFooterWrapper, {
        ref: this.loadingRef
      }));
    }
  }]);
  return DropdownList;
}(_react.Component);

exports["default"] = DropdownList;
(0, _defineProperty2["default"])(DropdownList, "defaultProps", {
  customClasses: {},
  customListItemComponent: ListItem,
  customListHeaderComponent: null,
  allowCustomValues: 0,
  customValues: [],
  displayOption: defaultDisplay,
  onOptionSelected: function onOptionSelected() {},
  defaultClassNames: true,
  selectionIndex: null
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,