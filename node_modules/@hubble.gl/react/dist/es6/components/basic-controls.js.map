{"version":3,"sources":["../../../src/components/basic-controls.js"],"names":["React","useState","WebMEncoder","JPEGSequenceEncoder","PNGSequenceEncoder","PreviewEncoder","GifEncoder","EncoderDropdown","BasicControls","adapter","busy","setBusy","encoderSettings","updateCamera","undefined","encoder","setEncoder","onRender","render","onStop","stop"],"mappings":"AAoBA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACEC,WADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,cAJF,EAKEC,UALF,QAMO,iBANP;AAOA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,eAAe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,OADoC;AAEpCC,EAAAA,IAFoC;AAGpCC,EAAAA,OAHoC;AAIpCC,EAAAA,eAJoC;AAKpCC,EAAAA,YAAY,GAAGC;AALqB,CAAvB,EAMZ;AACD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMgB,QAAQ,GAAG,MAAM;AACrB,QAAIF,OAAO,KAAK,SAAhB,EAA2B;AACzBN,MAAAA,OAAO,CAACS,MAAR,CAAeb,cAAf,EAA+BO,eAA/B,EAAgD,MAAMD,OAAO,CAAC,KAAD,CAA7D,EAAsEE,YAAtE;AACD,KAFD,MAEO,IAAIE,OAAO,KAAK,MAAhB,EAAwB;AAC7BN,MAAAA,OAAO,CAACS,MAAR,CAAehB,WAAf,EAA4BU,eAA5B,EAA6C,MAAMD,OAAO,CAAC,KAAD,CAA1D,EAAmEE,YAAnE;AACD,KAFM,MAEA,IAAIE,OAAO,KAAK,MAAhB,EAAwB;AAC7BN,MAAAA,OAAO,CAACS,MAAR,CAAef,mBAAf,EAAoCS,eAApC,EAAqD,MAAMD,OAAO,CAAC,KAAD,CAAlE,EAA2EE,YAA3E;AACD,KAFM,MAEA,IAAIE,OAAO,KAAK,KAAhB,EAAuB;AAC5BN,MAAAA,OAAO,CAACS,MAAR,CAAed,kBAAf,EAAmCQ,eAAnC,EAAoD,MAAMD,OAAO,CAAC,KAAD,CAAjE,EAA0EE,YAA1E;AACD,KAFM,MAEA,IAAIE,OAAO,KAAK,KAAhB,EAAuB;AAC5BN,MAAAA,OAAO,CAACS,MAAR,CAAeZ,UAAf,EAA2BM,eAA3B,EAA4C,MAAMD,OAAO,CAAC,KAAD,CAAzD,EAAkEE,YAAlE;AACD;;AAEDF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAdD;;AAgBA,QAAMQ,MAAM,GAAG,MAAM;AACnBV,IAAAA,OAAO,CAACW,IAAR,CAAa,MAAMT,OAAO,CAAC,KAAD,CAA1B;AACD,GAFD;;AAIA,SACE,iCACE,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAED,IAA3B;AAAiC,IAAA,OAAO,EAAEK,OAA1C;AAAmD,IAAA,UAAU,EAAEC;AAA/D,IADF,EAEE;AAAQ,IAAA,QAAQ,EAAEN,IAAlB;AAAwB,IAAA,OAAO,EAAEO;AAAjC,cAFF,EAKE;AAAQ,IAAA,OAAO,EAAEE;AAAjB,YALF,CADF;AASD","sourcesContent":["// Copyright (c) 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {useState} from 'react';\nimport {\n  WebMEncoder,\n  JPEGSequenceEncoder,\n  PNGSequenceEncoder,\n  PreviewEncoder,\n  GifEncoder\n} from '@hubble.gl/core';\nimport EncoderDropdown from './encoder-dropdown';\n\nexport default function BasicControls({\n  adapter,\n  busy,\n  setBusy,\n  encoderSettings,\n  updateCamera = undefined\n}) {\n  const [encoder, setEncoder] = useState('gif');\n\n  const onRender = () => {\n    if (encoder === 'preview') {\n      adapter.render(PreviewEncoder, encoderSettings, () => setBusy(false), updateCamera);\n    } else if (encoder === 'webm') {\n      adapter.render(WebMEncoder, encoderSettings, () => setBusy(false), updateCamera);\n    } else if (encoder === 'jpeg') {\n      adapter.render(JPEGSequenceEncoder, encoderSettings, () => setBusy(false), updateCamera);\n    } else if (encoder === 'png') {\n      adapter.render(PNGSequenceEncoder, encoderSettings, () => setBusy(false), updateCamera);\n    } else if (encoder === 'gif') {\n      adapter.render(GifEncoder, encoderSettings, () => setBusy(false), updateCamera);\n    }\n\n    setBusy(true);\n  };\n\n  const onStop = () => {\n    adapter.stop(() => setBusy(false));\n  };\n\n  return (\n    <div>\n      <EncoderDropdown disabled={busy} encoder={encoder} setEncoder={setEncoder} />\n      <button disabled={busy} onClick={onRender}>\n        Render\n      </button>\n      <button onClick={onStop}>Stop</button>\n    </div>\n  );\n}\n"],"file":"basic-controls.js"}