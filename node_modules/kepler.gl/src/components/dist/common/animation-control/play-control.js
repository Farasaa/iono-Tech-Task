"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _localization = require("@kepler.gl/localization");

var _styledComponents = require("../styled-components");

var _iconButton = _interopRequireDefault(require("../icon-button"));

// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var DELAY_SHOW = 500;

function PlayControlFactory() {
  var PlayControl = function PlayControl(_ref) {
    var showAnimationWindowControl = _ref.showAnimationWindowControl,
        isAnimating = _ref.isAnimating,
        pauseAnimation = _ref.pauseAnimation,
        startAnimation = _ref.startAnimation,
        isSpeedControlVisible = _ref.isSpeedControlVisible,
        btnStyle = _ref.btnStyle,
        playbackIcons = _ref.playbackIcons,
        buttonHeight = _ref.buttonHeight;
    return showAnimationWindowControl ? null : /*#__PURE__*/_react["default"].createElement(_iconButton["default"], (0, _extends2["default"])({
      "data-tip": true,
      "data-for": "animate-play-pause",
      className: (0, _classnames["default"])('playback-control-button', {
        active: isAnimating
      }),
      onClick: isAnimating ? pauseAnimation : startAnimation,
      hide: isSpeedControlVisible
    }, btnStyle), isAnimating ? /*#__PURE__*/_react["default"].createElement(playbackIcons.pause, {
      height: buttonHeight
    }) : /*#__PURE__*/_react["default"].createElement(playbackIcons.play, {
      height: buttonHeight
    }), /*#__PURE__*/_react["default"].createElement(_styledComponents.Tooltip, {
      id: "animate-play-pause",
      place: "top",
      delayShow: DELAY_SHOW,
      effect: "solid"
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: isAnimating ? 'tooltip.pause' : 'tooltip.play'
    })));
  };

  return PlayControl;
}

var _default = PlayControlFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vYW5pbWF0aW9uLWNvbnRyb2wvcGxheS1jb250cm9sLnRzeCJdLCJuYW1lcyI6WyJERUxBWV9TSE9XIiwiUGxheUNvbnRyb2xGYWN0b3J5IiwiUGxheUNvbnRyb2wiLCJzaG93QW5pbWF0aW9uV2luZG93Q29udHJvbCIsImlzQW5pbWF0aW5nIiwicGF1c2VBbmltYXRpb24iLCJzdGFydEFuaW1hdGlvbiIsImlzU3BlZWRDb250cm9sVmlzaWJsZSIsImJ0blN0eWxlIiwicGxheWJhY2tJY29ucyIsImJ1dHRvbkhlaWdodCIsImFjdGl2ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFQQTtBQUNBO0FBUUEsSUFBTUEsVUFBVSxHQUFHLEdBQW5COztBQUVBLFNBQVNDLGtCQUFULEdBQThCO0FBQzVCLE1BQU1DLFdBQVcsR0FBRyxTQUFkQSxXQUFjLE9BU2Q7QUFBQSxRQVJKQywwQkFRSSxRQVJKQSwwQkFRSTtBQUFBLFFBUEpDLFdBT0ksUUFQSkEsV0FPSTtBQUFBLFFBTkpDLGNBTUksUUFOSkEsY0FNSTtBQUFBLFFBTEpDLGNBS0ksUUFMSkEsY0FLSTtBQUFBLFFBSkpDLHFCQUlJLFFBSkpBLHFCQUlJO0FBQUEsUUFISkMsUUFHSSxRQUhKQSxRQUdJO0FBQUEsUUFGSkMsYUFFSSxRQUZKQSxhQUVJO0FBQUEsUUFESkMsWUFDSSxRQURKQSxZQUNJO0FBQ0osV0FBT1AsMEJBQTBCLEdBQUcsSUFBSCxnQkFDL0IsZ0NBQUMsc0JBQUQ7QUFDRSxzQkFERjtBQUVFLGtCQUFTLG9CQUZYO0FBR0UsTUFBQSxTQUFTLEVBQUUsNEJBQVcseUJBQVgsRUFBc0M7QUFBQ1EsUUFBQUEsTUFBTSxFQUFFUDtBQUFULE9BQXRDLENBSGI7QUFJRSxNQUFBLE9BQU8sRUFBRUEsV0FBVyxHQUFHQyxjQUFILEdBQW9CQyxjQUoxQztBQUtFLE1BQUEsSUFBSSxFQUFFQztBQUxSLE9BTU1DLFFBTk4sR0FRR0osV0FBVyxnQkFDVixnQ0FBQyxhQUFELENBQWUsS0FBZjtBQUFxQixNQUFBLE1BQU0sRUFBRU07QUFBN0IsTUFEVSxnQkFHVixnQ0FBQyxhQUFELENBQWUsSUFBZjtBQUFvQixNQUFBLE1BQU0sRUFBRUE7QUFBNUIsTUFYSixlQWFFLGdDQUFDLHlCQUFEO0FBQVMsTUFBQSxFQUFFLEVBQUMsb0JBQVo7QUFBaUMsTUFBQSxLQUFLLEVBQUMsS0FBdkM7QUFBNkMsTUFBQSxTQUFTLEVBQUVWLFVBQXhEO0FBQW9FLE1BQUEsTUFBTSxFQUFDO0FBQTNFLG9CQUNFLGdDQUFDLDhCQUFEO0FBQWtCLE1BQUEsRUFBRSxFQUFFSSxXQUFXLEdBQUcsZUFBSCxHQUFxQjtBQUF0RCxNQURGLENBYkYsQ0FERjtBQW1CRCxHQTdCRDs7QUErQkEsU0FBT0YsV0FBUDtBQUNEOztlQUVjRCxrQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7Rm9ybWF0dGVkTWVzc2FnZX0gZnJvbSAnQGtlcGxlci5nbC9sb2NhbGl6YXRpb24nO1xuaW1wb3J0IHtUb29sdGlwfSBmcm9tICcuLi9zdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgSWNvbkJ1dHRvbiBmcm9tICcuLi9pY29uLWJ1dHRvbic7XG5cbmNvbnN0IERFTEFZX1NIT1cgPSA1MDA7XG5cbmZ1bmN0aW9uIFBsYXlDb250cm9sRmFjdG9yeSgpIHtcbiAgY29uc3QgUGxheUNvbnRyb2wgPSAoe1xuICAgIHNob3dBbmltYXRpb25XaW5kb3dDb250cm9sLFxuICAgIGlzQW5pbWF0aW5nLFxuICAgIHBhdXNlQW5pbWF0aW9uLFxuICAgIHN0YXJ0QW5pbWF0aW9uLFxuICAgIGlzU3BlZWRDb250cm9sVmlzaWJsZSxcbiAgICBidG5TdHlsZSxcbiAgICBwbGF5YmFja0ljb25zLFxuICAgIGJ1dHRvbkhlaWdodFxuICB9KSA9PiB7XG4gICAgcmV0dXJuIHNob3dBbmltYXRpb25XaW5kb3dDb250cm9sID8gbnVsbCA6IChcbiAgICAgIDxJY29uQnV0dG9uXG4gICAgICAgIGRhdGEtdGlwXG4gICAgICAgIGRhdGEtZm9yPVwiYW5pbWF0ZS1wbGF5LXBhdXNlXCJcbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc25hbWVzKCdwbGF5YmFjay1jb250cm9sLWJ1dHRvbicsIHthY3RpdmU6IGlzQW5pbWF0aW5nfSl9XG4gICAgICAgIG9uQ2xpY2s9e2lzQW5pbWF0aW5nID8gcGF1c2VBbmltYXRpb24gOiBzdGFydEFuaW1hdGlvbn1cbiAgICAgICAgaGlkZT17aXNTcGVlZENvbnRyb2xWaXNpYmxlfVxuICAgICAgICB7Li4uYnRuU3R5bGV9XG4gICAgICA+XG4gICAgICAgIHtpc0FuaW1hdGluZyA/IChcbiAgICAgICAgICA8cGxheWJhY2tJY29ucy5wYXVzZSBoZWlnaHQ9e2J1dHRvbkhlaWdodH0gLz5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8cGxheWJhY2tJY29ucy5wbGF5IGhlaWdodD17YnV0dG9uSGVpZ2h0fSAvPlxuICAgICAgICApfVxuICAgICAgICA8VG9vbHRpcCBpZD1cImFuaW1hdGUtcGxheS1wYXVzZVwiIHBsYWNlPVwidG9wXCIgZGVsYXlTaG93PXtERUxBWV9TSE9XfSBlZmZlY3Q9XCJzb2xpZFwiPlxuICAgICAgICAgIDxGb3JtYXR0ZWRNZXNzYWdlIGlkPXtpc0FuaW1hdGluZyA/ICd0b29sdGlwLnBhdXNlJyA6ICd0b29sdGlwLnBsYXknfSAvPlxuICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICA8L0ljb25CdXR0b24+XG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gUGxheUNvbnRyb2w7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBsYXlDb250cm9sRmFjdG9yeTtcbiJdfQ==