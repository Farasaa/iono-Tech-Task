import { transform } from 'popmotion';
export var cameraFrame = function cameraFrame(cameraKeyframes) {
  var factor = cameraKeyframes.factor;
  var start = cameraKeyframes.getStartData();
  var end = cameraKeyframes.getEndData();
  var latitude = transform.interpolate([0, 1], [start.latitude, end.latitude], {
    ease: end.ease
  });
  var longitude = transform.interpolate([0, 1], [start.longitude, end.longitude], {
    ease: end.ease
  });
  var zoom = transform.interpolate([0, 1], [start.zoom, end.zoom], {
    ease: end.ease
  });
  var bearing = transform.interpolate([0, 1], [start.bearing, end.bearing], {
    ease: end.ease
  });
  var pitch = transform.interpolate([0, 1], [start.pitch, end.pitch], {
    ease: end.ease
  });
  var cameraState = {
    latitude: latitude(factor),
    longitude: longitude(factor),
    zoom: zoom(factor),
    bearing: bearing(factor),
    pitch: pitch(factor)
  };
  return cameraState;
};
export var filterFrame = function filterFrame(filterKeyframes) {
  var factor = filterKeyframes.factor;
  var start = filterKeyframes.getStartData();
  var end = filterKeyframes.getEndData();
  var left = transform.interpolate([0, 1], [start[0], end[0]], {
    ease: end.ease
  });
  var right = transform.interpolate([0, 1], [start[1], end[1]], {
    ease: end.ease
  });
  return [left(factor), right(factor)];
};
export var radiusFrame = function radiusFrame(keyframes) {
  var factor = keyframes.factor;
  var start = keyframes.getStartData();
  var end = keyframes.getEndData();
  var radius = transform.interpolate([0, 1], [start.radius, end.radius], {
    ease: end.ease
  });
  return radius(factor);
};
export var elevationScaleFrame = function elevationScaleFrame(keyframes) {
  var factor = keyframes.factor;
  var start = keyframes.getStartData();
  var end = keyframes.getEndData();
  var elevationScale = transform.interpolate([0, 1], [start.elevationScale, end.elevationScale], {
    ease: end.ease
  });
  return elevationScale(factor);
};
export var opacityFrame = function opacityFrame(keyframes) {
  var factor = keyframes.factor;
  var start = keyframes.getStartData();
  var end = keyframes.getEndData();
  var opacity = transform.interpolate([0, 1], [start.opacity, end.opacity], {
    ease: end.ease
  });
  return opacity(factor);
};
//# sourceMappingURL=frame.js.map