{"version":3,"sources":["../../../../src/encoders/tar/header.js"],"names":["structure","field","length","format","data","cb","buffer","utils","clean","offset","forEach","value","str","i","charCodeAt"],"mappings":";;;;;;;;;;AAmBA;;AAuBO,IAAMA,SAAS,GAAG,CACvB;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CADuB,EAKvB;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CALuB,EASvB;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CATuB,EAavB;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CAbuB,EAiBvB;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CAjBuB,EAqBvB;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CArBuB,EAyBvB;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CAzBuB,EA6BvB;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CA7BuB,EAiCvB;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CAjCuB,EAqCvB;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CArCuB,EAyCvB;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CAzCuB,EA6CvB;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CA7CuB,EAiDvB;AACED,EAAAA,KAAK,EAAE,aADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CAjDuB,EAqDvB;AACED,EAAAA,KAAK,EAAE,aADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CArDuB,EAyDvB;AACED,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CAzDuB,EA6DvB;AACED,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,MAAM,EAAE;AAFV,CA7DuB,CAAlB;;;AAmEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,EAAtB,EAA0B;AAC/B,MAAMC,MAAM,GAAGC,KAAK,CAACC,KAAN,CAAY,GAAZ,CAAf;AACA,MAAIC,MAAM,GAAG,CAAb;AAEAT,EAAAA,SAAS,CAACU,OAAV,CAAkB,UAAAC,KAAK,EAAI;AACzB,QAAMC,GAAG,GAAGR,IAAI,CAACO,KAAK,CAACV,KAAP,CAAJ,IAAqB,EAAjC;AACA,QAAIY,CAAJ;AACA,QAAIX,MAAJ;;AAEA,SAAKW,CAAC,GAAG,CAAJ,EAAOX,MAAM,GAAGU,GAAG,CAACV,MAAzB,EAAiCW,CAAC,GAAGX,MAArC,EAA6CW,CAAC,IAAI,CAAlD,EAAqD;AACnDP,MAAAA,MAAM,CAACG,MAAD,CAAN,GAAiBG,GAAG,CAACE,UAAJ,CAAeD,CAAf,CAAjB;AACAJ,MAAAA,MAAM,IAAI,CAAV;AACD;;AAGDA,IAAAA,MAAM,IAAIE,KAAK,CAACT,MAAN,GAAeW,CAAzB;AACD,GAZD;;AAcA,MAAI,OAAOR,EAAP,KAAc,UAAlB,EAA8B;AAC5B,WAAOA,EAAE,CAACC,MAAD,EAASG,MAAT,CAAT;AACD;;AACD,SAAOH,MAAP;AACD","sourcesContent":["// Copyright (c) 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as utils from './utils';\n/*\nstruct posix_header {             // byte offset\n\tchar name[100];               //   0\n\tchar mode[8];                 // 100\n\tchar uid[8];                  // 108\n\tchar gid[8];                  // 116\n\tchar size[12];                // 124\n\tchar mtime[12];               // 136\n\tchar chksum[8];               // 148\n\tchar typeflag;                // 156\n\tchar linkname[100];           // 157\n\tchar magic[6];                // 257\n\tchar version[2];              // 263\n\tchar uname[32];               // 265\n\tchar gname[32];               // 297\n\tchar devmajor[8];             // 329\n\tchar devminor[8];             // 337\n\tchar prefix[155];             // 345\n                                  // 500\n};\n*/\n\nexport const structure = [\n  {\n    field: 'fileName',\n    length: 100\n  },\n  {\n    field: 'fileMode',\n    length: 8\n  },\n  {\n    field: 'uid',\n    length: 8\n  },\n  {\n    field: 'gid',\n    length: 8\n  },\n  {\n    field: 'fileSize',\n    length: 12\n  },\n  {\n    field: 'mtime',\n    length: 12\n  },\n  {\n    field: 'checksum',\n    length: 8\n  },\n  {\n    field: 'type',\n    length: 1\n  },\n  {\n    field: 'linkName',\n    length: 100\n  },\n  {\n    field: 'ustar',\n    length: 8\n  },\n  {\n    field: 'owner',\n    length: 32\n  },\n  {\n    field: 'group',\n    length: 32\n  },\n  {\n    field: 'majorNumber',\n    length: 8\n  },\n  {\n    field: 'minorNumber',\n    length: 8\n  },\n  {\n    field: 'filenamePrefix',\n    length: 155\n  },\n  {\n    field: 'padding',\n    length: 12\n  }\n];\n\nexport function format(data, cb) {\n  const buffer = utils.clean(512);\n  let offset = 0;\n\n  structure.forEach(value => {\n    const str = data[value.field] || '';\n    let i;\n    let length;\n\n    for (i = 0, length = str.length; i < length; i += 1) {\n      buffer[offset] = str.charCodeAt(i);\n      offset += 1;\n    }\n\n    // space it out with nulls\n    offset += value.length - i;\n  });\n\n  if (typeof cb === 'function') {\n    return cb(buffer, offset);\n  }\n  return buffer;\n}\n"],"file":"header.js"}