"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.RootContext = exports.CloudProviderContext = exports.FeatureFlagsContextProvider = exports.FeatureFlagsContext = void 0;

var _react = _interopRequireWildcard(require("react"));

// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var identity = function identity(state) {
  return state;
}; // New Context API only supported after 16.3


var KeplerGlContext = /*#__PURE__*/(0, _react.createContext)({
  selector: identity,
  id: 'map'
}); // TODO: breakdown this file into multiple files

var FeatureFlagsContext = /*#__PURE__*/(0, _react.createContext)({});
exports.FeatureFlagsContext = FeatureFlagsContext;

var FeatureFlagsContextProvider = function FeatureFlagsContextProvider(props) {
  return /*#__PURE__*/_react["default"].createElement(FeatureFlagsContext.Provider, {
    value: props.featureFlags || null
  }, props.children);
};
/**
 * This provides keeps track of the ist cloud providers
 * and the current selected one
 */


exports.FeatureFlagsContextProvider = FeatureFlagsContextProvider;
var CloudProviderContext = /*#__PURE__*/(0, _react.createContext)({
  provider: null,
  setProvider: function setProvider() {},
  cloudProviders: []
});
exports.CloudProviderContext = CloudProviderContext;
var RootContext = /*#__PURE__*/(0, _react.createContext)(null);
exports.RootContext = RootContext;
var _default = KeplerGlContext;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb250ZXh0LnRzeCJdLCJuYW1lcyI6WyJpZGVudGl0eSIsInN0YXRlIiwiS2VwbGVyR2xDb250ZXh0Iiwic2VsZWN0b3IiLCJpZCIsIkZlYXR1cmVGbGFnc0NvbnRleHQiLCJGZWF0dXJlRmxhZ3NDb250ZXh0UHJvdmlkZXIiLCJwcm9wcyIsImZlYXR1cmVGbGFncyIsImNoaWxkcmVuIiwiQ2xvdWRQcm92aWRlckNvbnRleHQiLCJwcm92aWRlciIsInNldFByb3ZpZGVyIiwiY2xvdWRQcm92aWRlcnMiLCJSb290Q29udGV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR0E7O0FBSEE7QUFDQTtBQUtBLElBQU1BLFFBQVEsR0FBRyxTQUFYQSxRQUFXLENBQUFDLEtBQUs7QUFBQSxTQUFJQSxLQUFKO0FBQUEsQ0FBdEIsQyxDQUNBOzs7QUFDQSxJQUFNQyxlQUFlLGdCQUFHLDBCQUFjO0FBQ3BDQyxFQUFBQSxRQUFRLEVBQUVILFFBRDBCO0FBRXBDSSxFQUFBQSxFQUFFLEVBQUU7QUFGZ0MsQ0FBZCxDQUF4QixDLENBS0E7O0FBQ08sSUFBTUMsbUJBQW1CLGdCQUFHLDBCQUE2QixFQUE3QixDQUE1Qjs7O0FBZUEsSUFBTUMsMkJBQTJCLEdBQUcsU0FBOUJBLDJCQUE4QixDQUN6Q0MsS0FEeUM7QUFBQSxzQkFHekMsZ0NBQUMsbUJBQUQsQ0FBcUIsUUFBckI7QUFBOEIsSUFBQSxLQUFLLEVBQUVBLEtBQUssQ0FBQ0MsWUFBTixJQUFzQjtBQUEzRCxLQUNHRCxLQUFLLENBQUNFLFFBRFQsQ0FIeUM7QUFBQSxDQUFwQztBQVFQO0FBQ0E7QUFDQTtBQUNBOzs7O0FBQ08sSUFBTUMsb0JBQW9CLGdCQUFHLDBCQUF3QztBQUMxRUMsRUFBQUEsUUFBUSxFQUFFLElBRGdFO0FBRTFFQyxFQUFBQSxXQUFXLEVBQUUsdUJBQU0sQ0FBRSxDQUZxRDtBQUcxRUMsRUFBQUEsY0FBYyxFQUFFO0FBSDBELENBQXhDLENBQTdCOztBQU1BLElBQU1DLFdBQVcsZ0JBQUcsMEJBQWdELElBQWhELENBQXBCOztlQUVRWixlIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0LCB7Y3JlYXRlQ29udGV4dCwgUmVmT2JqZWN0LCBSZWFjdE5vZGUsIFJlYWN0RWxlbWVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAnQGtlcGxlci5nbC9jbG91ZC1wcm92aWRlcnMnO1xuXG5jb25zdCBpZGVudGl0eSA9IHN0YXRlID0+IHN0YXRlO1xuLy8gTmV3IENvbnRleHQgQVBJIG9ubHkgc3VwcG9ydGVkIGFmdGVyIDE2LjNcbmNvbnN0IEtlcGxlckdsQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoe1xuICBzZWxlY3RvcjogaWRlbnRpdHksXG4gIGlkOiAnbWFwJ1xufSk7XG5cbi8vIFRPRE86IGJyZWFrZG93biB0aGlzIGZpbGUgaW50byBtdWx0aXBsZSBmaWxlc1xuZXhwb3J0IGNvbnN0IEZlYXR1cmVGbGFnc0NvbnRleHQgPSBjcmVhdGVDb250ZXh0PG9iamVjdCB8IG51bGw+KHt9KTtcblxuZXhwb3J0IHR5cGUgRmVhdHVyZUZsYWdzID0ge1trZXk6IHN0cmluZ106IHN0cmluZyB8IGJvb2xlYW59O1xuXG5leHBvcnQgdHlwZSBGZWF0dXJlRmxhZ3NDb250ZXh0UHJvdmlkZXJQcm9wcyA9IHtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbiAgZmVhdHVyZUZsYWdzPzogRmVhdHVyZUZsYWdzO1xufTtcblxuZXhwb3J0IHR5cGUgQ2xvdWRQcm92aWRlckNvbnRleHRUeXBlID0ge1xuICBwcm92aWRlcjogUHJvdmlkZXIgfCBudWxsO1xuICBzZXRQcm92aWRlcjogKHByb3ZpZGVyOiBQcm92aWRlciB8IG51bGwpID0+IHZvaWQ7XG4gIGNsb3VkUHJvdmlkZXJzOiBQcm92aWRlcltdO1xufTtcblxuZXhwb3J0IGNvbnN0IEZlYXR1cmVGbGFnc0NvbnRleHRQcm92aWRlciA9IChcbiAgcHJvcHM6IEZlYXR1cmVGbGFnc0NvbnRleHRQcm92aWRlclByb3BzXG4pOiBSZWFjdEVsZW1lbnQgPT4gKFxuICA8RmVhdHVyZUZsYWdzQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17cHJvcHMuZmVhdHVyZUZsYWdzIHx8IG51bGx9PlxuICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgPC9GZWF0dXJlRmxhZ3NDb250ZXh0LlByb3ZpZGVyPlxuKTtcblxuLyoqXG4gKiBUaGlzIHByb3ZpZGVzIGtlZXBzIHRyYWNrIG9mIHRoZSBpc3QgY2xvdWQgcHJvdmlkZXJzXG4gKiBhbmQgdGhlIGN1cnJlbnQgc2VsZWN0ZWQgb25lXG4gKi9cbmV4cG9ydCBjb25zdCBDbG91ZFByb3ZpZGVyQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8Q2xvdWRQcm92aWRlckNvbnRleHRUeXBlPih7XG4gIHByb3ZpZGVyOiBudWxsLFxuICBzZXRQcm92aWRlcjogKCkgPT4ge30sXG4gIGNsb3VkUHJvdmlkZXJzOiBbXVxufSk7XG5cbmV4cG9ydCBjb25zdCBSb290Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8UmVmT2JqZWN0PEhUTUxEaXZFbGVtZW50PiB8IG51bGw+KG51bGwpO1xuXG5leHBvcnQgZGVmYXVsdCBLZXBsZXJHbENvbnRleHQ7XG4iXX0=