"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _momentTimezone = _interopRequireDefault(require("moment-timezone"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _constants = require("@kepler.gl/constants");

var _itemSelector = _interopRequireDefault(require("../common/item-selector/item-selector"));

var _templateObject;

var getValue = function getValue(op) {
  return (op === null || op === void 0 ? void 0 : op.name) || _constants.DEFAULT_TIMEZONE;
};

var StyledItemSelector = (0, _styledComponents["default"])(_itemSelector["default"])(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  .item-selector__dropdown {\n    padding-left: 30px;\n    border-radius: 4px;\n  }\n  .active {\n    border-color: ", ";\n    border-radius: 4px 4px 0px 0px !important;\n  }\n"])), function (props) {
  return props.theme.activeColor;
});

var defaultTimezones = _momentTimezone["default"].tz.names().map(function (name) {
  return {
    name: name
  };
});

function TimezoneSelectorFactory() {
  var TimezoneTypeSelector = function TimezoneTypeSelector(_ref) {
    var selected = _ref.selected,
        _ref$options = _ref.options,
        options = _ref$options === void 0 ? defaultTimezones : _ref$options,
        onSelect = _ref.onSelect;
    var selectedItems = (0, _react.useMemo)(function () {
      return selected ? [{
        name: selected
      }] : [];
    }, [selected]);
    return /*#__PURE__*/_react["default"].createElement(StyledItemSelector, {
      selectedItems: selectedItems,
      options: options,
      multiSelect: false,
      disabled: false,
      placeholder: "effectManager.timezone",
      onChange: onSelect,
      filterOption: "name",
      getOptionValue: getValue,
      displayOption: getValue,
      searchable: true,
      showArrow: true
    });
  };

  return (0, _styledComponents.withTheme)(TimezoneTypeSelector);
}

var _default = TimezoneSelectorFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lZmZlY3RzL3RpbWV6b25lLXNlbGVjdG9yLnRzeCJdLCJuYW1lcyI6WyJnZXRWYWx1ZSIsIm9wIiwibmFtZSIsIkRFRkFVTFRfVElNRVpPTkUiLCJTdHlsZWRJdGVtU2VsZWN0b3IiLCJJdGVtU2VsZWN0b3IiLCJwcm9wcyIsInRoZW1lIiwiYWN0aXZlQ29sb3IiLCJkZWZhdWx0VGltZXpvbmVzIiwibW9tZW50IiwidHoiLCJuYW1lcyIsIm1hcCIsIlRpbWV6b25lU2VsZWN0b3JGYWN0b3J5IiwiVGltZXpvbmVUeXBlU2VsZWN0b3IiLCJzZWxlY3RlZCIsIm9wdGlvbnMiLCJvblNlbGVjdCIsInNlbGVjdGVkSXRlbXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFFQTs7OztBQUVBLElBQU1BLFFBQVEsR0FBRyxTQUFYQSxRQUFXLENBQUFDLEVBQUU7QUFBQSxTQUFJLENBQUFBLEVBQUUsU0FBRixJQUFBQSxFQUFFLFdBQUYsWUFBQUEsRUFBRSxDQUFFQyxJQUFKLEtBQVlDLDJCQUFoQjtBQUFBLENBQW5COztBQVNBLElBQU1DLGtCQUFrQixHQUFHLGtDQUFPQyx3QkFBUCxDQUFILHlRQU1KLFVBQUFDLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUMsV0FBaEI7QUFBQSxDQU5ELENBQXhCOztBQVdBLElBQU1DLGdCQUFnQixHQUFHQywyQkFBT0MsRUFBUCxDQUFVQyxLQUFWLEdBQWtCQyxHQUFsQixDQUFzQixVQUFBWCxJQUFJLEVBQUk7QUFDckQsU0FBTztBQUNMQSxJQUFBQSxJQUFJLEVBQUpBO0FBREssR0FBUDtBQUdELENBSndCLENBQXpCOztBQU1BLFNBQVNZLHVCQUFULEdBQW1DO0FBQ2pDLE1BQU1DLG9CQUFxRCxHQUFHLFNBQXhEQSxvQkFBd0QsT0FJakM7QUFBQSxRQUgzQkMsUUFHMkIsUUFIM0JBLFFBRzJCO0FBQUEsNEJBRjNCQyxPQUUyQjtBQUFBLFFBRjNCQSxPQUUyQiw2QkFGakJSLGdCQUVpQjtBQUFBLFFBRDNCUyxRQUMyQixRQUQzQkEsUUFDMkI7QUFDM0IsUUFBTUMsYUFBYSxHQUFHLG9CQUFRLFlBQU07QUFDbEMsYUFBT0gsUUFBUSxHQUFHLENBQUM7QUFBQ2QsUUFBQUEsSUFBSSxFQUFFYztBQUFQLE9BQUQsQ0FBSCxHQUF3QixFQUF2QztBQUNELEtBRnFCLEVBRW5CLENBQUNBLFFBQUQsQ0FGbUIsQ0FBdEI7QUFJQSx3QkFDRSxnQ0FBQyxrQkFBRDtBQUNFLE1BQUEsYUFBYSxFQUFFRyxhQURqQjtBQUVFLE1BQUEsT0FBTyxFQUFFRixPQUZYO0FBR0UsTUFBQSxXQUFXLEVBQUUsS0FIZjtBQUlFLE1BQUEsUUFBUSxFQUFFLEtBSlo7QUFLRSxNQUFBLFdBQVcsRUFBQyx3QkFMZDtBQU1FLE1BQUEsUUFBUSxFQUFFQyxRQU5aO0FBT0UsTUFBQSxZQUFZLEVBQUMsTUFQZjtBQVFFLE1BQUEsY0FBYyxFQUFFbEIsUUFSbEI7QUFTRSxNQUFBLGFBQWEsRUFBRUEsUUFUakI7QUFVRSxNQUFBLFVBQVUsRUFBRSxJQVZkO0FBV0UsTUFBQSxTQUFTLEVBQUU7QUFYYixNQURGO0FBZUQsR0F4QkQ7O0FBMEJBLFNBQU8saUNBQVVlLG9CQUFWLENBQVA7QUFDRDs7ZUFFY0QsdUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHt1c2VNZW1vfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudC10aW1lem9uZSc7XG5pbXBvcnQgc3R5bGVkLCB7d2l0aFRoZW1lfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7REVGQVVMVF9USU1FWk9ORX0gZnJvbSAnQGtlcGxlci5nbC9jb25zdGFudHMnO1xuXG5pbXBvcnQgSXRlbVNlbGVjdG9yIGZyb20gJy4uL2NvbW1vbi9pdGVtLXNlbGVjdG9yL2l0ZW0tc2VsZWN0b3InO1xuXG5jb25zdCBnZXRWYWx1ZSA9IG9wID0+IG9wPy5uYW1lIHx8IERFRkFVTFRfVElNRVpPTkU7XG5cbmV4cG9ydCB0eXBlIFRpbWV6b25lU2VsZWN0b3JQcm9wcyA9IHtcbiAgc2VsZWN0ZWQ/OiBzdHJpbmc7XG4gIG9wdGlvbnM/OiB7bmFtZTogc3RyaW5nfVtdO1xuICBvblNlbGVjdDogKHN0cmluZykgPT4gdm9pZDtcbiAgdGhlbWU/OiBhbnk7XG59O1xuXG5jb25zdCBTdHlsZWRJdGVtU2VsZWN0b3IgPSBzdHlsZWQoSXRlbVNlbGVjdG9yKWBcbiAgLml0ZW0tc2VsZWN0b3JfX2Ryb3Bkb3duIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICB9XG4gIC5hY3RpdmUge1xuICAgIGJvcmRlci1jb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5hY3RpdmVDb2xvcn07XG4gICAgYm9yZGVyLXJhZGl1czogNHB4IDRweCAwcHggMHB4ICFpbXBvcnRhbnQ7XG4gIH1cbmA7XG5cbmNvbnN0IGRlZmF1bHRUaW1lem9uZXMgPSBtb21lbnQudHoubmFtZXMoKS5tYXAobmFtZSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZVxuICB9O1xufSk7XG5cbmZ1bmN0aW9uIFRpbWV6b25lU2VsZWN0b3JGYWN0b3J5KCkge1xuICBjb25zdCBUaW1lem9uZVR5cGVTZWxlY3RvcjogUmVhY3QuRkM8VGltZXpvbmVTZWxlY3RvclByb3BzPiA9ICh7XG4gICAgc2VsZWN0ZWQsXG4gICAgb3B0aW9ucyA9IGRlZmF1bHRUaW1lem9uZXMsXG4gICAgb25TZWxlY3RcbiAgfTogVGltZXpvbmVTZWxlY3RvclByb3BzKSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0ZWRJdGVtcyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgcmV0dXJuIHNlbGVjdGVkID8gW3tuYW1lOiBzZWxlY3RlZH1dIDogW107XG4gICAgfSwgW3NlbGVjdGVkXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFN0eWxlZEl0ZW1TZWxlY3RvclxuICAgICAgICBzZWxlY3RlZEl0ZW1zPXtzZWxlY3RlZEl0ZW1zfVxuICAgICAgICBvcHRpb25zPXtvcHRpb25zfVxuICAgICAgICBtdWx0aVNlbGVjdD17ZmFsc2V9XG4gICAgICAgIGRpc2FibGVkPXtmYWxzZX1cbiAgICAgICAgcGxhY2Vob2xkZXI9XCJlZmZlY3RNYW5hZ2VyLnRpbWV6b25lXCJcbiAgICAgICAgb25DaGFuZ2U9e29uU2VsZWN0fVxuICAgICAgICBmaWx0ZXJPcHRpb249XCJuYW1lXCJcbiAgICAgICAgZ2V0T3B0aW9uVmFsdWU9e2dldFZhbHVlfVxuICAgICAgICBkaXNwbGF5T3B0aW9uPXtnZXRWYWx1ZX1cbiAgICAgICAgc2VhcmNoYWJsZT17dHJ1ZX1cbiAgICAgICAgc2hvd0Fycm93PXt0cnVlfVxuICAgICAgLz5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiB3aXRoVGhlbWUoVGltZXpvbmVUeXBlU2VsZWN0b3IpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBUaW1lem9uZVNlbGVjdG9yRmFjdG9yeTtcbiJdfQ==