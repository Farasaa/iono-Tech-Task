{"version":3,"sources":["../../../../src/encoders/video/gif-encoder.js"],"names":["GifEncoder","settings","mimeType","extension","gifBuilder","options","gif","width","height","numWorkers","sampleInterval","source","start","bind","add","save","GIFBuilder","interval","framerate","canvas","dataUrl","toDataURL","build","FrameEncoder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;IAEqBA,U;;;;;AAEnB,sBAAYC,QAAZ,EAAsB;AAAA;;AAAA;AACpB,8BAAMA,QAAN;AACA,UAAKC,QAAL,GAAgB,WAAhB;AACA,UAAKC,SAAL,GAAiB,MAAjB;AACA,UAAKC,UAAL,GAAkB,IAAlB;AACA,UAAKC,OAAL,GAAe,EAAf;;AAEA,QAAIJ,QAAQ,CAACK,GAAb,EAAkB;AAChB,YAAKD,OAAL,GAAeJ,QAAQ,CAACK,GAAxB;AACD;;AAED,UAAKD,OAAL,CAAaE,KAAb,GAAqB,MAAKF,OAAL,CAAaE,KAAb,IAAsB,GAA3C;AACA,UAAKF,OAAL,CAAaG,MAAb,GAAsB,MAAKH,OAAL,CAAaG,MAAb,IAAuB,GAA7C;AACA,UAAKH,OAAL,CAAaI,UAAb,GAA0B,MAAKJ,OAAL,CAAaI,UAAb,IAA2B,CAArD;AACA,UAAKJ,OAAL,CAAaK,cAAb,GAA8B,MAAKL,OAAL,CAAaK,cAAb,IAA+B,EAA7D;AAGA,UAAKC,MAAL,GAAc,QAAd;AAEA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,gDAAb;AACA,UAAKC,GAAL,GAAW,MAAKA,GAAL,CAASD,IAAT,gDAAX;AACA,UAAKE,IAAL,GAAY,MAAKA,IAAL,CAAUF,IAAV,gDAAZ;AArBoB;AAsBrB;;;;4BAEO;AACN,WAAKT,UAAL,GAAkB,IAAIY,iBAAJ;AAChBL,QAAAA,MAAM,EAAE,KAAKA;AADG,SAEb,KAAKN,OAFQ;AAGhBY,QAAAA,QAAQ,EAAE,IAAI,KAAKC;AAHH,SAAlB;AAKD;;;;kGAGSC,M;;;;;;sBACJ,KAAKR,MAAL,KAAgB,Q;;;;;AACZS,gBAAAA,O,GAAUD,MAAM,CAACE,SAAP,CAAiB,YAAjB,EAA+B,GAA/B,C;;uBACV,KAAKjB,UAAL,CAAgBU,GAAhB,CAAoBM,OAApB,C;;;;;;;;;;;;;;;;;;;;;;;;kDAKD,KAAKhB,UAAL,CAAgBkB,KAAhB,E;;;;;;;;;;;;;;;;;;EA3C6BC,wB","sourcesContent":["import {GIFBuilder} from '@loaders.gl/video';\nimport FrameEncoder from '../frame-encoder';\n\nexport default class GifEncoder extends FrameEncoder {\n  /** @param {import('types').FrameEncoderSettings} settings */\n  constructor(settings) {\n    super(settings);\n    this.mimeType = 'image/gif';\n    this.extension = '.gif';\n    this.gifBuilder = null;\n    this.options = {};\n\n    if (settings.gif) {\n      this.options = settings.gif;\n    }\n\n    this.options.width = this.options.width || 720;\n    this.options.height = this.options.height || 480;\n    this.options.numWorkers = this.options.numWorkers || 4;\n    this.options.sampleInterval = this.options.sampleInterval || 10;\n\n    // this.source = settings.source\n    this.source = 'images';\n\n    this.start = this.start.bind(this);\n    this.add = this.add.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  start() {\n    this.gifBuilder = new GIFBuilder({\n      source: this.source,\n      ...this.options,\n      interval: 1 / this.framerate\n    });\n  }\n\n  /** @param {HTMLCanvasElement} canvas */\n  async add(canvas) {\n    if (this.source === 'images') {\n      const dataUrl = canvas.toDataURL('image/jpeg', 0.8);\n      await this.gifBuilder.add(dataUrl);\n    }\n  }\n\n  async save() {\n    return this.gifBuilder.build();\n  }\n}\n"],"file":"gif-encoder.js"}