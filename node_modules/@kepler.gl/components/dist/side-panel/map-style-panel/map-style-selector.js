"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _classnames = _interopRequireDefault(require("classnames"));

var _localization = require("@kepler.gl/localization");

var _constants = require("@kepler.gl/constants");

var _icons = require("../../common/icons");

var _panelHeaderAction = _interopRequireDefault(require("../panel-header-action"));

var _styledComponents2 = require("../../common/styled-components");

var _templateObject;

var StyledMapDropdown = (0, _styledComponents["default"])(_styledComponents2.StyledPanelHeader)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  height: 48px;\n  margin-bottom: 5px;\n  opacity: 1;\n  position: relative;\n  transition: opacity 0.05s ease-in, height 0.25s ease-out;\n\n  &.collapsed {\n    height: 0;\n    margin-bottom: 0;\n    opacity: 0;\n  }\n\n  :hover {\n    cursor: pointer;\n    background-color: ", ";\n  }\n\n  .map-title-block img {\n    margin-right: 12px;\n  }\n\n  .map-preview {\n    border-radius: 3px;\n    height: 30px;\n    width: 40px;\n  }\n\n  &.selected {\n    outline: 1px solid #caf2f4;\n  }\n\n  /* show callout dot if props.hasCallout and theme provides calloutDot base styles */\n  :after {\n    ", "\n    background-color: #00ACF5;\n    top: 12px;\n    left: 15px;\n    display: ", ";\n  }\n\n  .custom-style-actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n"])), function (props) {
  return props.theme.panelBackgroundHover;
}, function (_ref) {
  var theme = _ref.theme;
  return theme.calloutDot;
}, function (_ref2) {
  var theme = _ref2.theme,
      hasCallout = _ref2.hasCallout;
  return theme.calloutDot && hasCallout ? 'block' : 'none';
});
MapStyleSelectorFactory.deps = [_panelHeaderAction["default"]];

function MapStyleSelectorFactory(PanelHeaderAction) {
  var defaultActionIcons = {
    arrowDown: _icons.ArrowDown
  };

  var MapStyleSelector = function MapStyleSelector(_ref3) {
    var mapStyle = _ref3.mapStyle,
        onChange = _ref3.onChange,
        toggleActive = _ref3.toggleActive,
        isSelecting = _ref3.isSelecting,
        customMapStylesActions = _ref3.customMapStylesActions,
        _ref3$actionIcons = _ref3.actionIcons,
        actionIcons = _ref3$actionIcons === void 0 ? defaultActionIcons : _ref3$actionIcons;
    var mapStyles = mapStyle.mapStyles,
        styleType = mapStyle.styleType;
    return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_styledComponents2.PanelLabel, null, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'mapManager.mapStyle'
    })), Object.values(mapStyles).map(function (_ref4) {
      var id = _ref4.id,
          custom = _ref4.custom,
          _ref4$icon = _ref4.icon,
          icon = _ref4$icon === void 0 ? _constants.NO_BASEMAP_ICON : _ref4$icon,
          _ref4$label = _ref4.label,
          label = _ref4$label === void 0 ? 'Untitled' : _ref4$label;
      return /*#__PURE__*/_react["default"].createElement(StyledMapDropdown, {
        className: (0, _classnames["default"])('map-dropdown-option', {
          collapsed: !isSelecting && id !== styleType,
          selected: isSelecting && id === styleType
        }),
        key: id,
        onClick: isSelecting ? function () {
          return onChange(id);
        } : toggleActive,
        hasCallout: Boolean(custom)
      }, /*#__PURE__*/_react["default"].createElement(_styledComponents2.PanelHeaderContent, {
        className: "map-title-block"
      }, /*#__PURE__*/_react["default"].createElement("img", {
        className: "map-preview",
        src: icon
      }), /*#__PURE__*/_react["default"].createElement(_styledComponents2.PanelHeaderTitle, {
        className: "map-preview-name"
      }, label)), !isSelecting ? /*#__PURE__*/_react["default"].createElement(PanelHeaderAction, {
        className: "map-dropdown-option__enable-config",
        id: "map-enable-config",
        IconComponent: actionIcons.arrowDown,
        tooltip: 'tooltip.selectBaseMapStyle',
        onClick: toggleActive
      }) : null, isSelecting && custom ? /*#__PURE__*/_react["default"].createElement("div", {
        className: "custom-style-actions"
      }, ((customMapStylesActions === null || customMapStylesActions === void 0 ? void 0 : customMapStylesActions[id]) || []).map(function (action) {
        return /*#__PURE__*/_react["default"].createElement(PanelHeaderAction, {
          key: action.id,
          className: "map-dropdown-option__enable-config",
          id: action.id,
          IconComponent: action.IconComponent,
          tooltip: action.tooltip,
          onClick: function onClick(e) {
            e.stopPropagation();
            action.onClick();
          }
        });
      })) : null);
    }));
  };

  return MapStyleSelector;
}

var _default = MapStyleSelectorFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,