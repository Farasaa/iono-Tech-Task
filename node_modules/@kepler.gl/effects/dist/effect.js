"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Effect = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _utils = require("@kepler.gl/utils");

var _constants = require("@kepler.gl/constants");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var Effect = /*#__PURE__*/function () {
  // effect specific parameters for a deck.gl effect (uniforms)
  // runtime props
  function Effect() {
    var _POSTPROCESSING_EFFEC;

    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck2["default"])(this, Effect);
    (0, _defineProperty2["default"])(this, "id", void 0);
    (0, _defineProperty2["default"])(this, "type", void 0);
    (0, _defineProperty2["default"])(this, "isEnabled", void 0);
    (0, _defineProperty2["default"])(this, "parameters", void 0);
    (0, _defineProperty2["default"])(this, "isConfigActive", void 0);
    (0, _defineProperty2["default"])(this, "isJsonEditorActive", void 0);
    (0, _defineProperty2["default"])(this, "deckEffect", void 0);
    (0, _defineProperty2["default"])(this, "_uiConfig", void 0);
    this.id = props.id || "e_".concat((0, _utils.generateHashId)(6));

    var _props = this.getDefaultProps(props);

    this.type = _props.type;
    this.isEnabled = _props.isEnabled;
    this.isConfigActive = _props.isConfigActive;
    this.isJsonEditorActive = _props.isJsonEditorActive;
    this._uiConfig = _constants.LIGHT_AND_SHADOW_EFFECT.type === this.type ? _constants.LIGHT_AND_SHADOW_EFFECT.parameters : ((_POSTPROCESSING_EFFEC = _constants.POSTPROCESSING_EFFECTS[this.type]) === null || _POSTPROCESSING_EFFEC === void 0 ? void 0 : _POSTPROCESSING_EFFEC.parameters) || [];
    this.parameters = (0, _utils.validateEffectParameters)(_props.parameters, this._uiConfig);
    this.deckEffect = null;

    this._initializeEffect();
  }

  (0, _createClass2["default"])(Effect, [{
    key: "_initializeEffect",
    value: function _initializeEffect() {// implemented in subclasses
    }
  }, {
    key: "getDefaultProps",
    value: function getDefaultProps() {
      var _props$isEnabled, _props$isConfigActive, _props$isJsonEditorAc;

      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return {
        id: props.id || "e_".concat((0, _utils.generateHashId)(6)),
        type: props.type || _constants.DEFAULT_POST_PROCESSING_EFFECT_TYPE,
        isEnabled: (_props$isEnabled = props.isEnabled) !== null && _props$isEnabled !== void 0 ? _props$isEnabled : true,
        isConfigActive: (_props$isConfigActive = props.isConfigActive) !== null && _props$isConfigActive !== void 0 ? _props$isConfigActive : true,
        isJsonEditorActive: (_props$isJsonEditorAc = props.isJsonEditorActive) !== null && _props$isJsonEditorAc !== void 0 ? _props$isJsonEditorAc : false,
        parameters: _objectSpread({}, props.parameters)
      };
    }
  }, {
    key: "setProps",
    value: function setProps(props) {
      var _props$id, _props$type, _props$isEnabled2, _props$isConfigActive2, _props$isJsonEditorAc2;

      this.id = (_props$id = props.id) !== null && _props$id !== void 0 ? _props$id : this.id;
      this.type = (_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : this.type;
      this.isEnabled = (_props$isEnabled2 = props.isEnabled) !== null && _props$isEnabled2 !== void 0 ? _props$isEnabled2 : this.isEnabled;
      this.isConfigActive = (_props$isConfigActive2 = props.isConfigActive) !== null && _props$isConfigActive2 !== void 0 ? _props$isConfigActive2 : this.isConfigActive;
      this.isJsonEditorActive = (_props$isJsonEditorAc2 = props.isJsonEditorActive) !== null && _props$isJsonEditorAc2 !== void 0 ? _props$isJsonEditorAc2 : this.isJsonEditorActive;
      this.parameters = _objectSpread(_objectSpread({}, this.parameters), (0, _utils.validateEffectParameters)(props.parameters, this._uiConfig));
    }
  }, {
    key: "isValidToSave",
    value: function isValidToSave() {
      return Boolean(this.type && this.id && this.deckEffect);
    }
    /**
     * Effect specific list of configurable parameters.
     * @returns All parameters are in preffered order.
     */

  }, {
    key: "getParameterDescriptions",
    value: function getParameterDescriptions() {
      return this._uiConfig || [];
    }
  }]);
  return Effect;
}();

exports.Effect = Effect;
var _default = Effect;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lZmZlY3QudHMiXSwibmFtZXMiOlsiRWZmZWN0IiwicHJvcHMiLCJpZCIsIl9wcm9wcyIsImdldERlZmF1bHRQcm9wcyIsInR5cGUiLCJpc0VuYWJsZWQiLCJpc0NvbmZpZ0FjdGl2ZSIsImlzSnNvbkVkaXRvckFjdGl2ZSIsIl91aUNvbmZpZyIsIkxJR0hUX0FORF9TSEFET1dfRUZGRUNUIiwicGFyYW1ldGVycyIsImRlY2tFZmZlY3QiLCJfaW5pdGlhbGl6ZUVmZmVjdCIsIkRFRkFVTFRfUE9TVF9QUk9DRVNTSU5HX0VGRkVDVF9UWVBFIiwiQm9vbGVhbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBR0E7O0FBT0E7Ozs7OztJQU1hQSxNO0FBSVg7QUFFQTtBQU1BLG9CQUE0QztBQUFBOztBQUFBLFFBQWhDQyxLQUFnQyx1RUFBSixFQUFJO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQzFDLFNBQUtDLEVBQUwsR0FBVUQsS0FBSyxDQUFDQyxFQUFOLGdCQUFpQiwyQkFBZSxDQUFmLENBQWpCLENBQVY7O0FBRUEsUUFBTUMsTUFBTSxHQUFHLEtBQUtDLGVBQUwsQ0FBcUJILEtBQXJCLENBQWY7O0FBQ0EsU0FBS0ksSUFBTCxHQUFZRixNQUFNLENBQUNFLElBQW5CO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQkgsTUFBTSxDQUFDRyxTQUF4QjtBQUNBLFNBQUtDLGNBQUwsR0FBc0JKLE1BQU0sQ0FBQ0ksY0FBN0I7QUFDQSxTQUFLQyxrQkFBTCxHQUEwQkwsTUFBTSxDQUFDSyxrQkFBakM7QUFFQSxTQUFLQyxTQUFMLEdBQ0VDLG1DQUF3QkwsSUFBeEIsS0FBaUMsS0FBS0EsSUFBdEMsR0FDSUssbUNBQXdCQyxVQUQ1QixHQUVJLDREQUF1QixLQUFLTixJQUE1QixpRkFBbUNNLFVBQW5DLEtBQWlELEVBSHZEO0FBSUEsU0FBS0EsVUFBTCxHQUFrQixxQ0FBeUJSLE1BQU0sQ0FBQ1EsVUFBaEMsRUFBNEMsS0FBS0YsU0FBakQsQ0FBbEI7QUFFQSxTQUFLRyxVQUFMLEdBQWtCLElBQWxCOztBQUNBLFNBQUtDLGlCQUFMO0FBQ0Q7Ozs7V0FFRCw2QkFBb0IsQ0FDbEI7QUFDRDs7O1dBRUQsMkJBQTZEO0FBQUE7O0FBQUEsVUFBN0NaLEtBQTZDLHVFQUFqQixFQUFpQjtBQUMzRCxhQUFPO0FBQ0xDLFFBQUFBLEVBQUUsRUFBRUQsS0FBSyxDQUFDQyxFQUFOLGdCQUFpQiwyQkFBZSxDQUFmLENBQWpCLENBREM7QUFFTEcsUUFBQUEsSUFBSSxFQUFFSixLQUFLLENBQUNJLElBQU4sSUFBY1MsOENBRmY7QUFHTFIsUUFBQUEsU0FBUyxzQkFBRUwsS0FBSyxDQUFDSyxTQUFSLCtEQUFxQixJQUh6QjtBQUlMQyxRQUFBQSxjQUFjLDJCQUFFTixLQUFLLENBQUNNLGNBQVIseUVBQTBCLElBSm5DO0FBS0xDLFFBQUFBLGtCQUFrQiwyQkFBRVAsS0FBSyxDQUFDTyxrQkFBUix5RUFBOEIsS0FMM0M7QUFNTEcsUUFBQUEsVUFBVSxvQkFBTVYsS0FBSyxDQUFDVSxVQUFaO0FBTkwsT0FBUDtBQVFEOzs7V0FFRCxrQkFBU1YsS0FBVCxFQUFvQztBQUFBOztBQUNsQyxXQUFLQyxFQUFMLGdCQUFVRCxLQUFLLENBQUNDLEVBQWhCLGlEQUFzQixLQUFLQSxFQUEzQjtBQUNBLFdBQUtHLElBQUwsa0JBQVlKLEtBQUssQ0FBQ0ksSUFBbEIscURBQTBCLEtBQUtBLElBQS9CO0FBQ0EsV0FBS0MsU0FBTCx3QkFBaUJMLEtBQUssQ0FBQ0ssU0FBdkIsaUVBQW9DLEtBQUtBLFNBQXpDO0FBQ0EsV0FBS0MsY0FBTCw2QkFBc0JOLEtBQUssQ0FBQ00sY0FBNUIsMkVBQThDLEtBQUtBLGNBQW5EO0FBQ0EsV0FBS0Msa0JBQUwsNkJBQTBCUCxLQUFLLENBQUNPLGtCQUFoQywyRUFBc0QsS0FBS0Esa0JBQTNEO0FBQ0EsV0FBS0csVUFBTCxtQ0FDSyxLQUFLQSxVQURWLEdBRUsscUNBQXlCVixLQUFLLENBQUNVLFVBQS9CLEVBQTJDLEtBQUtGLFNBQWhELENBRkw7QUFJRDs7O1dBRUQseUJBQWdCO0FBQ2QsYUFBT00sT0FBTyxDQUFDLEtBQUtWLElBQUwsSUFBYSxLQUFLSCxFQUFsQixJQUF3QixLQUFLVSxVQUE5QixDQUFkO0FBQ0Q7QUFFRDtBQUNGO0FBQ0E7QUFDQTs7OztXQUNFLG9DQUEyQjtBQUN6QixhQUFPLEtBQUtILFNBQUwsSUFBa0IsRUFBekI7QUFDRDs7Ozs7O2VBR1lULE0iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQge2dlbmVyYXRlSGFzaElkLCB2YWxpZGF0ZUVmZmVjdFBhcmFtZXRlcnN9IGZyb20gJ0BrZXBsZXIuZ2wvdXRpbHMnO1xuaW1wb3J0IHtcbiAgRWZmZWN0IGFzIEVmZmVjdEludGVyZmFjZSxcbiAgRWZmZWN0UHJvcHMsXG4gIEVmZmVjdFByb3BzUGFydGlhbCxcbiAgRWZmZWN0UGFyYW1ldGVyRGVzY3JpcHRpb25cbn0gZnJvbSAnQGtlcGxlci5nbC90eXBlcyc7XG5pbXBvcnQge1xuICBERUZBVUxUX1BPU1RfUFJPQ0VTU0lOR19FRkZFQ1RfVFlQRSxcbiAgUE9TVFBST0NFU1NJTkdfRUZGRUNUUyxcbiAgTElHSFRfQU5EX1NIQURPV19FRkZFQ1Rcbn0gZnJvbSAnQGtlcGxlci5nbC9jb25zdGFudHMnO1xuXG5leHBvcnQgY2xhc3MgRWZmZWN0IGltcGxlbWVudHMgRWZmZWN0SW50ZXJmYWNlIHtcbiAgaWQ6IHN0cmluZztcbiAgdHlwZTogc3RyaW5nO1xuICBpc0VuYWJsZWQ6IGJvb2xlYW47XG4gIC8vIGVmZmVjdCBzcGVjaWZpYyBwYXJhbWV0ZXJzIGZvciBhIGRlY2suZ2wgZWZmZWN0ICh1bmlmb3JtcylcbiAgcGFyYW1ldGVyczoge1trZXk6IHN0cmluZ106IGFueX07XG4gIC8vIHJ1bnRpbWUgcHJvcHNcbiAgaXNDb25maWdBY3RpdmU6IGJvb2xlYW47XG4gIGlzSnNvbkVkaXRvckFjdGl2ZTogYm9vbGVhbjtcbiAgZGVja0VmZmVjdDogYW55O1xuICBfdWlDb25maWc6IEVmZmVjdFBhcmFtZXRlckRlc2NyaXB0aW9uW107XG5cbiAgY29uc3RydWN0b3IocHJvcHM6IEVmZmVjdFByb3BzUGFydGlhbCA9IHt9KSB7XG4gICAgdGhpcy5pZCA9IHByb3BzLmlkIHx8IGBlXyR7Z2VuZXJhdGVIYXNoSWQoNil9YDtcblxuICAgIGNvbnN0IF9wcm9wcyA9IHRoaXMuZ2V0RGVmYXVsdFByb3BzKHByb3BzKTtcbiAgICB0aGlzLnR5cGUgPSBfcHJvcHMudHlwZTtcbiAgICB0aGlzLmlzRW5hYmxlZCA9IF9wcm9wcy5pc0VuYWJsZWQ7XG4gICAgdGhpcy5pc0NvbmZpZ0FjdGl2ZSA9IF9wcm9wcy5pc0NvbmZpZ0FjdGl2ZTtcbiAgICB0aGlzLmlzSnNvbkVkaXRvckFjdGl2ZSA9IF9wcm9wcy5pc0pzb25FZGl0b3JBY3RpdmU7XG5cbiAgICB0aGlzLl91aUNvbmZpZyA9XG4gICAgICBMSUdIVF9BTkRfU0hBRE9XX0VGRkVDVC50eXBlID09PSB0aGlzLnR5cGVcbiAgICAgICAgPyBMSUdIVF9BTkRfU0hBRE9XX0VGRkVDVC5wYXJhbWV0ZXJzXG4gICAgICAgIDogUE9TVFBST0NFU1NJTkdfRUZGRUNUU1t0aGlzLnR5cGVdPy5wYXJhbWV0ZXJzIHx8IFtdO1xuICAgIHRoaXMucGFyYW1ldGVycyA9IHZhbGlkYXRlRWZmZWN0UGFyYW1ldGVycyhfcHJvcHMucGFyYW1ldGVycywgdGhpcy5fdWlDb25maWcpO1xuXG4gICAgdGhpcy5kZWNrRWZmZWN0ID0gbnVsbDtcbiAgICB0aGlzLl9pbml0aWFsaXplRWZmZWN0KCk7XG4gIH1cblxuICBfaW5pdGlhbGl6ZUVmZmVjdCgpIHtcbiAgICAvLyBpbXBsZW1lbnRlZCBpbiBzdWJjbGFzc2VzXG4gIH1cblxuICBnZXREZWZhdWx0UHJvcHMocHJvcHM6IEVmZmVjdFByb3BzUGFydGlhbCA9IHt9KTogRWZmZWN0UHJvcHMge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogcHJvcHMuaWQgfHwgYGVfJHtnZW5lcmF0ZUhhc2hJZCg2KX1gLFxuICAgICAgdHlwZTogcHJvcHMudHlwZSB8fCBERUZBVUxUX1BPU1RfUFJPQ0VTU0lOR19FRkZFQ1RfVFlQRSxcbiAgICAgIGlzRW5hYmxlZDogcHJvcHMuaXNFbmFibGVkID8/IHRydWUsXG4gICAgICBpc0NvbmZpZ0FjdGl2ZTogcHJvcHMuaXNDb25maWdBY3RpdmUgPz8gdHJ1ZSxcbiAgICAgIGlzSnNvbkVkaXRvckFjdGl2ZTogcHJvcHMuaXNKc29uRWRpdG9yQWN0aXZlID8/IGZhbHNlLFxuICAgICAgcGFyYW1ldGVyczogey4uLnByb3BzLnBhcmFtZXRlcnN9XG4gICAgfTtcbiAgfVxuXG4gIHNldFByb3BzKHByb3BzOiBFZmZlY3RQcm9wc1BhcnRpYWwpIHtcbiAgICB0aGlzLmlkID0gcHJvcHMuaWQgPz8gdGhpcy5pZDtcbiAgICB0aGlzLnR5cGUgPSBwcm9wcy50eXBlID8/IHRoaXMudHlwZTtcbiAgICB0aGlzLmlzRW5hYmxlZCA9IHByb3BzLmlzRW5hYmxlZCA/PyB0aGlzLmlzRW5hYmxlZDtcbiAgICB0aGlzLmlzQ29uZmlnQWN0aXZlID0gcHJvcHMuaXNDb25maWdBY3RpdmUgPz8gdGhpcy5pc0NvbmZpZ0FjdGl2ZTtcbiAgICB0aGlzLmlzSnNvbkVkaXRvckFjdGl2ZSA9IHByb3BzLmlzSnNvbkVkaXRvckFjdGl2ZSA/PyB0aGlzLmlzSnNvbkVkaXRvckFjdGl2ZTtcbiAgICB0aGlzLnBhcmFtZXRlcnMgPSB7XG4gICAgICAuLi50aGlzLnBhcmFtZXRlcnMsXG4gICAgICAuLi52YWxpZGF0ZUVmZmVjdFBhcmFtZXRlcnMocHJvcHMucGFyYW1ldGVycywgdGhpcy5fdWlDb25maWcpXG4gICAgfTtcbiAgfVxuXG4gIGlzVmFsaWRUb1NhdmUoKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odGhpcy50eXBlICYmIHRoaXMuaWQgJiYgdGhpcy5kZWNrRWZmZWN0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFZmZlY3Qgc3BlY2lmaWMgbGlzdCBvZiBjb25maWd1cmFibGUgcGFyYW1ldGVycy5cbiAgICogQHJldHVybnMgQWxsIHBhcmFtZXRlcnMgYXJlIGluIHByZWZmZXJlZCBvcmRlci5cbiAgICovXG4gIGdldFBhcmFtZXRlckRlc2NyaXB0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5fdWlDb25maWcgfHwgW107XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRWZmZWN0O1xuIl19