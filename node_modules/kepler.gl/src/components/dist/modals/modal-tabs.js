"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.ModalTabItem = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styles = require("@kepler.gl/styles");

var _reactIntl = require("react-intl");

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

var ModalTab = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  align-items: flex-end;\n  display: flex;\n  border-bottom: 1px solid #d8d8d8;\n  margin-bottom: 32px;\n  justify-content: space-between;\n\n  .load-data-modal__tab__inner {\n    display: flex;\n    width: 100%;\n  }\n\n  .load-data-modal__tab__item.active {\n    color: ", ";\n    border-bottom: 3px solid ", ";\n    font-weight: 500;\n  }\n\n  ", ";\n"])), function (props) {
  return props.theme.textColorLT;
}, function (props) {
  return props.theme.textColorLT;
}, _styles.media.portable(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n    font-size: 12px;\n  "]))));

var StyledLoadDataModalTabItem = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  border-bottom: 3px solid transparent;\n  cursor: pointer;\n  margin-left: 32px;\n  padding: 16px 0;\n  font-size: 14px;\n  font-weight: 400;\n  color: ", ";\n\n  ", ";\n\n  :first-child {\n    margin-left: 0;\n    padding-left: 0;\n  }\n\n  :hover {\n    color: ", ";\n  }\n"])), function (props) {
  return props.theme.subtextColorLT;
}, _styles.media.portable(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2["default"])(["\n    margin-left: 16px;\n    font-size: 12px;\n  "]))), function (props) {
  return props.theme.textColorLT;
});

var noop = function noop() {};

var ModalTabItem = function ModalTabItem(_ref) {
  var currentMethod = _ref.currentMethod,
      method = _ref.method,
      toggleMethod = _ref.toggleMethod;
  var onClick = (0, _react.useCallback)(function () {
    return toggleMethod(method);
  }, [method, toggleMethod]);
  var intl = (0, _reactIntl.useIntl)();
  return method.tabElementType ? /*#__PURE__*/_react["default"].createElement(method.tabElementType, {
    onClick: onClick,
    intl: intl
  }) : /*#__PURE__*/_react["default"].createElement(StyledLoadDataModalTabItem, {
    className: (0, _classnames["default"])('load-data-modal__tab__item', {
      active: currentMethod && method.id === currentMethod
    }),
    onClick: onClick
  }, /*#__PURE__*/_react["default"].createElement("div", null, method.label ? /*#__PURE__*/_react["default"].createElement(_reactIntl.FormattedMessage, {
    id: method.label
  }) : method.id));
};

exports.ModalTabItem = ModalTabItem;

function ModalTabsFactory() {
  var ModalTabs = function ModalTabs(_ref2) {
    var currentMethod = _ref2.currentMethod,
        toggleMethod = _ref2.toggleMethod,
        loadingMethods = _ref2.loadingMethods;
    return /*#__PURE__*/_react["default"].createElement(ModalTab, {
      className: "load-data-modal__tab"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "load-data-modal__tab__inner"
    }, loadingMethods.map(function (method) {
      return /*#__PURE__*/_react["default"].createElement(ModalTabItem, {
        key: method.id,
        method: method,
        currentMethod: currentMethod,
        toggleMethod: toggleMethod
      });
    })));
  };

  ModalTabs.propTypes = {
    toggleMethod: _propTypes["default"].func.isRequired,
    currentMethod: _propTypes["default"].string,
    loadingMethods: _propTypes["default"].arrayOf(_propTypes["default"].object)
  };
  ModalTabs.defaultProps = {
    toggleMethod: noop,
    currentMethod: null,
    loadingMethods: []
  };
  return ModalTabs;
}

var _default = ModalTabsFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RhbHMvbW9kYWwtdGFicy50c3giXSwibmFtZXMiOlsiTW9kYWxUYWIiLCJzdHlsZWQiLCJkaXYiLCJwcm9wcyIsInRoZW1lIiwidGV4dENvbG9yTFQiLCJtZWRpYSIsInBvcnRhYmxlIiwiU3R5bGVkTG9hZERhdGFNb2RhbFRhYkl0ZW0iLCJzdWJ0ZXh0Q29sb3JMVCIsIm5vb3AiLCJNb2RhbFRhYkl0ZW0iLCJjdXJyZW50TWV0aG9kIiwibWV0aG9kIiwidG9nZ2xlTWV0aG9kIiwib25DbGljayIsImludGwiLCJ0YWJFbGVtZW50VHlwZSIsImFjdGl2ZSIsImlkIiwibGFiZWwiLCJNb2RhbFRhYnNGYWN0b3J5IiwiTW9kYWxUYWJzIiwibG9hZGluZ01ldGhvZHMiLCJtYXAiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJmdW5jIiwiaXNSZXF1aXJlZCIsInN0cmluZyIsImFycmF5T2YiLCJvYmplY3QiLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBLElBQU1BLFFBQVEsR0FBR0MsNkJBQU9DLEdBQVYsMmJBYUQsVUFBQUMsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZQyxXQUFoQjtBQUFBLENBYkosRUFjaUIsVUFBQUYsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZQyxXQUFoQjtBQUFBLENBZHRCLEVBa0JWQyxjQUFNQyxRQWxCSSxtSEFBZDs7QUF1QkEsSUFBTUMsMEJBQTBCLEdBQUdQLDZCQUFPQyxHQUFWLCtXQU9yQixVQUFBQyxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxLQUFOLENBQVlLLGNBQWhCO0FBQUEsQ0FQZ0IsRUFTNUJILGNBQU1DLFFBVHNCLDRJQW9CbkIsVUFBQUosS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZQyxXQUFoQjtBQUFBLENBcEJjLENBQWhDOztBQXdCQSxJQUFNSyxJQUFJLEdBQUcsU0FBUEEsSUFBTyxHQUFNLENBQUUsQ0FBckI7O0FBUU8sSUFBTUMsWUFBeUMsR0FBRyxTQUE1Q0EsWUFBNEMsT0FJbkQ7QUFBQSxNQUhKQyxhQUdJLFFBSEpBLGFBR0k7QUFBQSxNQUZKQyxNQUVJLFFBRkpBLE1BRUk7QUFBQSxNQURKQyxZQUNJLFFBREpBLFlBQ0k7QUFDSixNQUFNQyxPQUFPLEdBQUcsd0JBQVk7QUFBQSxXQUFNRCxZQUFZLENBQUNELE1BQUQsQ0FBbEI7QUFBQSxHQUFaLEVBQXdDLENBQUNBLE1BQUQsRUFBU0MsWUFBVCxDQUF4QyxDQUFoQjtBQUNBLE1BQU1FLElBQUksR0FBRyx5QkFBYjtBQUVBLFNBQU9ILE1BQU0sQ0FBQ0ksY0FBUCxnQkFDTCxnQ0FBQyxNQUFELENBQVEsY0FBUjtBQUF1QixJQUFBLE9BQU8sRUFBRUYsT0FBaEM7QUFBeUMsSUFBQSxJQUFJLEVBQUVDO0FBQS9DLElBREssZ0JBR0wsZ0NBQUMsMEJBQUQ7QUFDRSxJQUFBLFNBQVMsRUFBRSw0QkFBVyw0QkFBWCxFQUF5QztBQUNsREUsTUFBQUEsTUFBTSxFQUFFTixhQUFhLElBQUlDLE1BQU0sQ0FBQ00sRUFBUCxLQUFjUDtBQURXLEtBQXpDLENBRGI7QUFJRSxJQUFBLE9BQU8sRUFBRUc7QUFKWCxrQkFNRSw2Q0FBTUYsTUFBTSxDQUFDTyxLQUFQLGdCQUFlLGdDQUFDLDJCQUFEO0FBQWtCLElBQUEsRUFBRSxFQUFFUCxNQUFNLENBQUNPO0FBQTdCLElBQWYsR0FBd0RQLE1BQU0sQ0FBQ00sRUFBckUsQ0FORixDQUhGO0FBWUQsQ0FwQk07Ozs7QUFzQlAsU0FBU0UsZ0JBQVQsR0FBNEI7QUFDMUIsTUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVk7QUFBQSxRQUFFVixhQUFGLFNBQUVBLGFBQUY7QUFBQSxRQUFpQkUsWUFBakIsU0FBaUJBLFlBQWpCO0FBQUEsUUFBK0JTLGNBQS9CLFNBQStCQSxjQUEvQjtBQUFBLHdCQUNoQixnQ0FBQyxRQUFEO0FBQVUsTUFBQSxTQUFTLEVBQUM7QUFBcEIsb0JBQ0U7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLE9BQ0dBLGNBQWMsQ0FBQ0MsR0FBZixDQUFtQixVQUFBWCxNQUFNO0FBQUEsMEJBQ3hCLGdDQUFDLFlBQUQ7QUFDRSxRQUFBLEdBQUcsRUFBRUEsTUFBTSxDQUFDTSxFQURkO0FBRUUsUUFBQSxNQUFNLEVBQUVOLE1BRlY7QUFHRSxRQUFBLGFBQWEsRUFBRUQsYUFIakI7QUFJRSxRQUFBLFlBQVksRUFBRUU7QUFKaEIsUUFEd0I7QUFBQSxLQUF6QixDQURILENBREYsQ0FEZ0I7QUFBQSxHQUFsQjs7QUFlQVEsRUFBQUEsU0FBUyxDQUFDRyxTQUFWLEdBQXNCO0FBQ3BCWCxJQUFBQSxZQUFZLEVBQUVZLHNCQUFVQyxJQUFWLENBQWVDLFVBRFQ7QUFFcEJoQixJQUFBQSxhQUFhLEVBQUVjLHNCQUFVRyxNQUZMO0FBR3BCTixJQUFBQSxjQUFjLEVBQUVHLHNCQUFVSSxPQUFWLENBQWtCSixzQkFBVUssTUFBNUI7QUFISSxHQUF0QjtBQU1BVCxFQUFBQSxTQUFTLENBQUNVLFlBQVYsR0FBeUI7QUFDdkJsQixJQUFBQSxZQUFZLEVBQUVKLElBRFM7QUFFdkJFLElBQUFBLGFBQWEsRUFBRSxJQUZRO0FBR3ZCVyxJQUFBQSxjQUFjLEVBQUU7QUFITyxHQUF6QjtBQU1BLFNBQU9ELFNBQVA7QUFDRDs7ZUFFY0QsZ0IiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QsIHt1c2VDYWxsYmFja30gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQge21lZGlhfSBmcm9tICdAa2VwbGVyLmdsL3N0eWxlcyc7XG5pbXBvcnQge0Zvcm1hdHRlZE1lc3NhZ2UsIHVzZUludGx9IGZyb20gJ3JlYWN0LWludGwnO1xuaW1wb3J0IHtMb2FkaW5nTWV0aG9kfSBmcm9tICcuL2xvYWQtZGF0YS1tb2RhbCc7XG5cbmNvbnN0IE1vZGFsVGFiID0gc3R5bGVkLmRpdmBcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBkaXNwbGF5OiBmbGV4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2Q4ZDhkODtcbiAgbWFyZ2luLWJvdHRvbTogMzJweDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG4gIC5sb2FkLWRhdGEtbW9kYWxfX3RhYl9faW5uZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAubG9hZC1kYXRhLW1vZGFsX190YWJfX2l0ZW0uYWN0aXZlIHtcbiAgICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS50ZXh0Q29sb3JMVH07XG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICR7cHJvcHMgPT4gcHJvcHMudGhlbWUudGV4dENvbG9yTFR9O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cblxuICAke21lZGlhLnBvcnRhYmxlYFxuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgYH07XG5gO1xuXG5jb25zdCBTdHlsZWRMb2FkRGF0YU1vZGFsVGFiSXRlbSA9IHN0eWxlZC5kaXZgXG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBtYXJnaW4tbGVmdDogMzJweDtcbiAgcGFkZGluZzogMTZweCAwO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnN1YnRleHRDb2xvckxUfTtcblxuICAke21lZGlhLnBvcnRhYmxlYFxuICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgYH07XG5cbiAgOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gIH1cblxuICA6aG92ZXIge1xuICAgIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLnRleHRDb2xvckxUfTtcbiAgfVxuYDtcblxuY29uc3Qgbm9vcCA9ICgpID0+IHt9O1xuXG5pbnRlcmZhY2UgTW9kYWxUYWJJdGVtUHJvcHMge1xuICBjdXJyZW50TWV0aG9kPzogc3RyaW5nO1xuICBtZXRob2Q6IExvYWRpbmdNZXRob2Q7XG4gIHRvZ2dsZU1ldGhvZDogKG1ldGhvZDogTG9hZGluZ01ldGhvZCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNvbnN0IE1vZGFsVGFiSXRlbTogUmVhY3QuRkM8TW9kYWxUYWJJdGVtUHJvcHM+ID0gKHtcbiAgY3VycmVudE1ldGhvZCxcbiAgbWV0aG9kLFxuICB0b2dnbGVNZXRob2Rcbn0pID0+IHtcbiAgY29uc3Qgb25DbGljayA9IHVzZUNhbGxiYWNrKCgpID0+IHRvZ2dsZU1ldGhvZChtZXRob2QpLCBbbWV0aG9kLCB0b2dnbGVNZXRob2RdKTtcbiAgY29uc3QgaW50bCA9IHVzZUludGwoKTtcblxuICByZXR1cm4gbWV0aG9kLnRhYkVsZW1lbnRUeXBlID8gKFxuICAgIDxtZXRob2QudGFiRWxlbWVudFR5cGUgb25DbGljaz17b25DbGlja30gaW50bD17aW50bH0gLz5cbiAgKSA6IChcbiAgICA8U3R5bGVkTG9hZERhdGFNb2RhbFRhYkl0ZW1cbiAgICAgIGNsYXNzTmFtZT17Y2xhc3NuYW1lcygnbG9hZC1kYXRhLW1vZGFsX190YWJfX2l0ZW0nLCB7XG4gICAgICAgIGFjdGl2ZTogY3VycmVudE1ldGhvZCAmJiBtZXRob2QuaWQgPT09IGN1cnJlbnRNZXRob2RcbiAgICAgIH0pfVxuICAgICAgb25DbGljaz17b25DbGlja31cbiAgICA+XG4gICAgICA8ZGl2PnttZXRob2QubGFiZWwgPyA8Rm9ybWF0dGVkTWVzc2FnZSBpZD17bWV0aG9kLmxhYmVsfSAvPiA6IG1ldGhvZC5pZH08L2Rpdj5cbiAgICA8L1N0eWxlZExvYWREYXRhTW9kYWxUYWJJdGVtPlxuICApO1xufTtcblxuZnVuY3Rpb24gTW9kYWxUYWJzRmFjdG9yeSgpIHtcbiAgY29uc3QgTW9kYWxUYWJzID0gKHtjdXJyZW50TWV0aG9kLCB0b2dnbGVNZXRob2QsIGxvYWRpbmdNZXRob2RzfSkgPT4gKFxuICAgIDxNb2RhbFRhYiBjbGFzc05hbWU9XCJsb2FkLWRhdGEtbW9kYWxfX3RhYlwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJsb2FkLWRhdGEtbW9kYWxfX3RhYl9faW5uZXJcIj5cbiAgICAgICAge2xvYWRpbmdNZXRob2RzLm1hcChtZXRob2QgPT4gKFxuICAgICAgICAgIDxNb2RhbFRhYkl0ZW1cbiAgICAgICAgICAgIGtleT17bWV0aG9kLmlkfVxuICAgICAgICAgICAgbWV0aG9kPXttZXRob2R9XG4gICAgICAgICAgICBjdXJyZW50TWV0aG9kPXtjdXJyZW50TWV0aG9kfVxuICAgICAgICAgICAgdG9nZ2xlTWV0aG9kPXt0b2dnbGVNZXRob2R9XG4gICAgICAgICAgLz5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICA8L01vZGFsVGFiPlxuICApO1xuXG4gIE1vZGFsVGFicy5wcm9wVHlwZXMgPSB7XG4gICAgdG9nZ2xlTWV0aG9kOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIGN1cnJlbnRNZXRob2Q6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgbG9hZGluZ01ldGhvZHM6IFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5vYmplY3QpXG4gIH07XG5cbiAgTW9kYWxUYWJzLmRlZmF1bHRQcm9wcyA9IHtcbiAgICB0b2dnbGVNZXRob2Q6IG5vb3AsXG4gICAgY3VycmVudE1ldGhvZDogbnVsbCxcbiAgICBsb2FkaW5nTWV0aG9kczogW11cbiAgfTtcblxuICByZXR1cm4gTW9kYWxUYWJzO1xufVxuXG5leHBvcnQgZGVmYXVsdCBNb2RhbFRhYnNGYWN0b3J5O1xuIl19