{"version":3,"file":"base-table-batch-aggregator.js","names":["DEFAULT_ROW_COUNT","BaseTableBatchAggregator","constructor","schema","options","shape","length","rows","cursor","_headers","Array","isArray","key","index","name","rowCount","addArrayRow","row","Number","isFinite","addObjectRow","getBatch","slice","batch","batchType","data"],"sources":["../../../../src/lib/table/batches/base-table-batch-aggregator.ts"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Schema} from '../../../types/schema';\nimport type {TableBatch} from '../../../types/category-table';\nimport {TableBatchAggregator, TableBatchOptions} from './table-batch-aggregator';\n\nconst DEFAULT_ROW_COUNT = 100;\n\nexport class BaseTableBatchAggregator implements TableBatchAggregator {\n  schema: Schema;\n  options: TableBatchOptions;\n\n  shape?: 'array-row-table' | 'object-row-table';\n  length: number = 0;\n  rows: any[] | null = null;\n  cursor: number = 0;\n  private _headers: string[] = [];\n\n  constructor(schema: Schema, options: TableBatchOptions) {\n    this.options = options;\n    this.schema = schema;\n\n    // schema is an array if there're no headers\n    // object if there are headers\n    if (!Array.isArray(schema)) {\n      this._headers = [];\n      for (const key in schema) {\n        this._headers[schema[key].index] = schema[key].name;\n      }\n    }\n  }\n\n  rowCount(): number {\n    return this.length;\n  }\n\n  addArrayRow(row: any[], cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.shape = 'array-row-table';\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  addObjectRow(row: {[columnName: string]: any}, cursor?: number): void {\n    if (Number.isFinite(cursor)) {\n      this.cursor = cursor as number;\n    }\n\n    this.shape = 'object-row-table';\n\n    this.rows = this.rows || new Array(DEFAULT_ROW_COUNT);\n    this.rows[this.length] = row;\n    this.length++;\n  }\n\n  getBatch(): TableBatch | null {\n    let rows = this.rows;\n    if (!rows) {\n      return null;\n    }\n\n    rows = rows.slice(0, this.length);\n    this.rows = null;\n\n    const batch: TableBatch = {\n      shape: this.shape || 'array-row-table',\n      batchType: 'data',\n      data: rows,\n      length: this.length,\n      schema: this.schema,\n      cursor: this.cursor\n    };\n\n    return batch;\n  }\n}\n"],"mappings":"AAQA,MAAMA,iBAAiB,GAAG,GAAG;AAE7B,OAAO,MAAMC,wBAAwB,CAAiC;EAUpEC,WAAWA,CAACC,MAAc,EAAEC,OAA0B,EAAE;IAAA,KATxDD,MAAM;IAAA,KACNC,OAAO;IAAA,KAEPC,KAAK;IAAA,KACLC,MAAM,GAAW,CAAC;IAAA,KAClBC,IAAI,GAAiB,IAAI;IAAA,KACzBC,MAAM,GAAW,CAAC;IAAA,KACVC,QAAQ,GAAa,EAAE;IAG7B,IAAI,CAACL,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACD,MAAM,GAAGA,MAAM;IAIpB,IAAI,CAACO,KAAK,CAACC,OAAO,CAACR,MAAM,CAAC,EAAE;MAC1B,IAAI,CAACM,QAAQ,GAAG,EAAE;MAClB,KAAK,MAAMG,GAAG,IAAIT,MAAM,EAAE;QACxB,IAAI,CAACM,QAAQ,CAACN,MAAM,CAACS,GAAG,CAAC,CAACC,KAAK,CAAC,GAAGV,MAAM,CAACS,GAAG,CAAC,CAACE,IAAI;MACrD;IACF;EACF;EAEAC,QAAQA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACT,MAAM;EACpB;EAEAU,WAAWA,CAACC,GAAU,EAAET,MAAe,EAAQ;IAC7C,IAAIU,MAAM,CAACC,QAAQ,CAACX,MAAM,CAAC,EAAE;MAC3B,IAAI,CAACA,MAAM,GAAGA,MAAgB;IAChC;IAEA,IAAI,CAACH,KAAK,GAAG,iBAAiB;IAE9B,IAAI,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,IAAIG,KAAK,CAACV,iBAAiB,CAAC;IACrD,IAAI,CAACO,IAAI,CAAC,IAAI,CAACD,MAAM,CAAC,GAAGW,GAAG;IAC5B,IAAI,CAACX,MAAM,EAAE;EACf;EAEAc,YAAYA,CAACH,GAAgC,EAAET,MAAe,EAAQ;IACpE,IAAIU,MAAM,CAACC,QAAQ,CAACX,MAAM,CAAC,EAAE;MAC3B,IAAI,CAACA,MAAM,GAAGA,MAAgB;IAChC;IAEA,IAAI,CAACH,KAAK,GAAG,kBAAkB;IAE/B,IAAI,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,IAAIG,KAAK,CAACV,iBAAiB,CAAC;IACrD,IAAI,CAACO,IAAI,CAAC,IAAI,CAACD,MAAM,CAAC,GAAGW,GAAG;IAC5B,IAAI,CAACX,MAAM,EAAE;EACf;EAEAe,QAAQA,CAAA,EAAsB;IAC5B,IAAId,IAAI,GAAG,IAAI,CAACA,IAAI;IACpB,IAAI,CAACA,IAAI,EAAE;MACT,OAAO,IAAI;IACb;IAEAA,IAAI,GAAGA,IAAI,CAACe,KAAK,CAAC,CAAC,EAAE,IAAI,CAAChB,MAAM,CAAC;IACjC,IAAI,CAACC,IAAI,GAAG,IAAI;IAEhB,MAAMgB,KAAiB,GAAG;MACxBlB,KAAK,EAAE,IAAI,CAACA,KAAK,IAAI,iBAAiB;MACtCmB,SAAS,EAAE,MAAM;MACjBC,IAAI,EAAElB,IAAI;MACVD,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBH,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBK,MAAM,EAAE,IAAI,CAACA;IACf,CAAC;IAED,OAAOe,KAAK;EACd;AACF"}