"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledComponents2 = require("../../common/styled-components");

var _datasetTitle = _interopRequireDefault(require("./dataset-title"));

var _datasetInfo = _interopRequireDefault(require("./dataset-info"));

var _templateObject;

var SourceDataCatalogWrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  transition: ", ";\n"])), function (props) {
  return props.theme.transition;
});

SourceDataCatalogFactory.deps = [_datasetTitle["default"], _datasetInfo["default"]];

function SourceDataCatalogFactory(DatasetTitle, DatasetInfo) {
  var SourceDataCatalog = function SourceDataCatalog(_ref) {
    var datasets = _ref.datasets,
        showDatasetTable = _ref.showDatasetTable,
        removeDataset = _ref.removeDataset,
        onTitleClick = _ref.onTitleClick,
        updateTableColor = _ref.updateTableColor,
        _ref$showDeleteDatase = _ref.showDeleteDataset,
        showDeleteDataset = _ref$showDeleteDatase === void 0 ? false : _ref$showDeleteDatase;
    return /*#__PURE__*/_react["default"].createElement(SourceDataCatalogWrapper, {
      className: "source-data-catalog"
    }, Object.values(datasets).map(function (dataset) {
      return /*#__PURE__*/_react["default"].createElement(_styledComponents2.SidePanelSection, {
        key: dataset.id
      }, /*#__PURE__*/_react["default"].createElement(DatasetTitle, {
        showDatasetTable: showDatasetTable,
        showDeleteDataset: showDeleteDataset,
        removeDataset: removeDataset,
        dataset: dataset,
        onTitleClick: onTitleClick,
        updateTableColor: updateTableColor
      }), showDatasetTable ? /*#__PURE__*/_react["default"].createElement(DatasetInfo, {
        dataset: dataset
      }) : null);
    }));
  };

  return SourceDataCatalog;
}

var _default = SourceDataCatalogFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaWRlLXBhbmVsL2NvbW1vbi9zb3VyY2UtZGF0YS1jYXRhbG9nLnRzeCJdLCJuYW1lcyI6WyJTb3VyY2VEYXRhQ2F0YWxvZ1dyYXBwZXIiLCJzdHlsZWQiLCJkaXYiLCJwcm9wcyIsInRoZW1lIiwidHJhbnNpdGlvbiIsIlNvdXJjZURhdGFDYXRhbG9nRmFjdG9yeSIsImRlcHMiLCJEYXRhc2V0VGl0bGVGYWN0b3J5IiwiRGF0YXNldEluZm9GYWN0b3J5IiwiRGF0YXNldFRpdGxlIiwiRGF0YXNldEluZm8iLCJTb3VyY2VEYXRhQ2F0YWxvZyIsImRhdGFzZXRzIiwic2hvd0RhdGFzZXRUYWJsZSIsInJlbW92ZURhdGFzZXQiLCJvblRpdGxlQ2xpY2siLCJ1cGRhdGVUYWJsZUNvbG9yIiwic2hvd0RlbGV0ZURhdGFzZXQiLCJPYmplY3QiLCJ2YWx1ZXMiLCJtYXAiLCJkYXRhc2V0IiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBTUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSx3QkFBd0IsR0FBR0MsNkJBQU9DLEdBQVYsOEdBQ2QsVUFBQUMsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsS0FBTixDQUFZQyxVQUFoQjtBQUFBLENBRFMsQ0FBOUI7O0FBd0JBQyx3QkFBd0IsQ0FBQ0MsSUFBekIsR0FBZ0MsQ0FBQ0Msd0JBQUQsRUFBc0JDLHVCQUF0QixDQUFoQzs7QUFFQSxTQUFTSCx3QkFBVCxDQUNFSSxZQURGLEVBRUVDLFdBRkYsRUFHRTtBQUNBLE1BQU1DLGlCQUFtRCxHQUFHLFNBQXREQSxpQkFBc0Q7QUFBQSxRQUMxREMsUUFEMEQsUUFDMURBLFFBRDBEO0FBQUEsUUFFMURDLGdCQUYwRCxRQUUxREEsZ0JBRjBEO0FBQUEsUUFHMURDLGFBSDBELFFBRzFEQSxhQUgwRDtBQUFBLFFBSTFEQyxZQUowRCxRQUkxREEsWUFKMEQ7QUFBQSxRQUsxREMsZ0JBTDBELFFBSzFEQSxnQkFMMEQ7QUFBQSxxQ0FNMURDLGlCQU4wRDtBQUFBLFFBTTFEQSxpQkFOMEQsc0NBTXRDLEtBTnNDO0FBQUEsd0JBUTFELGdDQUFDLHdCQUFEO0FBQTBCLE1BQUEsU0FBUyxFQUFDO0FBQXBDLE9BQ0dDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjUCxRQUFkLEVBQXdCUSxHQUF4QixDQUE0QixVQUFBQyxPQUFPO0FBQUEsMEJBQ2xDLGdDQUFDLG1DQUFEO0FBQWtCLFFBQUEsR0FBRyxFQUFFQSxPQUFPLENBQUNDO0FBQS9CLHNCQUNFLGdDQUFDLFlBQUQ7QUFDRSxRQUFBLGdCQUFnQixFQUFFVCxnQkFEcEI7QUFFRSxRQUFBLGlCQUFpQixFQUFFSSxpQkFGckI7QUFHRSxRQUFBLGFBQWEsRUFBRUgsYUFIakI7QUFJRSxRQUFBLE9BQU8sRUFBRU8sT0FKWDtBQUtFLFFBQUEsWUFBWSxFQUFFTixZQUxoQjtBQU1FLFFBQUEsZ0JBQWdCLEVBQUVDO0FBTnBCLFFBREYsRUFTR0gsZ0JBQWdCLGdCQUFHLGdDQUFDLFdBQUQ7QUFBYSxRQUFBLE9BQU8sRUFBRVE7QUFBdEIsUUFBSCxHQUF1QyxJQVQxRCxDQURrQztBQUFBLEtBQW5DLENBREgsQ0FSMEQ7QUFBQSxHQUE1RDs7QUF5QkEsU0FBT1YsaUJBQVA7QUFDRDs7ZUFFY04sd0IiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7b3BlbkRlbGV0ZU1vZGFsLCBWaXNTdGF0ZUFjdGlvbnMsIEFjdGlvbkhhbmRsZXJ9IGZyb20gJ0BrZXBsZXIuZ2wvYWN0aW9ucyc7XG5pbXBvcnQge0RhdGFDb250YWluZXJJbnRlcmZhY2V9IGZyb20gJ0BrZXBsZXIuZ2wvdXRpbHMnO1xuaW1wb3J0IHtSR0JDb2xvcn0gZnJvbSAnQGtlcGxlci5nbC90eXBlcyc7XG5cbmltcG9ydCB7U2lkZVBhbmVsU2VjdGlvbn0gZnJvbSAnLi4vLi4vY29tbW9uL3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCBEYXRhc2V0VGl0bGVGYWN0b3J5IGZyb20gJy4vZGF0YXNldC10aXRsZSc7XG5pbXBvcnQgRGF0YXNldEluZm9GYWN0b3J5IGZyb20gJy4vZGF0YXNldC1pbmZvJztcblxuY29uc3QgU291cmNlRGF0YUNhdGFsb2dXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgdHJhbnNpdGlvbjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS50cmFuc2l0aW9ufTtcbmA7XG5cbnR5cGUgTWluaURhdGFzZXQgPSB7XG4gIGlkOiBzdHJpbmc7XG4gIGNvbG9yOiBSR0JDb2xvcjtcbiAgbGFiZWw/OiBzdHJpbmc7XG4gIGRhdGFDb250YWluZXI6IERhdGFDb250YWluZXJJbnRlcmZhY2U7XG59O1xuXG50eXBlIE1pbmlEYXRhc2V0cyA9IHtcbiAgW2tleTogc3RyaW5nXTogTWluaURhdGFzZXQ7XG59O1xuXG5leHBvcnQgdHlwZSBTb3VyY2VEYXRhQ2F0YWxvZ1Byb3BzID0ge1xuICBkYXRhc2V0czogTWluaURhdGFzZXRzO1xuICBzaG93RGVsZXRlRGF0YXNldD86IGJvb2xlYW47XG4gIG9uVGl0bGVDbGljaz86ICgpID0+IHZvaWQ7XG4gIHNob3dEYXRhc2V0VGFibGU/OiBBY3Rpb25IYW5kbGVyPHR5cGVvZiBWaXNTdGF0ZUFjdGlvbnMuc2hvd0RhdGFzZXRUYWJsZT47XG4gIHVwZGF0ZVRhYmxlQ29sb3I6IEFjdGlvbkhhbmRsZXI8dHlwZW9mIFZpc1N0YXRlQWN0aW9ucy51cGRhdGVUYWJsZUNvbG9yPjtcbiAgcmVtb3ZlRGF0YXNldD86IEFjdGlvbkhhbmRsZXI8dHlwZW9mIG9wZW5EZWxldGVNb2RhbD47XG59O1xuXG5Tb3VyY2VEYXRhQ2F0YWxvZ0ZhY3RvcnkuZGVwcyA9IFtEYXRhc2V0VGl0bGVGYWN0b3J5LCBEYXRhc2V0SW5mb0ZhY3RvcnldO1xuXG5mdW5jdGlvbiBTb3VyY2VEYXRhQ2F0YWxvZ0ZhY3RvcnkoXG4gIERhdGFzZXRUaXRsZTogUmV0dXJuVHlwZTx0eXBlb2YgRGF0YXNldFRpdGxlRmFjdG9yeT4sXG4gIERhdGFzZXRJbmZvOiBSZXR1cm5UeXBlPHR5cGVvZiBEYXRhc2V0SW5mb0ZhY3Rvcnk+XG4pIHtcbiAgY29uc3QgU291cmNlRGF0YUNhdGFsb2c6IFJlYWN0LkZDPFNvdXJjZURhdGFDYXRhbG9nUHJvcHM+ID0gKHtcbiAgICBkYXRhc2V0cyxcbiAgICBzaG93RGF0YXNldFRhYmxlLFxuICAgIHJlbW92ZURhdGFzZXQsXG4gICAgb25UaXRsZUNsaWNrLFxuICAgIHVwZGF0ZVRhYmxlQ29sb3IsXG4gICAgc2hvd0RlbGV0ZURhdGFzZXQgPSBmYWxzZVxuICB9OiBTb3VyY2VEYXRhQ2F0YWxvZ1Byb3BzKSA9PiAoXG4gICAgPFNvdXJjZURhdGFDYXRhbG9nV3JhcHBlciBjbGFzc05hbWU9XCJzb3VyY2UtZGF0YS1jYXRhbG9nXCI+XG4gICAgICB7T2JqZWN0LnZhbHVlcyhkYXRhc2V0cykubWFwKGRhdGFzZXQgPT4gKFxuICAgICAgICA8U2lkZVBhbmVsU2VjdGlvbiBrZXk9e2RhdGFzZXQuaWR9PlxuICAgICAgICAgIDxEYXRhc2V0VGl0bGVcbiAgICAgICAgICAgIHNob3dEYXRhc2V0VGFibGU9e3Nob3dEYXRhc2V0VGFibGV9XG4gICAgICAgICAgICBzaG93RGVsZXRlRGF0YXNldD17c2hvd0RlbGV0ZURhdGFzZXR9XG4gICAgICAgICAgICByZW1vdmVEYXRhc2V0PXtyZW1vdmVEYXRhc2V0fVxuICAgICAgICAgICAgZGF0YXNldD17ZGF0YXNldH1cbiAgICAgICAgICAgIG9uVGl0bGVDbGljaz17b25UaXRsZUNsaWNrfVxuICAgICAgICAgICAgdXBkYXRlVGFibGVDb2xvcj17dXBkYXRlVGFibGVDb2xvcn1cbiAgICAgICAgICAvPlxuICAgICAgICAgIHtzaG93RGF0YXNldFRhYmxlID8gPERhdGFzZXRJbmZvIGRhdGFzZXQ9e2RhdGFzZXR9IC8+IDogbnVsbH1cbiAgICAgICAgPC9TaWRlUGFuZWxTZWN0aW9uPlxuICAgICAgKSl9XG4gICAgPC9Tb3VyY2VEYXRhQ2F0YWxvZ1dyYXBwZXI+XG4gICk7XG5cbiAgcmV0dXJuIFNvdXJjZURhdGFDYXRhbG9nO1xufVxuXG5leHBvcnQgZGVmYXVsdCBTb3VyY2VEYXRhQ2F0YWxvZ0ZhY3Rvcnk7XG4iXX0=