import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

var FrameEncoder = function () {
  function FrameEncoder() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, FrameEncoder);

    _defineProperty(this, "extension", '');

    _defineProperty(this, "mimeType", '');

    _defineProperty(this, "quality", void 0);

    _defineProperty(this, "framerate", void 0);

    this.framerate = settings.framerate || 30;
  }

  _createClass(FrameEncoder, [{
    key: "start",
    value: function start() {
      throw new Error('Encoder: Implement a start function');
    }
  }, {
    key: "add",
    value: function () {
      var _add = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(canvas) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                throw new Error('Encoder: Implement an add function');

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function add(_x) {
        return _add.apply(this, arguments);
      }

      return add;
    }()
  }, {
    key: "save",
    value: function () {
      var _save = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2() {
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                throw new Error('Encoder: Implement a save function');

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function save() {
        return _save.apply(this, arguments);
      }

      return save;
    }()
  }]);

  return FrameEncoder;
}();

export { FrameEncoder as default };
//# sourceMappingURL=frame-encoder.js.map