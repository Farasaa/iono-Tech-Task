"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.propertiesV1 = exports.propertiesV0 = exports.MapStyleSchemaV1 = exports.CustomMapStyleSchema = exports.customMapStylePropsV1 = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _versions = require("./versions");

var _schema = _interopRequireDefault(require("./schema"));

var _mapStyleSchema;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var customMapStylePropsV1 = {
  accessToken: null,
  custom: null,
  icon: null,
  id: null,
  label: null,
  url: null
};
exports.customMapStylePropsV1 = customMapStylePropsV1;
var CustomMapStyleSchema = new _schema["default"]({
  version: _versions.VERSIONS.v1,
  key: 'customStyle',
  properties: customMapStylePropsV1
});
exports.CustomMapStyleSchema = CustomMapStyleSchema;

var MapStyleSchemaV1 = /*#__PURE__*/function (_Schema) {
  (0, _inherits2["default"])(MapStyleSchemaV1, _Schema);

  var _super = _createSuper(MapStyleSchemaV1);

  function MapStyleSchemaV1() {
    var _this;

    (0, _classCallCheck2["default"])(this, MapStyleSchemaV1);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "version", _versions.VERSIONS.v1);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "key", 'mapStyles');
    return _this;
  }

  (0, _createClass2["default"])(MapStyleSchemaV1, [{
    key: "save",
    value: function save(mapStyles) {
      // save all custom styles
      var saveCustomStyle = Object.keys(mapStyles).reduce(function (accu, key) {
        return _objectSpread(_objectSpread({}, accu), mapStyles[key].custom ? (0, _defineProperty2["default"])({}, key, CustomMapStyleSchema.save(mapStyles[key]).customStyle) : {});
      }, {});
      return (0, _defineProperty2["default"])({}, this.key, saveCustomStyle);
    }
  }, {
    key: "load",
    value: function load(mapStyles) {
      // If mapStyle is an empty object, do not load it
      return (0, _typeof2["default"])(mapStyles) === 'object' && Object.keys(mapStyles).length ? (0, _defineProperty2["default"])({}, this.key, mapStyles) : {};
    }
  }]);
  return MapStyleSchemaV1;
}(_schema["default"]); // version v0


exports.MapStyleSchemaV1 = MapStyleSchemaV1;
var propertiesV0 = {
  styleType: null,
  topLayerGroups: null,
  visibleLayerGroups: null,
  buildingLayer: null,
  mapStyles: new MapStyleSchemaV1()
};
exports.propertiesV0 = propertiesV0;
var propertiesV1 = {
  styleType: null,
  topLayerGroups: null,
  visibleLayerGroups: null,
  threeDBuildingColor: null,
  backgroundColor: null,
  mapStyles: new MapStyleSchemaV1()
};
exports.propertiesV1 = propertiesV1;
var mapStyleSchema = (_mapStyleSchema = {}, (0, _defineProperty2["default"])(_mapStyleSchema, _versions.VERSIONS.v0, new _schema["default"]({
  version: _versions.VERSIONS.v0,
  properties: propertiesV0,
  key: 'mapStyle'
})), (0, _defineProperty2["default"])(_mapStyleSchema, _versions.VERSIONS.v1, new _schema["default"]({
  version: _versions.VERSIONS.v1,
  properties: propertiesV1,
  key: 'mapStyle'
})), _mapStyleSchema);
var _default = mapStyleSchema;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYXAtc3R5bGUtc2NoZW1hLnRzIl0sIm5hbWVzIjpbImN1c3RvbU1hcFN0eWxlUHJvcHNWMSIsImFjY2Vzc1Rva2VuIiwiY3VzdG9tIiwiaWNvbiIsImlkIiwibGFiZWwiLCJ1cmwiLCJDdXN0b21NYXBTdHlsZVNjaGVtYSIsIlNjaGVtYSIsInZlcnNpb24iLCJWRVJTSU9OUyIsInYxIiwia2V5IiwicHJvcGVydGllcyIsIk1hcFN0eWxlU2NoZW1hVjEiLCJtYXBTdHlsZXMiLCJzYXZlQ3VzdG9tU3R5bGUiLCJPYmplY3QiLCJrZXlzIiwicmVkdWNlIiwiYWNjdSIsInNhdmUiLCJjdXN0b21TdHlsZSIsImxlbmd0aCIsInByb3BlcnRpZXNWMCIsInN0eWxlVHlwZSIsInRvcExheWVyR3JvdXBzIiwidmlzaWJsZUxheWVyR3JvdXBzIiwiYnVpbGRpbmdMYXllciIsInByb3BlcnRpZXNWMSIsInRocmVlREJ1aWxkaW5nQ29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJtYXBTdHlsZVNjaGVtYSIsInYwIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVPLElBQU1BLHFCQUFxQixHQUFHO0FBQ25DQyxFQUFBQSxXQUFXLEVBQUUsSUFEc0I7QUFFbkNDLEVBQUFBLE1BQU0sRUFBRSxJQUYyQjtBQUduQ0MsRUFBQUEsSUFBSSxFQUFFLElBSDZCO0FBSW5DQyxFQUFBQSxFQUFFLEVBQUUsSUFKK0I7QUFLbkNDLEVBQUFBLEtBQUssRUFBRSxJQUw0QjtBQU1uQ0MsRUFBQUEsR0FBRyxFQUFFO0FBTjhCLENBQTlCOztBQVNBLElBQU1DLG9CQUFvQixHQUFHLElBQUlDLGtCQUFKLENBQVc7QUFDN0NDLEVBQUFBLE9BQU8sRUFBRUMsbUJBQVNDLEVBRDJCO0FBRTdDQyxFQUFBQSxHQUFHLEVBQUUsYUFGd0M7QUFHN0NDLEVBQUFBLFVBQVUsRUFBRWI7QUFIaUMsQ0FBWCxDQUE3Qjs7O0lBTU1jLGdCOzs7Ozs7Ozs7Ozs7Ozs7Z0dBQ0RKLG1CQUFTQyxFOzRGQUNiLFc7Ozs7OztXQUNOLGNBQUtJLFNBQUwsRUFBZ0I7QUFDZDtBQUNBLFVBQU1DLGVBQWUsR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlILFNBQVosRUFBdUJJLE1BQXZCLENBQ3RCLFVBQUNDLElBQUQsRUFBT1IsR0FBUDtBQUFBLCtDQUNLUSxJQURMLEdBRU1MLFNBQVMsQ0FBQ0gsR0FBRCxDQUFULENBQWVWLE1BQWYsd0NBQ0VVLEdBREYsRUFDUUwsb0JBQW9CLENBQUNjLElBQXJCLENBQTBCTixTQUFTLENBQUNILEdBQUQsQ0FBbkMsRUFBMENVLFdBRGxELElBRUEsRUFKTjtBQUFBLE9BRHNCLEVBT3RCLEVBUHNCLENBQXhCO0FBVUEsa0RBQVMsS0FBS1YsR0FBZCxFQUFvQkksZUFBcEI7QUFDRDs7O1dBRUQsY0FBS0QsU0FBTCxFQUFnQjtBQUNkO0FBQ0EsYUFBTyx5QkFBT0EsU0FBUCxNQUFxQixRQUFyQixJQUFpQ0UsTUFBTSxDQUFDQyxJQUFQLENBQVlILFNBQVosRUFBdUJRLE1BQXhELHdDQUNELEtBQUtYLEdBREosRUFDVUcsU0FEVixJQUVILEVBRko7QUFHRDs7O0VBdkJtQ1Asa0IsR0EwQnRDOzs7O0FBQ08sSUFBTWdCLFlBQVksR0FBRztBQUMxQkMsRUFBQUEsU0FBUyxFQUFFLElBRGU7QUFFMUJDLEVBQUFBLGNBQWMsRUFBRSxJQUZVO0FBRzFCQyxFQUFBQSxrQkFBa0IsRUFBRSxJQUhNO0FBSTFCQyxFQUFBQSxhQUFhLEVBQUUsSUFKVztBQUsxQmIsRUFBQUEsU0FBUyxFQUFFLElBQUlELGdCQUFKO0FBTGUsQ0FBckI7O0FBUUEsSUFBTWUsWUFBWSxHQUFHO0FBQzFCSixFQUFBQSxTQUFTLEVBQUUsSUFEZTtBQUUxQkMsRUFBQUEsY0FBYyxFQUFFLElBRlU7QUFHMUJDLEVBQUFBLGtCQUFrQixFQUFFLElBSE07QUFJMUJHLEVBQUFBLG1CQUFtQixFQUFFLElBSks7QUFLMUJDLEVBQUFBLGVBQWUsRUFBRSxJQUxTO0FBTTFCaEIsRUFBQUEsU0FBUyxFQUFFLElBQUlELGdCQUFKO0FBTmUsQ0FBckI7O0FBU1AsSUFBTWtCLGNBQWMsNEVBQ2pCdEIsbUJBQVN1QixFQURRLEVBQ0gsSUFBSXpCLGtCQUFKLENBQVc7QUFDeEJDLEVBQUFBLE9BQU8sRUFBRUMsbUJBQVN1QixFQURNO0FBRXhCcEIsRUFBQUEsVUFBVSxFQUFFVyxZQUZZO0FBR3hCWixFQUFBQSxHQUFHLEVBQUU7QUFIbUIsQ0FBWCxDQURHLHFEQU1qQkYsbUJBQVNDLEVBTlEsRUFNSCxJQUFJSCxrQkFBSixDQUFXO0FBQ3hCQyxFQUFBQSxPQUFPLEVBQUVDLG1CQUFTQyxFQURNO0FBRXhCRSxFQUFBQSxVQUFVLEVBQUVnQixZQUZZO0FBR3hCakIsRUFBQUEsR0FBRyxFQUFFO0FBSG1CLENBQVgsQ0FORyxtQkFBcEI7ZUFhZW9CLGMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQge1ZFUlNJT05TfSBmcm9tICcuL3ZlcnNpb25zJztcbmltcG9ydCBTY2hlbWEgZnJvbSAnLi9zY2hlbWEnO1xuXG5leHBvcnQgY29uc3QgY3VzdG9tTWFwU3R5bGVQcm9wc1YxID0ge1xuICBhY2Nlc3NUb2tlbjogbnVsbCxcbiAgY3VzdG9tOiBudWxsLFxuICBpY29uOiBudWxsLFxuICBpZDogbnVsbCxcbiAgbGFiZWw6IG51bGwsXG4gIHVybDogbnVsbFxufTtcblxuZXhwb3J0IGNvbnN0IEN1c3RvbU1hcFN0eWxlU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIHZlcnNpb246IFZFUlNJT05TLnYxLFxuICBrZXk6ICdjdXN0b21TdHlsZScsXG4gIHByb3BlcnRpZXM6IGN1c3RvbU1hcFN0eWxlUHJvcHNWMVxufSk7XG5cbmV4cG9ydCBjbGFzcyBNYXBTdHlsZVNjaGVtYVYxIGV4dGVuZHMgU2NoZW1hIHtcbiAgdmVyc2lvbiA9IFZFUlNJT05TLnYxO1xuICBrZXkgPSAnbWFwU3R5bGVzJztcbiAgc2F2ZShtYXBTdHlsZXMpIHtcbiAgICAvLyBzYXZlIGFsbCBjdXN0b20gc3R5bGVzXG4gICAgY29uc3Qgc2F2ZUN1c3RvbVN0eWxlID0gT2JqZWN0LmtleXMobWFwU3R5bGVzKS5yZWR1Y2UoXG4gICAgICAoYWNjdSwga2V5KSA9PiAoe1xuICAgICAgICAuLi5hY2N1LFxuICAgICAgICAuLi4obWFwU3R5bGVzW2tleV0uY3VzdG9tXG4gICAgICAgICAgPyB7W2tleV06IEN1c3RvbU1hcFN0eWxlU2NoZW1hLnNhdmUobWFwU3R5bGVzW2tleV0pLmN1c3RvbVN0eWxlfVxuICAgICAgICAgIDoge30pXG4gICAgICB9KSxcbiAgICAgIHt9XG4gICAgKTtcblxuICAgIHJldHVybiB7W3RoaXMua2V5XTogc2F2ZUN1c3RvbVN0eWxlfTtcbiAgfVxuXG4gIGxvYWQobWFwU3R5bGVzKSB7XG4gICAgLy8gSWYgbWFwU3R5bGUgaXMgYW4gZW1wdHkgb2JqZWN0LCBkbyBub3QgbG9hZCBpdFxuICAgIHJldHVybiB0eXBlb2YgbWFwU3R5bGVzID09PSAnb2JqZWN0JyAmJiBPYmplY3Qua2V5cyhtYXBTdHlsZXMpLmxlbmd0aFxuICAgICAgPyB7W3RoaXMua2V5XTogbWFwU3R5bGVzfVxuICAgICAgOiB7fTtcbiAgfVxufVxuXG4vLyB2ZXJzaW9uIHYwXG5leHBvcnQgY29uc3QgcHJvcGVydGllc1YwID0ge1xuICBzdHlsZVR5cGU6IG51bGwsXG4gIHRvcExheWVyR3JvdXBzOiBudWxsLFxuICB2aXNpYmxlTGF5ZXJHcm91cHM6IG51bGwsXG4gIGJ1aWxkaW5nTGF5ZXI6IG51bGwsXG4gIG1hcFN0eWxlczogbmV3IE1hcFN0eWxlU2NoZW1hVjEoKVxufTtcblxuZXhwb3J0IGNvbnN0IHByb3BlcnRpZXNWMSA9IHtcbiAgc3R5bGVUeXBlOiBudWxsLFxuICB0b3BMYXllckdyb3VwczogbnVsbCxcbiAgdmlzaWJsZUxheWVyR3JvdXBzOiBudWxsLFxuICB0aHJlZURCdWlsZGluZ0NvbG9yOiBudWxsLFxuICBiYWNrZ3JvdW5kQ29sb3I6IG51bGwsXG4gIG1hcFN0eWxlczogbmV3IE1hcFN0eWxlU2NoZW1hVjEoKVxufTtcblxuY29uc3QgbWFwU3R5bGVTY2hlbWEgPSB7XG4gIFtWRVJTSU9OUy52MF06IG5ldyBTY2hlbWEoe1xuICAgIHZlcnNpb246IFZFUlNJT05TLnYwLFxuICAgIHByb3BlcnRpZXM6IHByb3BlcnRpZXNWMCxcbiAgICBrZXk6ICdtYXBTdHlsZSdcbiAgfSksXG4gIFtWRVJTSU9OUy52MV06IG5ldyBTY2hlbWEoe1xuICAgIHZlcnNpb246IFZFUlNJT05TLnYxLFxuICAgIHByb3BlcnRpZXM6IHByb3BlcnRpZXNWMSxcbiAgICBrZXk6ICdtYXBTdHlsZSdcbiAgfSlcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG1hcFN0eWxlU2NoZW1hO1xuIl19