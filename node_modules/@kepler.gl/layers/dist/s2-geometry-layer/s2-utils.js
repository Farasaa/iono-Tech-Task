"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getS2Center = getS2Center;
exports.validS2Token = validS2Token;

var _long = _interopRequireDefault(require("long"));

var _s2Geometry = require("s2-geometry");

// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var MAXIMUM_TOKEN_LENGTH = 16;
/**
 * Retrieve S2 geometry center
 * @param s2Token string | number
 * @return {*[]}
 */

function getS2Center(s2Token) {
  var paddedToken = s2Token.toString().padEnd(MAXIMUM_TOKEN_LENGTH, '0');

  var s2Id = _long["default"].fromString(paddedToken, MAXIMUM_TOKEN_LENGTH);

  var _S2$idToLatLng = _s2Geometry.S2.idToLatLng(s2Id.toString()),
      lat = _S2$idToLatLng.lat,
      lng = _S2$idToLatLng.lng;

  return [lng, lat];
}

var re = new RegExp('^[0-9a-z]*$', 'g'); // simple test to see if token only contains numbers and letters

function validS2Token(token) {
  return typeof token === 'string' && Boolean(token.match(re));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zMi1nZW9tZXRyeS1sYXllci9zMi11dGlscy50cyJdLCJuYW1lcyI6WyJNQVhJTVVNX1RPS0VOX0xFTkdUSCIsImdldFMyQ2VudGVyIiwiczJUb2tlbiIsInBhZGRlZFRva2VuIiwidG9TdHJpbmciLCJwYWRFbmQiLCJzMklkIiwiTG9uZyIsImZyb21TdHJpbmciLCJTMiIsImlkVG9MYXRMbmciLCJsYXQiLCJsbmciLCJyZSIsIlJlZ0V4cCIsInZhbGlkUzJUb2tlbiIsInRva2VuIiwiQm9vbGVhbiIsIm1hdGNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBSkE7QUFDQTtBQUtBLElBQU1BLG9CQUFvQixHQUFHLEVBQTdCO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDTyxTQUFTQyxXQUFULENBQXFCQyxPQUFyQixFQUE4QjtBQUNuQyxNQUFNQyxXQUFXLEdBQUdELE9BQU8sQ0FBQ0UsUUFBUixHQUFtQkMsTUFBbkIsQ0FBMEJMLG9CQUExQixFQUFnRCxHQUFoRCxDQUFwQjs7QUFDQSxNQUFNTSxJQUFJLEdBQUdDLGlCQUFLQyxVQUFMLENBQWdCTCxXQUFoQixFQUE2Qkgsb0JBQTdCLENBQWI7O0FBRm1DLHVCQUdoQlMsZUFBR0MsVUFBSCxDQUFjSixJQUFJLENBQUNGLFFBQUwsRUFBZCxDQUhnQjtBQUFBLE1BRzVCTyxHQUg0QixrQkFHNUJBLEdBSDRCO0FBQUEsTUFHdkJDLEdBSHVCLGtCQUd2QkEsR0FIdUI7O0FBSW5DLFNBQU8sQ0FBQ0EsR0FBRCxFQUFNRCxHQUFOLENBQVA7QUFDRDs7QUFFRCxJQUFNRSxFQUFFLEdBQUcsSUFBSUMsTUFBSixDQUFXLGFBQVgsRUFBMEIsR0FBMUIsQ0FBWCxDLENBQ0E7O0FBQ08sU0FBU0MsWUFBVCxDQUFzQkMsS0FBdEIsRUFBNkI7QUFDbEMsU0FBTyxPQUFPQSxLQUFQLEtBQWlCLFFBQWpCLElBQTZCQyxPQUFPLENBQUNELEtBQUssQ0FBQ0UsS0FBTixDQUFZTCxFQUFaLENBQUQsQ0FBM0M7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVRcbi8vIENvcHlyaWdodCBjb250cmlidXRvcnMgdG8gdGhlIGtlcGxlci5nbCBwcm9qZWN0XG5cbmltcG9ydCBMb25nIGZyb20gJ2xvbmcnO1xuaW1wb3J0IHtTMn0gZnJvbSAnczItZ2VvbWV0cnknO1xuXG5jb25zdCBNQVhJTVVNX1RPS0VOX0xFTkdUSCA9IDE2O1xuXG4vKipcbiAqIFJldHJpZXZlIFMyIGdlb21ldHJ5IGNlbnRlclxuICogQHBhcmFtIHMyVG9rZW4gc3RyaW5nIHwgbnVtYmVyXG4gKiBAcmV0dXJuIHsqW119XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTMkNlbnRlcihzMlRva2VuKSB7XG4gIGNvbnN0IHBhZGRlZFRva2VuID0gczJUb2tlbi50b1N0cmluZygpLnBhZEVuZChNQVhJTVVNX1RPS0VOX0xFTkdUSCwgJzAnKTtcbiAgY29uc3QgczJJZCA9IExvbmcuZnJvbVN0cmluZyhwYWRkZWRUb2tlbiwgTUFYSU1VTV9UT0tFTl9MRU5HVEgpO1xuICBjb25zdCB7bGF0LCBsbmd9ID0gUzIuaWRUb0xhdExuZyhzMklkLnRvU3RyaW5nKCkpO1xuICByZXR1cm4gW2xuZywgbGF0XTtcbn1cblxuY29uc3QgcmUgPSBuZXcgUmVnRXhwKCdeWzAtOWEtel0qJCcsICdnJyk7XG4vLyBzaW1wbGUgdGVzdCB0byBzZWUgaWYgdG9rZW4gb25seSBjb250YWlucyBudW1iZXJzIGFuZCBsZXR0ZXJzXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRTMlRva2VuKHRva2VuKSB7XG4gIHJldHVybiB0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnICYmIEJvb2xlYW4odG9rZW4ubWF0Y2gocmUpKTtcbn1cbiJdfQ==