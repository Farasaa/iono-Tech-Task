{"version":3,"sources":["../../../../src/encoders/tar/tar-builder.js"],"names":["Tar","TAR_BUILDER_OPTIONS","recordsPerBlock","TARBuilder","id","name","extensions","mimeType","builder","options","tape","count","buffer","filename","append","Uint8Array","Response","save","arrayBuffer"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,eAAe,EAAE;AADS,CAA5B;;IAIqBC,U;;;wBAMK;AACtB,aAAO;AACLC,QAAAA,EAAE,EAAE,KADC;AAELC,QAAAA,IAAI,EAAE,KAFD;AAGLC,QAAAA,UAAU,EAAE,CAAC,KAAD,CAHP;AAILC,QAAAA,QAAQ,EAAE,mBAJL;AAKLC,QAAAA,OAAO,EAAEL,UALJ;AAMLM,QAAAA,OAAO,EAAER;AANJ,OAAP;AAQD;;;AAKD,sBAAYQ,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AACnB,SAAKA,OAAL,mCAAmBR,mBAAnB,GAA2CQ,OAA3C;AACA,SAAKC,IAAL,GAAY,IAAIV,GAAJ,CAAQ,KAAKS,OAAL,CAAaP,eAArB,CAAZ;AACA,SAAKS,KAAL,GAAa,CAAb;AACD;;;;4BAMOC,M,EAAQC,Q,EAAU;AACxB,WAAKH,IAAL,CAAUI,MAAV,CAAiBD,QAAjB,EAA2B,IAAIE,UAAJ,CAAeH,MAAf,CAA3B;AACA,WAAKD,KAAL;AACD;;;;;;;;;iDAMQ,IAAIK,QAAJ,CAAa,KAAKN,IAAL,CAAUO,IAAV,EAAb,EAA+BC,WAA/B,E;;;;;;;;;;;;;;;;;;;;;SAvCUf,U","sourcesContent":["import Tar from './tar';\n\nconst TAR_BUILDER_OPTIONS = {\n  recordsPerBlock: 20\n};\n\nexport default class TARBuilder {\n  /** @type {Tar} */\n  tape;\n  /** @type {number} */\n  count;\n\n  static get properties() {\n    return {\n      id: 'tar',\n      name: 'TAR',\n      extensions: ['tar'],\n      mimeType: 'application/x-tar',\n      builder: TARBuilder,\n      options: TAR_BUILDER_OPTIONS\n    };\n  }\n\n  /**\n   * @param {Partial<typeof TAR_BUILDER_OPTIONS>} options\n   */\n  constructor(options) {\n    this.options = {...TAR_BUILDER_OPTIONS, ...options};\n    this.tape = new Tar(this.options.recordsPerBlock);\n    this.count = 0;\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   * @param {string} filename\n   */\n  addFile(buffer, filename) {\n    this.tape.append(filename, new Uint8Array(buffer));\n    this.count++;\n  }\n\n  /**\n   * @returns {Promise<ArrayBuffer>}\n   */\n  async build() {\n    return new Response(this.tape.save()).arrayBuffer();\n  }\n}\n"],"file":"tar-builder.js"}