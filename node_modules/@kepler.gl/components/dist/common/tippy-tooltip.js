"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _react = _interopRequireWildcard(require("react"));

var _ = require("../");

var _react2 = _interopRequireDefault(require("@tippyjs/react"));

var _templateObject, _templateObject2;

var TippyArrow = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  position: absolute;\n  width: 15px;\n  height: 15px;\n  fill: ", ";\n  text-align: initial;\n\n  > svg {\n    position: absolute;\n  }\n"])), function (props) {
  return props.theme.tooltipBg;
});

var TippyTooltipContent = (0, _styledComponents["default"])(function (_ref) {
  var children = _ref.children,
      arrow = _ref.arrow,
      isLightTheme = _ref.isLightTheme,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["children", "arrow", "isLightTheme"]);
  return /*#__PURE__*/_react["default"].createElement("div", props, children, arrow ? /*#__PURE__*/_react["default"].createElement(TippyArrow, {
    className: "svg-arrow",
    "data-popper-arrow": ""
  }, /*#__PURE__*/_react["default"].createElement("svg", {
    width: 15,
    height: 15
  }, /*#__PURE__*/_react["default"].createElement("path", {
    d: "M2,7.5 7.5,2 13,7.5Z"
  }))) : null);
})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  font-family: ", ";\n  font-size: ", ";\n  font-weight: 400;\n  padding: 7px 18px;\n  box-shadow: ", ";\n  background-color: ", ";\n  color: ", ";\n  border-radius: ", ";\n  ", "\n"])), function (props) {
  return props.theme.fontFamily;
}, function (props) {
  return props.theme.tooltipFontSize;
}, function (props) {
  return props.isLightTheme ? props.theme.panelBoxShadow : props.theme.tooltipBoxShadow;
}, function (props) {
  return props.isLightTheme ? props.theme.tooltipBgLT : props.theme.tooltipBg;
}, function (props) {
  return props.isLightTheme ? props.theme.tooltipColorLT : props.theme.tooltipColor;
}, function (props) {
  return props.theme.primaryBtnRadius;
}, function (props) {
  return props.arrow ? "\n    &[data-placement^='top'] > .svg-arrow {\n      bottom: 0;\n      &::after,\n      > svg {\n        top: 7px;\n        transform: rotate(180deg);\n      }\n    }\n\n    &[data-placement^='bottom'] > .svg-arrow {\n      top: 0;\n      > svg {\n        bottom: 7px;\n      }\n    }\n\n    &[data-placement^='left'] > .svg-arrow {\n      right: 0;\n      &::after,\n      > svg {\n        transform: rotate(90deg);\n        left: 7px;\n      }\n    }\n\n    &[data-placement^='right'] > .svg-arrow {\n      left: 0;\n      &::after,\n      > svg {\n        transform: rotate(-90deg);\n        right: 7px;\n      }\n    }\n  " : '';
});

var TippyTooltip = function TippyTooltip(_ref2) {
  var children = _ref2.children,
      _render = _ref2.render,
      _ref2$duration = _ref2.duration,
      duration = _ref2$duration === void 0 ? 200 : _ref2$duration,
      _ref2$arrow = _ref2.arrow,
      arrow = _ref2$arrow === void 0 ? true : _ref2$arrow,
      _ref2$isLightTheme = _ref2.isLightTheme,
      isLightTheme = _ref2$isLightTheme === void 0 ? false : _ref2$isLightTheme,
      className = _ref2.className,
      rest = (0, _objectWithoutProperties2["default"])(_ref2, ["children", "render", "duration", "arrow", "isLightTheme", "className"]);

  var _useState = (0, _react.useState)(0),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      opacity = _useState2[0],
      setOpacity = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      timer = _useState4[0],
      setTimer = _useState4[1];

  function onMount() {
    setOpacity(1);

    if (timer) {
      // @ts-ignore
      clearTimeout(timer);
    }
  }

  function onHide(instance) {
    var unmount = instance.unmount;
    var timeout = setTimeout(function () {
      var _instance$state;

      if (!((_instance$state = instance.state) !== null && _instance$state !== void 0 && _instance$state.isDestroyed)) {
        unmount();
      }
    }, duration[0] || duration); // @ts-ignore

    setTimer(timeout);
    setOpacity(0);
  }

  return /*#__PURE__*/_react["default"].createElement(_.RootContext.Consumer, null, function (context) {
    return /*#__PURE__*/_react["default"].createElement(_react2["default"], (0, _extends2["default"])({}, rest, {
      // Using document.body would result in the CSS styles not being applied
      // to the tooltip content when embedding the map widget as a Shadow DOM element.
      appendTo: (context === null || context === void 0 ? void 0 : context.current) || 'parent',
      animation: true,
      render: function render(attrs) {
        return /*#__PURE__*/_react["default"].createElement(TippyTooltipContent, (0, _extends2["default"])({}, attrs, {
          className: className,
          style: {
            opacity: opacity,
            transition: "opacity ".concat(duration, "ms")
          },
          arrow: arrow,
          isLightTheme: isLightTheme
        }), _render === null || _render === void 0 ? void 0 : _render(attrs));
      },
      onMount: onMount,
      onHide: onHide
    }), children);
  });
};

var _default = TippyTooltip;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,