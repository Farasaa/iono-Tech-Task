"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _engine = require("@luma.gl/engine");

var _utils = require("./utils");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var Keyframes = function (_LumaKeyFrames) {
  (0, _inherits2["default"])(Keyframes, _LumaKeyFrames);

  var _super = _createSuper(Keyframes);

  function Keyframes(_ref) {
    var _this;

    var features = _ref.features,
        timings = _ref.timings,
        keyframes = _ref.keyframes,
        easings = _ref.easings;
    (0, _classCallCheck2["default"])(this, Keyframes);
    _this = _super.call(this, []);
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "activeFeatures", {});
    _this._setActiveFeatures = _this._setActiveFeatures.bind((0, _assertThisInitialized2["default"])(_this));
    _this.getFrame = _this.getFrame.bind((0, _assertThisInitialized2["default"])(_this));

    if (keyframes.length === 0) {
      throw new Error('There must be at least one keyframe');
    }

    var _easings = (0, _utils.sanitizeEasings)(keyframes, easings);

    var _timings = (0, _utils.sanitizeTimings)(keyframes, timings);

    _this.activeFeatures = features.reduce(function (activeFeatures, feature) {
      activeFeatures[feature] = false;
      return activeFeatures;
    }, {});

    _this._setActiveFeatures(keyframes);

    var _keyframes = (0, _utils.merge)(_timings, keyframes, _easings);

    _this.setKeyFrames(_keyframes);

    return _this;
  }

  (0, _createClass2["default"])(Keyframes, [{
    key: "_setActiveFeatures",
    value: function _setActiveFeatures(keyframes) {
      var firstKeyframe = keyframes[0];
      this.activeFeatures = Object.keys(firstKeyframe).reduce(function (activeFeatures, key) {
        if (firstKeyframe[key] !== undefined) {
          activeFeatures[key] = true;
        }

        return activeFeatures;
      }, this.activeFeatures);
    }
  }, {
    key: "getFrame",
    value: function getFrame() {
      var _this2 = this;

      var factor = this.factor;
      var start = this.getStartData();
      var end = this.getEndData();
      var frame = {};
      Object.keys(this.activeFeatures).forEach(function (key) {
        if (_this2.activeFeatures[key]) {
          frame[key] = (0, _utils.factorInterpolator)(start[key], end[key], end.ease)(factor);
        }
      });
      return frame;
    }
  }]);
  return Keyframes;
}(_engine.KeyFrames);

var _default = Keyframes;
exports["default"] = _default;
//# sourceMappingURL=keyframes.js.map