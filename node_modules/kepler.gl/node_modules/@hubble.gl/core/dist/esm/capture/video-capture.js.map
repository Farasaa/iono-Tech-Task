{"version":3,"sources":["../../../src/capture/video-capture.js"],"names":["download","FrameEncoder","guid","VideoCapture","recording","capturing","timeMs","encoder","encoderSettings","_getNextTimeMs","bind","_step","_capture","capture","render","stop","save","sceneLengthMs","parsedSettings","startOffsetMs","durationMs","endTimeMs","Error","filename","Encoder","onStop","undefined","isRecording","console","time","parseEncoderSettings","log","start","canvas","proceedToNextFrame","then","data","kind","nextTimeMs","error","callback","timeEnd","blob","extension","mimeType","add","reason","frameLengthMs","parseInt","framerate"],"mappings":"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","sourcesContent":["// Copyright (c) 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable no-console */\n/* global console */\nimport download from 'downloadjs';\n// eslint-disable-next-line no-unused-vars\nimport {FrameEncoder} from '../encoders';\nimport {guid} from './utils';\n\nexport class VideoCapture {\n  /** @type {boolean} */\n  recording;\n  /** @type {boolean} */\n  capturing;\n  /** @type {number} */\n  timeMs;\n  /** @type {number} */\n  endTimeMs;\n  /** @type {number} */\n  durationMs;\n  /** @type {number} */\n  framerate;\n  /** @type {FrameEncoder} */\n  encoder;\n  /** @type {string} */\n  filename;\n  /** @type {import('types').FrameEncoderSettings} */\n  encoderSettings;\n\n  constructor() {\n    this.recording = false;\n    this.capturing = false;\n    this.timeMs = 0;\n    this.encoder = null;\n    this.encoderSettings = null;\n\n    this._getNextTimeMs = this._getNextTimeMs.bind(this);\n    this._step = this._step.bind(this);\n    this._capture = this._capture.bind(this);\n    this.capture = this.capture.bind(this);\n    this.render = this.render.bind(this);\n    this.stop = this.stop.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  /**\n   * @param {import('types').FrameEncoderSettings} encoderSettings\n   * @param {number} sceneLengthMs\n   */\n  parseEncoderSettings(encoderSettings, sceneLengthMs) {\n    const parsedSettings = {...encoderSettings};\n\n    if (!parsedSettings.startOffsetMs) {\n      parsedSettings.startOffsetMs = 0;\n    }\n    this.timeMs = parsedSettings.startOffsetMs;\n\n    if (parsedSettings.durationMs) {\n      this.endTimeMs = parsedSettings.startOffsetMs + parsedSettings.durationMs;\n    } else {\n      parsedSettings.durationMs = sceneLengthMs - parsedSettings.startOffsetMs;\n      this.endTimeMs = sceneLengthMs;\n    }\n    if (this.endTimeMs > sceneLengthMs) {\n      throw new Error(\n        `Recording end time (${this.endTimeMs}) cannot be greater then scene length (${sceneLengthMs})`\n      );\n    }\n    if (parsedSettings.durationMs <= 0) {\n      throw new Error(\n        `Invalid recording length in ms (${parsedSettings.durationMs}).  Must be greater than 0.`\n      );\n    }\n    this.durationMs = parsedSettings.durationMs;\n\n    if (!parsedSettings.filename) {\n      parsedSettings.filename = guid();\n    }\n    this.filename = parsedSettings.filename;\n\n    return parsedSettings;\n  }\n\n  // True if recording, false otherwise.\n  isRecording() {\n    return this.recording;\n  }\n\n  /**\n   * Start recording.\n   * @param {typeof FrameEncoder} Encoder\n   * @param {import('types').FrameEncoderSettings} encoderSettings\n   * @param {number} sceneLengthMs\n   * @param {() => void} onStop\n   */\n  render(Encoder, encoderSettings, sceneLengthMs, onStop = undefined) {\n    if (!this.isRecording()) {\n      console.time('render');\n      this.encoderSettings = this.parseEncoderSettings(encoderSettings, sceneLengthMs);\n      console.log(`Starting recording for ${this.durationMs}ms.`);\n      this.onStop = onStop;\n      this.encoder = new Encoder(this.encoderSettings);\n      this.recording = true;\n      this.encoder.start();\n    }\n  }\n\n  /**\n   * Capture a frame of the canvas.\n   * @param {(nextTimeMs: number) => void} proceedToNextFrame\n   */\n  capture(canvas, proceedToNextFrame) {\n    // console.log(`outside-hubble-capture ${this.capturing} ${this.isRecording()}`);\n\n    if (!this.capturing && this.isRecording()) {\n      // console.log('hubble-capture');\n\n      this.capturing = true;\n      // capture current canvas, i.e.\n      // const can = document.getElementsByClassName('mapboxgl-canvas')[0];\n      // const can = document.getElementById('default-deckgl-overlay');\n      this._capture(canvas).then(data => {\n        this.capturing = false;\n        if (data.kind === 'step') {\n          console.log(`data.nextTimeMs: ${data.nextTimeMs}`);\n          proceedToNextFrame(data.nextTimeMs);\n        } else if (data.error === 'STOP') {\n          console.log('data.error: STOP');\n          this.stop(this.onStop);\n        } else {\n          console.log(data);\n        }\n      });\n    }\n  }\n\n  /**\n   * Stop and save recording. Execute callback if provided.\n   * @param {() => void} callback\n   */\n  stop(callback = undefined) {\n    if (this.isRecording()) {\n      console.log(`Stopping recording.  Recorded for ${this.durationMs}ms.`);\n      this.recording = false;\n      this.capturing = false; // Added to fix an intermittent bug\n      this.encoderSettings = null;\n      this.save();\n\n      if (callback) {\n        // eslint-disable-next-line callback-return\n        callback();\n      }\n    }\n  }\n\n  /**\n   * @param {{ (blob: Blob): boolean }} [callback]\n   */\n  save(callback) {\n    console.timeEnd('render');\n    if (!callback) {\n      /**\n       * @param {Blob} blob\n       */\n      callback = blob => {\n        console.timeEnd('save');\n        if (blob) {\n          download(blob, this.filename + this.encoder.extension, this.encoder.mimeType);\n        }\n        return false;\n      };\n    }\n    console.time('save');\n    this.encoder.save().then(callback);\n  }\n\n  /**\n   * Capture the current canvas.\n   * @param {HTMLCanvasElement} canvas\n   * @returns {Promise<import('types').CaptureStep>}\n   */\n  async _capture(canvas) {\n    // console.log('video-capture');\n    if (!this.isRecording()) {\n      return {kind: 'error', error: 'NOT_RECORDING'};\n    }\n    // getting blob from canvas\n    return await this.encoder\n      .add(canvas)\n      .then(this._step)\n      .catch(reason => ({kind: 'error', error: reason}));\n  }\n\n  /**\n   * @returns {import('types').CaptureStep}\n   */\n  _step() {\n    // generating next frame timestamp\n    this.timeMs = this._getNextTimeMs();\n    if (this.timeMs > this.endTimeMs) {\n      return {kind: 'error', error: 'STOP'};\n    }\n    return {kind: 'step', nextTimeMs: this.timeMs};\n  }\n\n  // Get next time MS based on current time MS and framerate\n  // @return time in milliseconds for next frame.\n  _getNextTimeMs() {\n    const frameLengthMs = parseInt(1000.0 / this.encoder.framerate, 10);\n    return this.timeMs + frameLengthMs;\n  }\n}\n"],"file":"video-capture.js"}