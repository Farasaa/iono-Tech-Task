import React, { ComponentType } from 'react';
import PanelTitleFactory from '../panel-title';
import BrushConfigFactory from './brush-config';
import TooltipConfigFactory from './tooltip-config';
import { Datasets } from '@kepler.gl/table';
import { InteractionConfig, ValueOf } from '@kepler.gl/types';
import { setColumnDisplayFormat as setColumnDisplayFormatAction, ActionHandler } from '@kepler.gl/actions';
interface InteractionPanelProps {
    datasets: Datasets;
    config: ValueOf<InteractionConfig>;
    onConfigChange: any;
    interactionConfigIcons?: {
        [key: string]: React.ElementType;
    };
    setColumnDisplayFormat: ActionHandler<typeof setColumnDisplayFormatAction>;
}
declare function InteractionPanelFactory(TooltipConfig: ReturnType<typeof TooltipConfigFactory>, BrushConfig: ReturnType<typeof BrushConfigFactory>, PanelTitle: ReturnType<typeof PanelTitleFactory>): ComponentType<InteractionPanelProps>;
declare namespace InteractionPanelFactory {
    var deps: ((() => React.FC<import("../panel-title").PanelTitleProps>) | typeof TooltipConfigFactory | typeof BrushConfigFactory)[];
}
export default InteractionPanelFactory;
