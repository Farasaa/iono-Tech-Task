{"version":3,"file":"batch.js","names":[],"sources":["../../src/types/batch.ts"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Schema} from './schema';\n// import type {RecordBatch} from 'apache-arrow';\n\ntype ApacheRecordBatch = unknown;\n\n/**\n * A batch of data (or metadata/schema), from a streaming loader\n * @see parseInBatches()\n * @see loadInBatches()\n */\nexport type Batch = {\n  /** A batch can contain metadata, data, or in case of unstructured data (JSON) */\n  batchType: 'data' | 'metadata' | 'partial-result' | 'final-result';\n  /** A string identifying the shape of data in this batch (table, etc) */\n  shape: string;\n  /** Schema of the data in this batch */\n  schema?: Schema;\n  /** Data in this batch */\n  data?: unknown;\n  /**  If this is an arrow table. @deprecated Use `data` */\n  recordBatch?: ApacheRecordBatch;\n  /** Length of data in this batch */\n  length: number;\n\n  /** A count of batches received */\n  batch?: number;\n\n  /** A count of batches received */\n  count?: number;\n\n  /** Bytes used so far */\n  bytesUsed?: number;\n  /** cursor is the  */\n  cursor?: number;\n\n  /** MIME type of the data generating this batch */\n  mimeType?: string;\n\n  /** Any other data */\n  [key: string]: unknown;\n};\n"],"mappings":""}