{"version":3,"file":"gif-encoder.js","names":["GIFBuilder","FrameEncoder","GifEncoder","constructor","settings","mimeType","extension","gifBuilder","options","gif","width","height","numWorkers","sampleInterval","jpegQuality","source","start","bind","add","save","interval","framerate","canvas","dataUrl","toDataURL","fetch","build","then","res","blob"],"sources":["../../../../src/encoders/video/gif-encoder.js"],"sourcesContent":["import {GIFBuilder} from '@loaders.gl/video';\nimport FrameEncoder from '../frame-encoder';\n\nexport default class GifEncoder extends FrameEncoder {\n  /**\n   * @type {{width: number, height: number, numWorkers: number, sampleInterval: number, jpegQuality: number}}\n   */\n  options;\n\n  /** @param {import('types').FrameEncoderSettings} settings */\n  constructor(settings) {\n    super(settings);\n    this.mimeType = 'image/gif';\n    this.extension = '.gif';\n    this.gifBuilder = null;\n    this.options = {};\n\n    if (settings.gif) {\n      this.options = {...settings.gif};\n    }\n\n    this.options.width = this.options.width || 720;\n    this.options.height = this.options.height || 480;\n    this.options.numWorkers = this.options.numWorkers || 4;\n    this.options.sampleInterval = this.options.sampleInterval || 10;\n    this.options.jpegQuality = this.options.jpegQuality || 1.0;\n\n    // this.source = settings.source\n    this.source = 'images';\n\n    this.start = this.start.bind(this);\n    this.add = this.add.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  start() {\n    this.gifBuilder = new GIFBuilder({\n      source: this.source,\n      ...this.options,\n      interval: 1 / this.framerate\n    });\n  }\n\n  /** @param {HTMLCanvasElement} canvas */\n  async add(canvas) {\n    if (this.source === 'images') {\n      const dataUrl = canvas.toDataURL('image/jpeg', this.options.jpegQuality);\n      await this.gifBuilder.add(dataUrl);\n    }\n  }\n\n  /**\n   * @return {Promise<Blob>}\n   */\n  async save() {\n    return fetch(await this.gifBuilder.build()).then(res => res.blob());\n  }\n}\n"],"mappings":";AAAA,SAAQA,UAAR,QAAyB,mBAAzB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,eAAe,MAAMC,UAAN,SAAyBD,YAAzB,CAAsC;EAOnDE,WAAW,CAACC,QAAD,EAAW;IACpB,MAAMA,QAAN;;IADoB;;IAEpB,KAAKC,QAAL,GAAgB,WAAhB;IACA,KAAKC,SAAL,GAAiB,MAAjB;IACA,KAAKC,UAAL,GAAkB,IAAlB;IACA,KAAKC,OAAL,GAAe,EAAf;;IAEA,IAAIJ,QAAQ,CAACK,GAAb,EAAkB;MAChB,KAAKD,OAAL,GAAe,EAAC,GAAGJ,QAAQ,CAACK;MAAb,CAAf;IACD;;IAED,KAAKD,OAAL,CAAaE,KAAb,GAAqB,KAAKF,OAAL,CAAaE,KAAb,IAAsB,GAA3C;IACA,KAAKF,OAAL,CAAaG,MAAb,GAAsB,KAAKH,OAAL,CAAaG,MAAb,IAAuB,GAA7C;IACA,KAAKH,OAAL,CAAaI,UAAb,GAA0B,KAAKJ,OAAL,CAAaI,UAAb,IAA2B,CAArD;IACA,KAAKJ,OAAL,CAAaK,cAAb,GAA8B,KAAKL,OAAL,CAAaK,cAAb,IAA+B,EAA7D;IACA,KAAKL,OAAL,CAAaM,WAAb,GAA2B,KAAKN,OAAL,CAAaM,WAAb,IAA4B,GAAvD;IAGA,KAAKC,MAAL,GAAc,QAAd;IAEA,KAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;IACA,KAAKC,GAAL,GAAW,KAAKA,GAAL,CAASD,IAAT,CAAc,IAAd,CAAX;IACA,KAAKE,IAAL,GAAY,KAAKA,IAAL,CAAUF,IAAV,CAAe,IAAf,CAAZ;EACD;;EAEDD,KAAK,GAAG;IACN,KAAKT,UAAL,GAAkB,IAAIP,UAAJ,CAAe;MAC/Be,MAAM,EAAE,KAAKA,MADkB;MAE/B,GAAG,KAAKP,OAFuB;MAG/BY,QAAQ,EAAE,IAAI,KAAKC;IAHY,CAAf,CAAlB;EAKD;;EAGQ,MAAHH,GAAG,CAACI,MAAD,EAAS;IAChB,IAAI,KAAKP,MAAL,KAAgB,QAApB,EAA8B;MAC5B,MAAMQ,OAAO,GAAGD,MAAM,CAACE,SAAP,CAAiB,YAAjB,EAA+B,KAAKhB,OAAL,CAAaM,WAA5C,CAAhB;MACA,MAAM,KAAKP,UAAL,CAAgBW,GAAhB,CAAoBK,OAApB,CAAN;IACD;EACF;;EAKS,MAAJJ,IAAI,GAAG;IACX,OAAOM,KAAK,CAAC,MAAM,KAAKlB,UAAL,CAAgBmB,KAAhB,EAAP,CAAL,CAAqCC,IAArC,CAA0CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAjD,CAAP;EACD;;AArDkD"}