"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.insertBefore = insertBefore;
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _window = require("global/window");

var _core = require("@deck.gl/core");

var _core2 = require("@luma.gl/core");

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Inserts shader code before detected part.
 * @param {string} vs Original shader code.
 * @param {string} type Debug string.
 * @param {string} insertBeforeText Text chunk to insert before.
 * @param {string} textToInsert Text to insert.
 * @returns Modified shader code.
 */
function insertBefore(vs, type, insertBeforeText, textToInsert) {
  var at = vs.indexOf(insertBeforeText);

  if (at < 0) {
    _window.console.error("Cannot edit ".concat(type, " layer shader"));

    return vs;
  }

  return vs.slice(0, at) + textToInsert + vs.slice(at);
}

var CustomShadowModule = _core.shadow ? _objectSpread({}, _core.shadow) : undefined;
/**
 * Custom shadow module
 * 1) Add u_outputUniformShadow uniform
 * 2) always produce full shadow when the uniform is set to true.
 */

CustomShadowModule.fs = insertBefore(CustomShadowModule.fs, 'custom shadow #1', 'uniform vec4 shadow_uColor;', 'uniform bool u_outputUniformShadow;');
CustomShadowModule.fs = insertBefore(CustomShadowModule.fs, 'custom shadow #1', 'vec4 rgbaDepth = texture2D(shadowMap, position.xy);', 'if(u_outputUniformShadow) return 1.0;');

CustomShadowModule.getUniforms = function () {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var u = _core.shadow.getUniforms(opts, context);

  if (opts.outputUniformShadow !== undefined) {
    u['u_outputUniformShadow'] = opts.outputUniformShadow;
  }

  return u;
};
/**
 * Custom LightingEffect
 * 1) adds CustomShadowModule
 * 2) pass outputUniformShadow as module parameters
 * 3) properly removes CustomShadowModule
 */


var CustomDeckLightingEffect = /*#__PURE__*/function (_LightingEffect) {
  (0, _inherits2["default"])(CustomDeckLightingEffect, _LightingEffect);

  var _super = _createSuper(CustomDeckLightingEffect);

  function CustomDeckLightingEffect(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, CustomDeckLightingEffect);
    _this = _super.call(this, props);
    _this.useOutputUniformShadow = false;
    return _this;
  }

  (0, _createClass2["default"])(CustomDeckLightingEffect, [{
    key: "preRender",
    value: function preRender(gl, _ref) {
      var layers = _ref.layers,
          layerFilter = _ref.layerFilter,
          viewports = _ref.viewports,
          onViewportActive = _ref.onViewportActive,
          views = _ref.views;
      if (!this.shadow) return; // create light matrix every frame to make sure always updated from light source

      this.shadowMatrices = this._calculateMatrices();

      if (this.shadowPasses.length === 0) {
        this._createShadowPasses(gl);
      }

      if (!this.programManager) {
        this.programManager = _core2.ProgramManager.getDefaultProgramManager(gl);

        if (CustomShadowModule) {
          this.programManager.addDefaultModule(CustomShadowModule);
        }
      }

      if (!this.dummyShadowMap) {
        this.dummyShadowMap = new _core2.Texture2D(gl, {
          width: 1,
          height: 1
        });
      }

      for (var i = 0; i < this.shadowPasses.length; i++) {
        var shadowPass = this.shadowPasses[i];
        shadowPass.render({
          layers: layers,
          layerFilter: layerFilter,
          viewports: viewports,
          onViewportActive: onViewportActive,
          views: views,
          moduleParameters: {
            shadowLightId: i,
            dummyShadowMap: this.dummyShadowMap,
            shadowMatrices: this.shadowMatrices,
            useOutputUniformShadow: false
          }
        });
      }
    }
  }, {
    key: "getModuleParameters",
    value: function getModuleParameters(layer) {
      var parameters = (0, _get2["default"])((0, _getPrototypeOf2["default"])(CustomDeckLightingEffect.prototype), "getModuleParameters", this).call(this, layer);
      parameters.outputUniformShadow = this.outputUniformShadow;
      return parameters;
    }
  }, {
    key: "cleanup",
    value: function cleanup() {
      var _iterator = _createForOfIteratorHelper(this.shadowPasses),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var shadowPass = _step.value;
          shadowPass["delete"]();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      this.shadowPasses.length = 0;
      this.shadowMaps.length = 0;

      if (this.dummyShadowMap) {
        this.dummyShadowMap["delete"]();
        this.dummyShadowMap = null;
      }

      if (this.shadow && this.programManager) {
        this.programManager.removeDefaultModule(CustomShadowModule);
        this.programManager = null;
      }
    }
  }]);
  return CustomDeckLightingEffect;
}(_core.LightingEffect);

var _default = CustomDeckLightingEffect;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,