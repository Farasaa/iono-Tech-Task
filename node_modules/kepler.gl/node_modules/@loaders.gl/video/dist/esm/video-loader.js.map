{"version":3,"sources":["../../src/video-loader.js"],"names":["parseVideo","VERSION","EXTENSIONS","MIME_TYPES","VideoLoader","id","name","version","mimeTypes","extensions","parse","options","video"],"mappings":"AAEA,OAAOA,UAAP,MAAuB,2BAAvB;AAGA,IAAMC,OAAO,GAAG,2BAAuB,WAAvB,qBAAmD,QAAnE;AAEA,IAAMC,UAAU,GAAG,CAAC,KAAD,CAAnB;AACA,IAAMC,UAAU,GAAG,CAAC,WAAD,CAAnB;AAIA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,EAAE,EAAE,OADc;AAElBC,EAAAA,IAAI,EAAE,OAFY;AAGlBC,EAAAA,OAAO,EAAEN,OAHS;AAIlBO,EAAAA,SAAS,EAAEL,UAJO;AAKlBM,EAAAA,UAAU,EAAEP,UALM;AAOlBQ,EAAAA,KAAK,EAAEV,UAPW;AAUlBW,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA;AAVS,CAApB;AAeA,eAAeR,WAAf","sourcesContent":["// __VERSION__ is injected by babel-plugin-version-inline\n/* global __VERSION__ */\nimport parseVideo from './lib/parsers/parse-video';\n\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nconst EXTENSIONS = ['mp4'];\nconst MIME_TYPES = ['video/mp4'];\n\n// Loads a platform-specific image type that can be used as input data to WebGL textures\n\nconst VideoLoader = {\n  id: 'video',\n  name: 'Video',\n  version: VERSION,\n  mimeTypes: MIME_TYPES,\n  extensions: EXTENSIONS,\n\n  parse: parseVideo,\n\n  // test: arrayBuffer => Boolean(getBinaryImageMetadata(new DataView(arrayBuffer))),\n  options: {\n    video: {}\n  }\n};\n\nexport default VideoLoader;\n"],"file":"video-loader.js"}