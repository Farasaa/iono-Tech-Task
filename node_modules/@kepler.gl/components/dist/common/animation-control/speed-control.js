"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledComponents2 = require("../styled-components");

var _iconButton = _interopRequireDefault(require("../icon-button"));

var _styles = require("@kepler.gl/styles");

var _utils = require("@kepler.gl/utils");

var _templateObject, _templateObject2;

var StyledSpeedControl = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  align-items: center;\n\n  .animation-control__speed-slider {\n    left: 0;\n    ", "\n  }\n"])), _styles.media.palm(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n      left: 60px;\n    "]))));

var DELAY_SHOW = 500;
var PRECISE_SPEED_ROUND = 1;

function SpeedControlFactory(AnimationSpeedSlider) {
  var SpeedControl = function SpeedControl(_ref) {
    var showAnimationWindowControl = _ref.showAnimationWindowControl,
        updateAnimationSpeed = _ref.updateAnimationSpeed,
        btnStyle = _ref.btnStyle,
        hideAndShowSpeedControl = _ref.hideAndShowSpeedControl,
        buttonHeight = _ref.buttonHeight,
        playbackIcons = _ref.playbackIcons,
        speed = _ref.speed,
        isSpeedControlVisible = _ref.isSpeedControlVisible;
    return showAnimationWindowControl || !updateAnimationSpeed ? null : /*#__PURE__*/_react["default"].createElement(StyledSpeedControl, null, /*#__PURE__*/_react["default"].createElement(_iconButton["default"], (0, _extends2["default"])({
      "data-tip": true,
      "data-for": "animate-speed",
      className: "playback-control-button"
    }, btnStyle, {
      onClick: hideAndShowSpeedControl
    }), /*#__PURE__*/_react["default"].createElement(playbackIcons.speed, {
      height: buttonHeight
    }), /*#__PURE__*/_react["default"].createElement(_styledComponents2.Tooltip, {
      id: "animate-speed",
      place: "top",
      delayShow: DELAY_SHOW,
      effect: "solid"
    }, /*#__PURE__*/_react["default"].createElement("span", null, (0, _utils.preciseRound)(speed, PRECISE_SPEED_ROUND), "x"))), isSpeedControlVisible ? /*#__PURE__*/_react["default"].createElement(AnimationSpeedSlider, {
      onHide: hideAndShowSpeedControl,
      updateAnimationSpeed: updateAnimationSpeed,
      speed: speed
    }) : null);
  };

  return SpeedControl;
}

var _default = SpeedControlFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vYW5pbWF0aW9uLWNvbnRyb2wvc3BlZWQtY29udHJvbC50c3giXSwibmFtZXMiOlsiU3R5bGVkU3BlZWRDb250cm9sIiwic3R5bGVkIiwiZGl2IiwibWVkaWEiLCJwYWxtIiwiREVMQVlfU0hPVyIsIlBSRUNJU0VfU1BFRURfUk9VTkQiLCJTcGVlZENvbnRyb2xGYWN0b3J5IiwiQW5pbWF0aW9uU3BlZWRTbGlkZXIiLCJTcGVlZENvbnRyb2wiLCJzaG93QW5pbWF0aW9uV2luZG93Q29udHJvbCIsInVwZGF0ZUFuaW1hdGlvblNwZWVkIiwiYnRuU3R5bGUiLCJoaWRlQW5kU2hvd1NwZWVkQ29udHJvbCIsImJ1dHRvbkhlaWdodCIsInBsYXliYWNrSWNvbnMiLCJzcGVlZCIsImlzU3BlZWRDb250cm9sVmlzaWJsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUdBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsa0JBQWtCLEdBQUdDLDZCQUFPQyxHQUFWLHdNQU1sQkMsY0FBTUMsSUFOWSxrSEFBeEI7O0FBWUEsSUFBTUMsVUFBVSxHQUFHLEdBQW5CO0FBQ0EsSUFBTUMsbUJBQW1CLEdBQUcsQ0FBNUI7O0FBRUEsU0FBU0MsbUJBQVQsQ0FBNkJDLG9CQUE3QixFQUFtRDtBQUNqRCxNQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxPQVNmO0FBQUEsUUFSSkMsMEJBUUksUUFSSkEsMEJBUUk7QUFBQSxRQVBKQyxvQkFPSSxRQVBKQSxvQkFPSTtBQUFBLFFBTkpDLFFBTUksUUFOSkEsUUFNSTtBQUFBLFFBTEpDLHVCQUtJLFFBTEpBLHVCQUtJO0FBQUEsUUFKSkMsWUFJSSxRQUpKQSxZQUlJO0FBQUEsUUFISkMsYUFHSSxRQUhKQSxhQUdJO0FBQUEsUUFGSkMsS0FFSSxRQUZKQSxLQUVJO0FBQUEsUUFESkMscUJBQ0ksUUFESkEscUJBQ0k7QUFDSixXQUFPUCwwQkFBMEIsSUFBSSxDQUFDQyxvQkFBL0IsR0FBc0QsSUFBdEQsZ0JBQ0wsZ0NBQUMsa0JBQUQscUJBQ0UsZ0NBQUMsc0JBQUQ7QUFDRSxzQkFERjtBQUVFLGtCQUFTLGVBRlg7QUFHRSxNQUFBLFNBQVMsRUFBQztBQUhaLE9BSU1DLFFBSk47QUFLRSxNQUFBLE9BQU8sRUFBRUM7QUFMWCxxQkFPRSxnQ0FBQyxhQUFELENBQWUsS0FBZjtBQUFxQixNQUFBLE1BQU0sRUFBRUM7QUFBN0IsTUFQRixlQVFFLGdDQUFDLDBCQUFEO0FBQVMsTUFBQSxFQUFFLEVBQUMsZUFBWjtBQUE0QixNQUFBLEtBQUssRUFBQyxLQUFsQztBQUF3QyxNQUFBLFNBQVMsRUFBRVQsVUFBbkQ7QUFBK0QsTUFBQSxNQUFNLEVBQUM7QUFBdEUsb0JBQ0UsOENBQU8seUJBQWFXLEtBQWIsRUFBb0JWLG1CQUFwQixDQUFQLE1BREYsQ0FSRixDQURGLEVBYUdXLHFCQUFxQixnQkFDcEIsZ0NBQUMsb0JBQUQ7QUFDRSxNQUFBLE1BQU0sRUFBRUosdUJBRFY7QUFFRSxNQUFBLG9CQUFvQixFQUFFRixvQkFGeEI7QUFHRSxNQUFBLEtBQUssRUFBRUs7QUFIVCxNQURvQixHQU1sQixJQW5CTixDQURGO0FBdUJELEdBakNEOztBQW1DQSxTQUFPUCxZQUFQO0FBQ0Q7O2VBRWNGLG1CIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtUb29sdGlwfSBmcm9tICcuLi9zdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgSWNvbkJ1dHRvbiBmcm9tICcuLi9pY29uLWJ1dHRvbic7XG5pbXBvcnQge21lZGlhfSBmcm9tICdAa2VwbGVyLmdsL3N0eWxlcyc7XG5pbXBvcnQge3ByZWNpc2VSb3VuZH0gZnJvbSAnQGtlcGxlci5nbC91dGlscyc7XG5cbmNvbnN0IFN0eWxlZFNwZWVkQ29udHJvbCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgLmFuaW1hdGlvbi1jb250cm9sX19zcGVlZC1zbGlkZXIge1xuICAgIGxlZnQ6IDA7XG4gICAgJHttZWRpYS5wYWxtYFxuICAgICAgbGVmdDogNjBweDtcbiAgICBgfVxuICB9XG5gO1xuXG5jb25zdCBERUxBWV9TSE9XID0gNTAwO1xuY29uc3QgUFJFQ0lTRV9TUEVFRF9ST1VORCA9IDE7XG5cbmZ1bmN0aW9uIFNwZWVkQ29udHJvbEZhY3RvcnkoQW5pbWF0aW9uU3BlZWRTbGlkZXIpIHtcbiAgY29uc3QgU3BlZWRDb250cm9sID0gKHtcbiAgICBzaG93QW5pbWF0aW9uV2luZG93Q29udHJvbCxcbiAgICB1cGRhdGVBbmltYXRpb25TcGVlZCxcbiAgICBidG5TdHlsZSxcbiAgICBoaWRlQW5kU2hvd1NwZWVkQ29udHJvbCxcbiAgICBidXR0b25IZWlnaHQsXG4gICAgcGxheWJhY2tJY29ucyxcbiAgICBzcGVlZCxcbiAgICBpc1NwZWVkQ29udHJvbFZpc2libGVcbiAgfSkgPT4ge1xuICAgIHJldHVybiBzaG93QW5pbWF0aW9uV2luZG93Q29udHJvbCB8fCAhdXBkYXRlQW5pbWF0aW9uU3BlZWQgPyBudWxsIDogKFxuICAgICAgPFN0eWxlZFNwZWVkQ29udHJvbD5cbiAgICAgICAgPEljb25CdXR0b25cbiAgICAgICAgICBkYXRhLXRpcFxuICAgICAgICAgIGRhdGEtZm9yPVwiYW5pbWF0ZS1zcGVlZFwiXG4gICAgICAgICAgY2xhc3NOYW1lPVwicGxheWJhY2stY29udHJvbC1idXR0b25cIlxuICAgICAgICAgIHsuLi5idG5TdHlsZX1cbiAgICAgICAgICBvbkNsaWNrPXtoaWRlQW5kU2hvd1NwZWVkQ29udHJvbH1cbiAgICAgICAgPlxuICAgICAgICAgIDxwbGF5YmFja0ljb25zLnNwZWVkIGhlaWdodD17YnV0dG9uSGVpZ2h0fSAvPlxuICAgICAgICAgIDxUb29sdGlwIGlkPVwiYW5pbWF0ZS1zcGVlZFwiIHBsYWNlPVwidG9wXCIgZGVsYXlTaG93PXtERUxBWV9TSE9XfSBlZmZlY3Q9XCJzb2xpZFwiPlxuICAgICAgICAgICAgPHNwYW4+e3ByZWNpc2VSb3VuZChzcGVlZCwgUFJFQ0lTRV9TUEVFRF9ST1VORCl9eDwvc3Bhbj5cbiAgICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICAgIDwvSWNvbkJ1dHRvbj5cbiAgICAgICAge2lzU3BlZWRDb250cm9sVmlzaWJsZSA/IChcbiAgICAgICAgICA8QW5pbWF0aW9uU3BlZWRTbGlkZXJcbiAgICAgICAgICAgIG9uSGlkZT17aGlkZUFuZFNob3dTcGVlZENvbnRyb2x9XG4gICAgICAgICAgICB1cGRhdGVBbmltYXRpb25TcGVlZD17dXBkYXRlQW5pbWF0aW9uU3BlZWR9XG4gICAgICAgICAgICBzcGVlZD17c3BlZWR9XG4gICAgICAgICAgLz5cbiAgICAgICAgKSA6IG51bGx9XG4gICAgICA8L1N0eWxlZFNwZWVkQ29udHJvbD5cbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBTcGVlZENvbnRyb2w7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNwZWVkQ29udHJvbEZhY3Rvcnk7XG4iXX0=