"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _log = _interopRequireDefault(require("../utils/log"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var version = typeof __VERSION__ !== 'undefined' ? __VERSION__ : globalThis.HUBBLE_VERSION || 'untranspiled source';
var existingVersion = globalThis.hubble && globalThis.hubble.VERSION;

if (existingVersion && existingVersion !== version) {
  throw new Error("hubble.gl - multiple versions detected: ".concat(existingVersion, " vs ").concat(version));
}

if (!existingVersion) {
  _log.default.log(1, "hubble.gl ".concat(version))();

  globalThis.hubble = _objectSpread(_objectSpread({}, globalThis.hubble), {}, {
    VERSION: version,
    version: version,
    log: _log.default
  });
}

var _default = globalThis.hubble;
exports.default = _default;
//# sourceMappingURL=init.js.map