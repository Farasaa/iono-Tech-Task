{"version":3,"sources":["../../../../src/components/export-video/constants.js"],"names":["DEFAULT_ICON_BUTTON_HEIGHT","DEFAULT_BUTTON_HEIGHT","DEFAULT_BUTTON_WIDTH","DEFAULT_PADDING","DEFAULT_ROW_GAP","DEFAULT_SETTINGS_WIDTH","DEFAULT_FILENAME","SIDEPANEL_WIDTH","FORMATS","value","label","RESOLUTIONS","width","height","isResolution","option","getResolutionSetting","find"],"mappings":"AAoBA,OAAO,MAAMA,0BAA0B,GAAG,MAAnC;AACP,OAAO,MAAMC,qBAAqB,GAAG,MAA9B;AACP,OAAO,MAAMC,oBAAoB,GAAG,MAA7B;AACP,OAAO,MAAMC,eAAe,GAAG,EAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,EAAxB;AACP,OAAO,MAAMC,sBAAsB,GAAG,GAA/B;AAEP,OAAO,MAAMC,gBAAgB,GAAG,WAAzB;AAEP,OAAO,MAAMC,eAAe,GAAG,GAAxB;AAEP,OAAO,MAAMC,OAAO,GAAG,CACrB;AACEC,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADqB,EAKrB;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALqB,EASrB;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATqB,EAarB;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbqB,CAAhB;AAmBP,OAAO,MAAMC,WAAW,GAAG,CACzB;AACEF,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,kBAFT;AAGEE,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CADyB,EAOzB;AACEJ,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE,kBAFT;AAGEE,EAAAA,KAAK,EAAE,IAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAPyB,EAazB;AACEJ,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE,sBAFT;AAGEE,EAAAA,KAAK,EAAE,IAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAbyB,EAmBzB;AACEJ,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEE,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAnByB,EAyBzB;AACEJ,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEE,EAAAA,KAAK,EAAE,IAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAzByB,EA+BzB;AACEJ,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE,qBAFT;AAGEE,EAAAA,KAAK,EAAE,IAHT;AAIEC,EAAAA,MAAM,EAAE;AAJV,CA/ByB,CAApB;AAuCP,OAAO,MAAMC,YAAY,GAAGL,KAAK,IAAIM,MAAM,IAAIA,MAAM,CAACN,KAAP,KAAiBA,KAAzD;AAEP,OAAO,SAASO,oBAAT,CAA8BP,KAA9B,EAAqC;AAC1C,SAAOE,WAAW,CAACM,IAAZ,CAAiBH,YAAY,CAACL,KAAD,CAA7B,KAAyCE,WAAW,CAAC,CAAD,CAA3D;AACD","sourcesContent":["// Copyright (c) 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport const DEFAULT_ICON_BUTTON_HEIGHT = '16px';\nexport const DEFAULT_BUTTON_HEIGHT = '32px';\nexport const DEFAULT_BUTTON_WIDTH = '64px';\nexport const DEFAULT_PADDING = 32;\nexport const DEFAULT_ROW_GAP = 16;\nexport const DEFAULT_SETTINGS_WIDTH = 280;\n\nexport const DEFAULT_FILENAME = 'kepler.gl';\n\nexport const SIDEPANEL_WIDTH = 300;\n\nexport const FORMATS = [\n  {\n    value: 'gif',\n    label: 'GIF'\n  },\n  {\n    value: 'webm',\n    label: 'WebM Video'\n  },\n  {\n    value: 'png',\n    label: 'PNG Sequence'\n  },\n  {\n    value: 'jpeg',\n    label: 'JPEG Sequence'\n  }\n];\n\nexport const RESOLUTIONS = [\n  {\n    value: '960x540',\n    label: 'Good 16:9 (540p)',\n    width: 960,\n    height: 540\n  },\n  {\n    value: '1280x720',\n    label: 'High 16:9 (720p)',\n    width: 1280,\n    height: 720\n  },\n  {\n    value: '1920x1080',\n    label: 'Highest 16:9 (1080p)',\n    width: 1920,\n    height: 1080\n  },\n  {\n    value: '640x480',\n    label: 'Good 4:3 (480p)',\n    width: 640,\n    height: 480\n  },\n  {\n    value: '1280x960',\n    label: 'High 4:3 (960p)',\n    width: 1280,\n    height: 960\n  },\n  {\n    value: '1920x1440',\n    label: 'Highest 4:3 (1440p)',\n    width: 1920,\n    height: 1440\n  }\n];\n\nexport const isResolution = value => option => option.value === value;\n\nexport function getResolutionSetting(value) {\n  return RESOLUTIONS.find(isResolution(value)) || RESOLUTIONS[0];\n}\n"],"file":"constants.js"}