import React from 'react';
import { PanelListView } from '@kepler.gl/types';
declare type ToggleOptionProps = {
    isActive: boolean;
    onClick: () => void;
    option: typeof TOGGLE_OPTIONS[0];
};
declare type PanelViewListToggleProps = {
    mode: PanelListView;
    togglePanelListView: (view: string) => void;
};
export declare const StyledToggleOption: import("styled-components").StyledComponent<"div", any, {
    className: "layer-panel-toggle-option";
} & {
    active: boolean;
}, "className">;
declare function ToggleOptionFactory(): React.FC<ToggleOptionProps>;
declare const TOGGLE_OPTIONS: ({
    id: "list";
    iconComponent: {
        (props: Partial<import("../common/icons").BaseProps>): React.JSX.Element;
        defaultProps: {
            height: string;
            fill: string;
            viewBox: string;
            predefinedClassName: string;
        };
    };
    label: string;
} | {
    id: "byDataset";
    iconComponent: {
        (props: Partial<import("../common/icons").BaseProps>): React.JSX.Element;
        defaultProps: {
            height: string;
            fill: string;
            viewBox: string;
            predefinedClassName: string;
        };
    };
    label: string;
})[];
declare function PanelViewListToggleFactory(ToggleOption: ReturnType<typeof ToggleOptionFactory>): React.FC<PanelViewListToggleProps>;
declare namespace PanelViewListToggleFactory {
    var deps: (typeof ToggleOptionFactory)[];
}
export default PanelViewListToggleFactory;
