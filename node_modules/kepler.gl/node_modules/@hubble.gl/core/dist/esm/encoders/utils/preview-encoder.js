import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

import FrameEncoder from '../frame-encoder';

var PreviewEncoder = function (_FrameEncoder) {
  _inherits(PreviewEncoder, _FrameEncoder);

  var _super = _createSuper(PreviewEncoder);

  function PreviewEncoder() {
    var _this;

    _classCallCheck(this, PreviewEncoder);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "af", void 0);

    return _this;
  }

  _createClass(PreviewEncoder, [{
    key: "start",
    value: function start() {
      if (this.af) {
        cancelAnimationFrame(this.af);
      }
    }
  }, {
    key: "add",
    value: function () {
      var _add = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(canvas) {
        var _this2 = this;

        var animationFrame;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                animationFrame = new Promise(function (resolve) {
                  if (_this2.af) {
                    cancelAnimationFrame(_this2.af);
                  }

                  _this2.af = requestAnimationFrame(resolve);
                });
                return _context.abrupt("return", animationFrame);

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function add(_x) {
        return _add.apply(this, arguments);
      }

      return add;
    }()
  }, {
    key: "save",
    value: function () {
      var _save = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2() {
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this.af) {
                  cancelAnimationFrame(this.af);
                }

                _context2.next = 3;
                return Promise.resolve();

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function save() {
        return _save.apply(this, arguments);
      }

      return save;
    }()
  }]);

  return PreviewEncoder;
}(FrameEncoder);

export { PreviewEncoder as default };
//# sourceMappingURL=preview-encoder.js.map