import { Feature, BBox } from 'geojson';
import { Field, FieldPair } from '@kepler.gl/types';
import { DataContainerInterface } from '@kepler.gl/utils';
import { DeckGlGeoTypes, GeojsonDataMaps } from './geojson-layer/geojson-utils';
export declare function assignPointPairToLayerColumn(pair: FieldPair, hasAlt: boolean): {
    lat: {
        fieldIdx: number;
        value: string;
    };
    lng: {
        fieldIdx: number;
        value: string;
    };
    altitude?: undefined;
} | {
    lat: {
        fieldIdx: number;
        value: string;
    };
    lng: {
        fieldIdx: number;
        value: string;
    };
    altitude: {
        value: null;
        fieldIdx: number;
        optional: boolean;
    } | {
        fieldIdx: number;
        value: string;
        optional: boolean;
    };
};
export declare type GeojsonLayerMetaProps = {
    dataToFeature: GeojsonDataMaps;
    featureTypes: DeckGlGeoTypes;
    bounds: BBox | null;
    fixedRadius: boolean;
    centroids?: Array<number[] | null>;
};
export declare function getGeojsonLayerMetaFromArrow({ dataContainer, getGeoColumn, getGeoField, chunkIndex }: {
    dataContainer: DataContainerInterface;
    getGeoColumn: (dataContainer: DataContainerInterface) => unknown;
    getGeoField: (dataContainer: DataContainerInterface) => Field | null;
    chunkIndex?: number;
}): GeojsonLayerMetaProps;
export declare function isLayerHoveredFromArrow(objectInfo: any, layerId: string): boolean;
export declare function getHoveredObjectFromArrow(objectInfo: any, dataContainer: any, layerId: any, columnAccessor: any, fieldAccessor: any): Feature | null;
