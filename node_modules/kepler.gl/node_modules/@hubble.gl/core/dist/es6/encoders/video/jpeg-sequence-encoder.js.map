{"version":3,"sources":["../../../../src/encoders/video/jpeg-sequence-encoder.js"],"names":["FrameEncoder","TARBuilder","pad","canvasToArrayBuffer","JPEGSequenceEncoder","constructor","settings","mimeType","properties","extension","extensions","quality","jpeg","tarBuilder","start","add","canvas","buffer","filename","count","addFile","save","build"],"mappings":";AAmBA,OAAOA,YAAP,MAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAAQC,GAAR,EAAaC,mBAAb,QAAuC,UAAvC;;AACA,MAAMC,mBAAN,SAAkCJ,YAAlC,CAA+C;AAK7CK,EAAAA,WAAW,CAACC,QAAD,EAAW;AACpB,UAAMA,QAAN;;AADoB;;AAEpB,SAAKC,QAAL,GAAgBN,UAAU,CAACO,UAAX,CAAsBD,QAAtC;AACA,SAAKE,SAAL,cAAqBR,UAAU,CAACO,UAAX,CAAsBE,UAAtB,CAAiC,CAAjC,CAArB;AACA,SAAKC,OAAL,GAAe,GAAf;;AACA,QAAIL,QAAQ,CAACM,IAAT,IAAiBN,QAAQ,CAACM,IAAT,CAAcD,OAAnC,EAA4C;AAC1C,WAAKA,OAAL,GAAeL,QAAQ,CAACM,IAAT,CAAcD,OAA7B;AACD;;AACD,SAAKE,UAAL,GAAkB,IAAlB;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,SAAKD,UAAL,GAAkB,IAAIZ,UAAJ,CAAe,EAAf,CAAlB;AACD;;AAGD,QAAMc,GAAN,CAAUC,MAAV,EAAkB;AAChB,UAAMT,QAAQ,GAAG,YAAjB;AACA,UAAME,SAAS,GAAG,MAAlB;AACA,UAAMQ,MAAM,GAAG,MAAMd,mBAAmB,CAACa,MAAD,EAAST,QAAT,CAAxC;AACA,UAAMW,QAAQ,GAAGhB,GAAG,CAAC,KAAKW,UAAL,CAAgBM,KAAjB,CAAH,GAA6BV,SAA9C;AACA,SAAKI,UAAL,CAAgBO,OAAhB,CAAwBH,MAAxB,EAAgCC,QAAhC;AACD;;AAED,QAAMG,IAAN,GAAa;AACX,WAAO,KAAKR,UAAL,CAAgBS,KAAhB,EAAP;AACD;;AA/B4C;;AAkC/C,eAAelB,mBAAf","sourcesContent":["// Copyright (c) 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport FrameEncoder from '../frame-encoder';\nimport TARBuilder from '../tar/tar-builder';\nimport {pad, canvasToArrayBuffer} from '../utils';\nclass JPEGSequenceEncoder extends FrameEncoder {\n  /** @type {TARBuilder} */\n  tarBuilder;\n\n  /** @param {import('types').FrameEncoderSettings} settings */\n  constructor(settings) {\n    super(settings);\n    this.mimeType = TARBuilder.properties.mimeType;\n    this.extension = `.${TARBuilder.properties.extensions[0]}`;\n    this.quality = 0.8;\n    if (settings.jpeg && settings.jpeg.quality) {\n      this.quality = settings.jpeg.quality;\n    }\n    this.tarBuilder = null;\n  }\n\n  start() {\n    this.tarBuilder = new TARBuilder({});\n  }\n\n  /** @param {HTMLCanvasElement} canvas */\n  async add(canvas) {\n    const mimeType = 'image/jpeg';\n    const extension = '.jpg';\n    const buffer = await canvasToArrayBuffer(canvas, mimeType);\n    const filename = pad(this.tarBuilder.count) + extension;\n    this.tarBuilder.addFile(buffer, filename);\n  }\n\n  async save() {\n    return this.tarBuilder.build();\n  }\n}\n\nexport default JPEGSequenceEncoder;\n"],"file":"jpeg-sequence-encoder.js"}