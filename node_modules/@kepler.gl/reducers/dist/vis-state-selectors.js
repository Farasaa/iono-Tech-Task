"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFileExtensions = exports.getFileFormatNames = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _reselect = require("reselect");

// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
// NOTE: default formats must match file-handler-test.js
var DEFAULT_FILE_EXTENSIONS = ['csv', 'json', 'geojson', 'arrow'];
var DEFAULT_FILE_FORMATS = ['CSV', 'Json', 'GeoJSON', 'Arrow'];
var getFileFormatNames = (0, _reselect.createSelector)( // @ts-expect-error
function (state) {
  return state.loaders;
}, function (loaders) {
  return [].concat(DEFAULT_FILE_FORMATS, (0, _toConsumableArray2["default"])(loaders.map(function (loader) {
    return loader.name;
  })));
});
exports.getFileFormatNames = getFileFormatNames;
var getFileExtensions = (0, _reselect.createSelector)( // @ts-expect-error
function (state) {
  return state.loaders;
}, function (loaders) {
  return [].concat(DEFAULT_FILE_EXTENSIONS, (0, _toConsumableArray2["default"])(loaders.flatMap(function (loader) {
    return loader.extensions;
  })));
});
exports.getFileExtensions = getFileExtensions;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy92aXMtc3RhdGUtc2VsZWN0b3JzLnRzIl0sIm5hbWVzIjpbIkRFRkFVTFRfRklMRV9FWFRFTlNJT05TIiwiREVGQVVMVF9GSUxFX0ZPUk1BVFMiLCJnZXRGaWxlRm9ybWF0TmFtZXMiLCJzdGF0ZSIsImxvYWRlcnMiLCJtYXAiLCJsb2FkZXIiLCJuYW1lIiwiZ2V0RmlsZUV4dGVuc2lvbnMiLCJmbGF0TWFwIiwiZXh0ZW5zaW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFHQTs7QUFIQTtBQUNBO0FBSUE7QUFDQSxJQUFNQSx1QkFBdUIsR0FBRyxDQUFDLEtBQUQsRUFBUSxNQUFSLEVBQWdCLFNBQWhCLEVBQTJCLE9BQTNCLENBQWhDO0FBQ0EsSUFBTUMsb0JBQW9CLEdBQUcsQ0FBQyxLQUFELEVBQVEsTUFBUixFQUFnQixTQUFoQixFQUEyQixPQUEzQixDQUE3QjtBQUVPLElBQU1DLGtCQUFrQixHQUFHLCtCQUNoQztBQUNBLFVBQUFDLEtBQUs7QUFBQSxTQUFJQSxLQUFLLENBQUNDLE9BQVY7QUFBQSxDQUYyQixFQUdoQyxVQUFBQSxPQUFPO0FBQUEsbUJBQVFILG9CQUFSLHNDQUFpQ0csT0FBTyxDQUFDQyxHQUFSLENBQVksVUFBQUMsTUFBTTtBQUFBLFdBQUlBLE1BQU0sQ0FBQ0MsSUFBWDtBQUFBLEdBQWxCLENBQWpDO0FBQUEsQ0FIeUIsQ0FBM0I7O0FBTUEsSUFBTUMsaUJBQWlCLEdBQUcsK0JBQy9CO0FBQ0EsVUFBQUwsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ0MsT0FBVjtBQUFBLENBRjBCLEVBRy9CLFVBQUFBLE9BQU87QUFBQSxtQkFBUUosdUJBQVIsc0NBQW9DSSxPQUFPLENBQUNLLE9BQVIsQ0FBZ0IsVUFBQUgsTUFBTTtBQUFBLFdBQUlBLE1BQU0sQ0FBQ0ksVUFBWDtBQUFBLEdBQXRCLENBQXBDO0FBQUEsQ0FId0IsQ0FBMUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQge2NyZWF0ZVNlbGVjdG9yfSBmcm9tICdyZXNlbGVjdCc7XG5cbi8vIE5PVEU6IGRlZmF1bHQgZm9ybWF0cyBtdXN0IG1hdGNoIGZpbGUtaGFuZGxlci10ZXN0LmpzXG5jb25zdCBERUZBVUxUX0ZJTEVfRVhURU5TSU9OUyA9IFsnY3N2JywgJ2pzb24nLCAnZ2VvanNvbicsICdhcnJvdyddO1xuY29uc3QgREVGQVVMVF9GSUxFX0ZPUk1BVFMgPSBbJ0NTVicsICdKc29uJywgJ0dlb0pTT04nLCAnQXJyb3cnXTtcblxuZXhwb3J0IGNvbnN0IGdldEZpbGVGb3JtYXROYW1lcyA9IGNyZWF0ZVNlbGVjdG9yKFxuICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gIHN0YXRlID0+IHN0YXRlLmxvYWRlcnMsXG4gIGxvYWRlcnMgPT4gWy4uLkRFRkFVTFRfRklMRV9GT1JNQVRTLCAuLi5sb2FkZXJzLm1hcChsb2FkZXIgPT4gbG9hZGVyLm5hbWUpXVxuKTtcblxuZXhwb3J0IGNvbnN0IGdldEZpbGVFeHRlbnNpb25zID0gY3JlYXRlU2VsZWN0b3IoXG4gIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgc3RhdGUgPT4gc3RhdGUubG9hZGVycyxcbiAgbG9hZGVycyA9PiBbLi4uREVGQVVMVF9GSUxFX0VYVEVOU0lPTlMsIC4uLmxvYWRlcnMuZmxhdE1hcChsb2FkZXIgPT4gbG9hZGVyLmV4dGVuc2lvbnMpXVxuKTtcbiJdfQ==