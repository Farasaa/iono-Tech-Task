"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _reactVis = require("react-vis");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _utils = require("@kepler.gl/utils");

var _templateObject, _templateObject2;

var LineChartWrapper = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  .rv-xy-plot {\n    /* important for rendering hint */\n    position: relative;\n  }\n  .rv-xy-plot__inner {\n    /* important to show axis */\n    overflow: visible;\n  }\n\n  .rv-xy-plot__grid-lines__line {\n    stroke: ", ";\n    stroke-dasharray: 1px 4px;\n  }\n\n  .rv-xy-plot__axis__tick__text {\n    font-size: 9px;\n    fill: ", ";\n  }\n"])), function (props) {
  return props.theme.histogramFillOutRange;
}, function (props) {
  return props.theme.textColor;
});

var StyledHint = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  background-color: #d3d8e0;\n  border-radius: 2px;\n  color: ", ";\n  font-size: 9px;\n  margin: 4px;\n  padding: 3px 6px;\n  pointer-events: none;\n  user-select: none;\n"])), function (props) {
  return props.theme.textColorLT;
});

var HintContent = function HintContent(_ref) {
  var x = _ref.x,
      y = _ref.y,
      format = _ref.format;
  return /*#__PURE__*/_react["default"].createElement(StyledHint, null, /*#__PURE__*/_react["default"].createElement("div", {
    className: "hint--x"
  }, format(x)), /*#__PURE__*/_react["default"].createElement("div", {
    className: "row"
  }, y));
};

var MARGIN = {
  top: 0,
  bottom: 0,
  left: 0,
  right: 0
};

function LineChartFactory() {
  var LineChartComponent = function LineChartComponent(_ref2) {
    var brushComponent = _ref2.brushComponent,
        brushing = _ref2.brushing,
        color = _ref2.color,
        enableChartHover = _ref2.enableChartHover,
        height = _ref2.height,
        hoveredDP = _ref2.hoveredDP,
        isEnlarged = _ref2.isEnlarged,
        lineChart = _ref2.lineChart,
        margin = _ref2.margin,
        onMouseMove = _ref2.onMouseMove,
        width = _ref2.width,
        timezone = _ref2.timezone,
        timeFormat = _ref2.timeFormat;

    var _ref3 = lineChart || {},
        series = _ref3.series,
        yDomain = _ref3.yDomain;

    var brushData = (0, _react.useMemo)(function () {
      return series && series[0] && series[0].x && yDomain && yDomain[1] ? [{
        x: series[0].x,
        y: yDomain[1],
        customComponent: function customComponent() {
          return brushComponent;
        }
      }] : [];
    }, [series, yDomain, brushComponent]);
    var hintFormatter = (0, _react.useMemo)(function () {
      return (0, _utils.datetimeFormatter)(timezone)(timeFormat);
    }, [timezone, timeFormat]);
    return /*#__PURE__*/_react["default"].createElement(LineChartWrapper, {
      style: {
        marginTop: "".concat(margin.top, "px")
      }
    }, /*#__PURE__*/_react["default"].createElement(_reactVis.XYPlot, {
      xType: "time",
      width: width,
      height: height,
      margin: MARGIN,
      onMouseLeave: function onMouseLeave() {
        onMouseMove(null);
      }
    }, /*#__PURE__*/_react["default"].createElement(_reactVis.HorizontalGridLines, {
      tickTotal: 3
    }), /*#__PURE__*/_react["default"].createElement(_reactVis.LineSeries, {
      style: {
        fill: 'none'
      },
      color: color,
      data: series,
      onNearestX: enableChartHover ? onMouseMove : undefined
    }), /*#__PURE__*/_react["default"].createElement(_reactVis.MarkSeries, {
      data: hoveredDP ? [hoveredDP] : [],
      color: color
    }), /*#__PURE__*/_react["default"].createElement(_reactVis.CustomSVGSeries, {
      data: brushData
    }), isEnlarged && /*#__PURE__*/_react["default"].createElement(_reactVis.YAxis, {
      tickTotal: 3
    }), hoveredDP && enableChartHover && !brushing ? /*#__PURE__*/_react["default"].createElement(_reactVis.Hint, {
      value: hoveredDP
    }, /*#__PURE__*/_react["default"].createElement(HintContent, (0, _extends2["default"])({}, hoveredDP, {
      format: hintFormatter
    }))) : null));
  };

  return LineChartComponent;
}

var _default = LineChartFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,