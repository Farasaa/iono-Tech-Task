{"version":3,"file":"arrow-like-schema.js","names":["ArrowLikeField","ArrowLikeSchema","constructor","fields","metadata","arguments","length","undefined","Map","map","field","name","type","nullable","Object","entries","compareTo","other","i","select","nameMap","create","_len","columnNames","Array","_key","selectedFields","filter","selectAt","_len2","columnIndices","_key2","index","Boolean","assign","schemaOrFields","otherArrowLikeSchema","mergeMaps","fieldMap","mergedFields","values","m1","m2"],"sources":["../../../../src/lib/table/arrow-api/arrow-like-schema.ts"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {SchemaMetadata, Field} from '../../../types/schema';\nimport {ArrowLikeField} from './arrow-like-field';\n\nexport class ArrowLikeSchema {\n  fields: ArrowLikeField[];\n  metadata: Map<string, string>;\n\n  constructor(\n    fields: ArrowLikeField[] | Field[],\n    metadata: SchemaMetadata | Map<string, string> = new Map<string, string>()\n  ) {\n    // checkNames(fields);\n    // For kepler fields, create arrow compatible `Fields` that have kepler fields as `metadata`\n    this.fields = fields.map(\n      (field) => new ArrowLikeField(field.name, field.type, field.nullable, field.metadata)\n    );\n    this.metadata =\n      metadata instanceof Map ? metadata : new Map<string, string>(Object.entries(metadata));\n  }\n\n  // TODO - arrow only seems to compare fields, not metadata\n  compareTo(other: ArrowLikeSchema): boolean {\n    if (this.metadata !== other.metadata) {\n      return false;\n    }\n    if (this.fields.length !== other.fields.length) {\n      return false;\n    }\n    for (let i = 0; i < this.fields.length; ++i) {\n      if (!this.fields[i].compareTo(other.fields[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  select(...columnNames: string[]): ArrowLikeSchema {\n    // Ensure column names reference valid fields\n    const nameMap = Object.create(null);\n    for (const name of columnNames) {\n      nameMap[name] = true;\n    }\n    const selectedFields = this.fields.filter((field) => nameMap[field.name]);\n    return new ArrowLikeSchema(selectedFields, this.metadata);\n  }\n\n  selectAt(...columnIndices: number[]): ArrowLikeSchema {\n    // Ensure column indices reference valid fields\n    const selectedFields = columnIndices.map((index) => this.fields[index]).filter(Boolean);\n    return new ArrowLikeSchema(selectedFields, this.metadata);\n  }\n\n  assign(schemaOrFields: ArrowLikeSchema | ArrowLikeField[]): ArrowLikeSchema {\n    let fields: ArrowLikeField[];\n    let metadata = this.metadata;\n\n    if (schemaOrFields instanceof ArrowLikeSchema) {\n      const otherArrowLikeSchema = schemaOrFields;\n      fields = otherArrowLikeSchema.fields;\n      metadata = mergeMaps(mergeMaps(new Map(), this.metadata), otherArrowLikeSchema.metadata);\n    } else {\n      fields = schemaOrFields;\n    }\n\n    // Create a merged list of fields, overwrite fields in place, new fields at end\n    const fieldMap: {[key: string]: ArrowLikeField} = Object.create(null);\n\n    for (const field of this.fields) {\n      fieldMap[field.name] = field;\n    }\n\n    for (const field of fields) {\n      fieldMap[field.name] = field;\n    }\n\n    const mergedFields = Object.values(fieldMap);\n\n    return new ArrowLikeSchema(mergedFields, metadata);\n  }\n}\n\n// Warn if any duplicated field names\n// function checkNames(fields: Field[]): void {\n//   const usedNames: Record<string, boolean> = {};\n//   for (const field of fields) {\n//     if (usedNames[field.name]) {\n//       // eslint-disable-next-line\n//       console.warn('ArrowLikeSchema: duplicated field name', field.name, field);\n//     }\n//     usedNames[field.name] = true;\n//   }\n// }\n\nfunction mergeMaps<T>(m1: T, m2: T): T {\n  // @ts-ignore\n  return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n"],"mappings":"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"}