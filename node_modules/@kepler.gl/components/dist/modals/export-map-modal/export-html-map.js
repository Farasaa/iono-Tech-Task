"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = require("../../common/styled-components");

var _components = require("./components");

var _constants = require("@kepler.gl/constants");

var _styledComponents2 = _interopRequireDefault(require("styled-components"));

var _reactIntl = require("react-intl");

var _localization = require("@kepler.gl/localization");

var _templateObject, _templateObject2, _templateObject3;

var ExportMapStyledExportSection = (0, _styledComponents2["default"])(_styledComponents.StyledExportSection)(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  .disclaimer {\n    font-size: ", ";\n    color: ", ";\n    margin-top: 12px;\n  }\n"])), function (props) {
  return props.theme.inputFontSize;
}, function (props) {
  return props.theme.inputColor;
});

var StyledInput = _styledComponents2["default"].input(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  width: 100%;\n  padding: ", ";\n  color: ", ";\n  height: ", ";\n  outline: 0;\n  font-size: ", ";\n\n  :active,\n  :focus,\n  &.focus,\n  &.active {\n    outline: 0;\n  }\n"])), function (props) {
  return props.theme.inputPadding;
}, function (props) {
  return props.error ? 'red' : props.theme.titleColorLT;
}, function (props) {
  return props.theme.inputBoxHeight;
}, function (props) {
  return props.theme.inputFontSize;
});

var BigStyledTile = (0, _styledComponents2["default"])(_styledComponents.StyledType)(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  height: unset;\n  width: unset;\n  img {\n    width: 180px;\n    height: 120px;\n  }\n"])));

function ExportHtmlMapFactory() {
  /** @type {typeof import('./export-html-map').ExportHtmlMap} */
  var ExportHtmlMap = function ExportHtmlMap(_ref) {
    var _ref$onChangeExportMa = _ref.onChangeExportMapHTMLMode,
        onChangeExportMapHTMLMode = _ref$onChangeExportMa === void 0 ? function (mode) {} : _ref$onChangeExportMa,
        _ref$onEditUserMapbox = _ref.onEditUserMapboxAccessToken,
        onEditUserMapboxAccessToken = _ref$onEditUserMapbox === void 0 ? function (token) {} : _ref$onEditUserMapbox,
        _ref$options = _ref.options,
        options = _ref$options === void 0 ? {} : _ref$options,
        intl = _ref.intl;
    return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_components.StyledExportMapSection, null, /*#__PURE__*/_react["default"].createElement("div", {
      className: "description"
    }), /*#__PURE__*/_react["default"].createElement("div", {
      className: "selection"
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.exportMap.html.selection'
    }))), /*#__PURE__*/_react["default"].createElement(ExportMapStyledExportSection, {
      className: "export-map-modal__html-options"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "description"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "title"
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.exportMap.html.tokenTitle'
    })), /*#__PURE__*/_react["default"].createElement("div", {
      className: "subtitle"
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.exportMap.html.tokenSubtitle'
    }))), /*#__PURE__*/_react["default"].createElement("div", {
      className: "selection"
    }, /*#__PURE__*/_react["default"].createElement(StyledInput, {
      onChange: function onChange(e) {
        return onEditUserMapboxAccessToken(e.target.value);
      },
      type: "text",
      placeholder: intl.formatMessage({
        id: 'modal.exportMap.html.tokenPlaceholder'
      }),
      value: options ? options.userMapboxToken : ''
    }), /*#__PURE__*/_react["default"].createElement("div", {
      className: "disclaimer"
    }, /*#__PURE__*/_react["default"].createElement(_components.StyledWarning, null, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.exportMap.html.tokenMisuseWarning'
    })), /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.exportMap.html.tokenDisclaimer'
    }), /*#__PURE__*/_react["default"].createElement(_components.ExportMapLink, {
      href: _constants.EXPORT_HTML_MAP_DOC
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.exportMap.html.tokenUpdate'
    }))))), /*#__PURE__*/_react["default"].createElement(ExportMapStyledExportSection, null, /*#__PURE__*/_react["default"].createElement("div", {
      className: "description"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "title"
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.exportMap.html.modeTitle'
    })), /*#__PURE__*/_react["default"].createElement("div", {
      className: "subtitle"
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.exportMap.html.modeSubtitle1'
    }), /*#__PURE__*/_react["default"].createElement("a", {
      href: _constants.EXPORT_HTML_MAP_MODES_DOC
    }, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
      id: 'modal.exportMap.html.modeSubtitle2'
    })))), /*#__PURE__*/_react["default"].createElement("div", {
      className: "selection"
    }, _constants.EXPORT_HTML_MAP_MODE_OPTIONS.map(function (mode) {
      return /*#__PURE__*/_react["default"].createElement(BigStyledTile, {
        key: mode.id,
        selected: options.mode === mode.id,
        onClick: function onClick() {
          return mode.available && onChangeExportMapHTMLMode(mode.id);
        }
      }, /*#__PURE__*/_react["default"].createElement("img", {
        src: mode.url,
        alt: ""
      }), /*#__PURE__*/_react["default"].createElement("p", null, /*#__PURE__*/_react["default"].createElement(_localization.FormattedMessage, {
        id: 'modal.exportMap.html.modeDescription',
        values: {
          mode: intl.formatMessage({
            id: mode.label
          })
        }
      })), options.mode === mode.id && /*#__PURE__*/_react["default"].createElement(_styledComponents.CheckMark, null));
    }))));
  };

  ExportHtmlMap.displayName = 'ExportHtmlMap';
  return (0, _reactIntl.injectIntl)(ExportHtmlMap);
}

var _default = ExportHtmlMapFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,