"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getVertices = getVertices;
exports.getCentroid = getCentroid;
exports.idToPolygonGeo = idToPolygonGeo;
Object.defineProperty(exports, "h3GetResolution", {
  enumerable: true,
  get: function get() {
    return _h3Js.h3GetResolution;
  }
});
Object.defineProperty(exports, "h3IsValid", {
  enumerable: true,
  get: function get() {
    return _h3Js.h3IsValid;
  }
});
exports.getHexFields = exports.isHexField = void 0;

var _h3Js = require("h3-js");

var _constants = require("@kepler.gl/constants");

var _dataUtils = require("./data-utils");

// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
// get vertices should return [lon, lat]
function getVertices(_ref) {
  var id = _ref.id;
  // always reverse it
  return (0, _h3Js.h3ToGeoBoundary)(id, true);
} // get centroid should return [lon, lat]


function getCentroid(_ref2) {
  var id = _ref2.id;
  // always reverse it to [lng, lat]
  return (0, _h3Js.h3ToGeo)(id).reverse();
}

function idToPolygonGeo(object, properties) {
  if (!(object !== null && object !== void 0 && object.id)) {
    return null;
  }

  var vertices = getVertices(object);
  return {
    type: 'Feature',
    geometry: {
      coordinates: properties !== null && properties !== void 0 && properties.isClosed ? [vertices] : vertices,
      type: properties !== null && properties !== void 0 && properties.isClosed ? 'Polygon' : 'LineString'
    },
    properties: properties
  };
}

var isHexField = function isHexField(field, fieldIdx, dataContainer) {
  if (field.type !== _constants.ALL_FIELD_TYPES.string) {
    return false;
  }

  var firstDP = dataContainer.find(function (d) {
    return (0, _dataUtils.notNullorUndefined)(d.valueAt(fieldIdx));
  }, true);
  return firstDP && (0, _h3Js.h3IsValid)(firstDP.valueAt(fieldIdx));
};

exports.isHexField = isHexField;

var getHexFields = function getHexFields(fields, dataContainer) {
  return fields.filter(function (f, i) {
    return isHexField(f, i, dataContainer);
  });
};

exports.getHexFields = getHexFields;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9oMy11dGlscy50cyJdLCJuYW1lcyI6WyJnZXRWZXJ0aWNlcyIsImlkIiwiZ2V0Q2VudHJvaWQiLCJyZXZlcnNlIiwiaWRUb1BvbHlnb25HZW8iLCJvYmplY3QiLCJwcm9wZXJ0aWVzIiwidmVydGljZXMiLCJ0eXBlIiwiZ2VvbWV0cnkiLCJjb29yZGluYXRlcyIsImlzQ2xvc2VkIiwiaXNIZXhGaWVsZCIsImZpZWxkIiwiZmllbGRJZHgiLCJkYXRhQ29udGFpbmVyIiwiQUxMX0ZJRUxEX1RZUEVTIiwic3RyaW5nIiwiZmlyc3REUCIsImZpbmQiLCJkIiwidmFsdWVBdCIsImdldEhleEZpZWxkcyIsImZpZWxkcyIsImZpbHRlciIsImYiLCJpIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBTEE7QUFDQTtBQVVBO0FBQ08sU0FBU0EsV0FBVCxPQUEwQztBQUFBLE1BQXBCQyxFQUFvQixRQUFwQkEsRUFBb0I7QUFDL0M7QUFDQSxTQUFPLDJCQUFnQkEsRUFBaEIsRUFBb0IsSUFBcEIsQ0FBUDtBQUNELEMsQ0FFRDs7O0FBQ08sU0FBU0MsV0FBVCxRQUFvRDtBQUFBLE1BQTlCRCxFQUE4QixTQUE5QkEsRUFBOEI7QUFDekQ7QUFDQSxTQUFPLG1CQUFRQSxFQUFSLEVBQVlFLE9BQVosRUFBUDtBQUNEOztBQUVNLFNBQVNDLGNBQVQsQ0FBd0JDLE1BQXhCLEVBQWdEQyxVQUFoRCxFQUFrRTtBQUN2RSxNQUFJLEVBQUNELE1BQUQsYUFBQ0EsTUFBRCxlQUFDQSxNQUFNLENBQUVKLEVBQVQsQ0FBSixFQUFpQjtBQUNmLFdBQU8sSUFBUDtBQUNEOztBQUNELE1BQU1NLFFBQVEsR0FBR1AsV0FBVyxDQUFDSyxNQUFELENBQTVCO0FBRUEsU0FBTztBQUNMRyxJQUFBQSxJQUFJLEVBQUUsU0FERDtBQUVMQyxJQUFBQSxRQUFRLEVBQUU7QUFDUkMsTUFBQUEsV0FBVyxFQUFFSixVQUFVLFNBQVYsSUFBQUEsVUFBVSxXQUFWLElBQUFBLFVBQVUsQ0FBRUssUUFBWixHQUF1QixDQUFDSixRQUFELENBQXZCLEdBQW9DQSxRQUR6QztBQUVSQyxNQUFBQSxJQUFJLEVBQUVGLFVBQVUsU0FBVixJQUFBQSxVQUFVLFdBQVYsSUFBQUEsVUFBVSxDQUFFSyxRQUFaLEdBQXVCLFNBQXZCLEdBQW1DO0FBRmpDLEtBRkw7QUFNTEwsSUFBQUEsVUFBVSxFQUFWQTtBQU5LLEdBQVA7QUFRRDs7QUFFTSxJQUFNTSxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFDQyxLQUFELEVBQVFDLFFBQVIsRUFBa0JDLGFBQWxCLEVBQW9DO0FBQzVELE1BQUlGLEtBQUssQ0FBQ0wsSUFBTixLQUFlUSwyQkFBZ0JDLE1BQW5DLEVBQTJDO0FBQ3pDLFdBQU8sS0FBUDtBQUNEOztBQUVELE1BQU1DLE9BQU8sR0FBR0gsYUFBYSxDQUFDSSxJQUFkLENBQW1CLFVBQUFDLENBQUM7QUFBQSxXQUFJLG1DQUFtQkEsQ0FBQyxDQUFDQyxPQUFGLENBQVVQLFFBQVYsQ0FBbkIsQ0FBSjtBQUFBLEdBQXBCLEVBQWlFLElBQWpFLENBQWhCO0FBQ0EsU0FBT0ksT0FBTyxJQUFJLHFCQUFVQSxPQUFPLENBQUNHLE9BQVIsQ0FBZ0JQLFFBQWhCLENBQVYsQ0FBbEI7QUFDRCxDQVBNOzs7O0FBU0EsSUFBTVEsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsTUFBRCxFQUFTUixhQUFUO0FBQUEsU0FDMUJRLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLFVBQUNDLENBQUQsRUFBSUMsQ0FBSjtBQUFBLFdBQVVkLFVBQVUsQ0FBQ2EsQ0FBRCxFQUFJQyxDQUFKLEVBQU9YLGFBQVAsQ0FBcEI7QUFBQSxHQUFkLENBRDBCO0FBQUEsQ0FBckIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQge2gzR2V0UmVzb2x1dGlvbiwgSDNJbmRleCwgaDNJc1ZhbGlkLCBoM1RvR2VvLCBoM1RvR2VvQm91bmRhcnl9IGZyb20gJ2gzLWpzJztcbmltcG9ydCB7QUxMX0ZJRUxEX1RZUEVTfSBmcm9tICdAa2VwbGVyLmdsL2NvbnN0YW50cyc7XG5pbXBvcnQge25vdE51bGxvclVuZGVmaW5lZH0gZnJvbSAnLi9kYXRhLXV0aWxzJztcblxuZXhwb3J0IHtoM0dldFJlc29sdXRpb24sIGgzSXNWYWxpZH07XG5cbmV4cG9ydCB0eXBlIENlbnRyb2lkID0gW251bWJlciwgbnVtYmVyXTtcblxuLy8gZ2V0IHZlcnRpY2VzIHNob3VsZCByZXR1cm4gW2xvbiwgbGF0XVxuZXhwb3J0IGZ1bmN0aW9uIGdldFZlcnRpY2VzKHtpZH06IHtpZDogSDNJbmRleH0pIHtcbiAgLy8gYWx3YXlzIHJldmVyc2UgaXRcbiAgcmV0dXJuIGgzVG9HZW9Cb3VuZGFyeShpZCwgdHJ1ZSk7XG59XG5cbi8vIGdldCBjZW50cm9pZCBzaG91bGQgcmV0dXJuIFtsb24sIGxhdF1cbmV4cG9ydCBmdW5jdGlvbiBnZXRDZW50cm9pZCh7aWR9OiB7aWQ6IEgzSW5kZXh9KTogQ2VudHJvaWQge1xuICAvLyBhbHdheXMgcmV2ZXJzZSBpdCB0byBbbG5nLCBsYXRdXG4gIHJldHVybiBoM1RvR2VvKGlkKS5yZXZlcnNlKCkgYXMgQ2VudHJvaWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpZFRvUG9seWdvbkdlbyhvYmplY3Q/OiB7aWQ6IEgzSW5kZXh9LCBwcm9wZXJ0aWVzPzogYW55KSB7XG4gIGlmICghb2JqZWN0Py5pZCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IHZlcnRpY2VzID0gZ2V0VmVydGljZXMob2JqZWN0KTtcblxuICByZXR1cm4ge1xuICAgIHR5cGU6ICdGZWF0dXJlJyxcbiAgICBnZW9tZXRyeToge1xuICAgICAgY29vcmRpbmF0ZXM6IHByb3BlcnRpZXM/LmlzQ2xvc2VkID8gW3ZlcnRpY2VzXSA6IHZlcnRpY2VzLFxuICAgICAgdHlwZTogcHJvcGVydGllcz8uaXNDbG9zZWQgPyAnUG9seWdvbicgOiAnTGluZVN0cmluZydcbiAgICB9LFxuICAgIHByb3BlcnRpZXNcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IGlzSGV4RmllbGQgPSAoZmllbGQsIGZpZWxkSWR4LCBkYXRhQ29udGFpbmVyKSA9PiB7XG4gIGlmIChmaWVsZC50eXBlICE9PSBBTExfRklFTERfVFlQRVMuc3RyaW5nKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3QgZmlyc3REUCA9IGRhdGFDb250YWluZXIuZmluZChkID0+IG5vdE51bGxvclVuZGVmaW5lZChkLnZhbHVlQXQoZmllbGRJZHgpKSwgdHJ1ZSk7XG4gIHJldHVybiBmaXJzdERQICYmIGgzSXNWYWxpZChmaXJzdERQLnZhbHVlQXQoZmllbGRJZHgpKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRIZXhGaWVsZHMgPSAoZmllbGRzLCBkYXRhQ29udGFpbmVyKSA9PlxuICBmaWVsZHMuZmlsdGVyKChmLCBpKSA9PiBpc0hleEZpZWxkKGYsIGksIGRhdGFDb250YWluZXIpKTtcbiJdfQ==