"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject, _templateObject2;

var StyledBar = _styledComponents["default"].span.attrs({
  className: 'progress-bar__bar'
})(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  background-color: ", ";\n  /* transition: width 200ms; */\n  display: block;\n"])), function (props) {
  return props.barColor || props.theme.progressBarColor;
});

var StyledTrack = _styledComponents["default"].div.attrs({
  className: 'progress-bar'
})(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  background-color: ", ";\n"])), function (props) {
  return props.trackColor || props.theme.progressBarTrackColor;
});

/** @type {React.FunctionComponent<ProgressBarProps>} */
var ProgressBar = function ProgressBar(_ref) {
  var percent = _ref.percent,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? 4 : _ref$height,
      isLoading = _ref.isLoading,
      barColor = _ref.barColor,
      trackColor = _ref.trackColor,
      theme = _ref.theme;
  return /*#__PURE__*/_react["default"].createElement(StyledTrack, {
    trackColor: trackColor,
    theme: theme
  }, /*#__PURE__*/_react["default"].createElement(StyledBar, {
    barColor: barColor,
    style: {
      width: percent,
      height: "".concat(height, "px"),
      opacity: isLoading ? 1 : 0
    }
  }));
};

var _default = ProgressBar;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vcHJvZ3Jlc3MtYmFyLnRzeCJdLCJuYW1lcyI6WyJTdHlsZWRCYXIiLCJzdHlsZWQiLCJzcGFuIiwiYXR0cnMiLCJjbGFzc05hbWUiLCJwcm9wcyIsImJhckNvbG9yIiwidGhlbWUiLCJwcm9ncmVzc0JhckNvbG9yIiwiU3R5bGVkVHJhY2siLCJkaXYiLCJ0cmFja0NvbG9yIiwicHJvZ3Jlc3NCYXJUcmFja0NvbG9yIiwiUHJvZ3Jlc3NCYXIiLCJwZXJjZW50IiwiaGVpZ2h0IiwiaXNMb2FkaW5nIiwid2lkdGgiLCJvcGFjaXR5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUdBOztBQUNBOzs7O0FBUUEsSUFBTUEsU0FBUyxHQUFHQyw2QkFBT0MsSUFBUCxDQUFZQyxLQUFaLENBQWtCO0FBQ2xDQyxFQUFBQSxTQUFTLEVBQUU7QUFEdUIsQ0FBbEIsQ0FBSCx5S0FHTyxVQUFBQyxLQUFLO0FBQUEsU0FBSUEsS0FBSyxDQUFDQyxRQUFOLElBQWtCRCxLQUFLLENBQUNFLEtBQU4sQ0FBWUMsZ0JBQWxDO0FBQUEsQ0FIWixDQUFmOztBQVlBLElBQU1DLFdBQVcsR0FBR1IsNkJBQU9TLEdBQVAsQ0FBV1AsS0FBWCxDQUFpQjtBQUNuQ0MsRUFBQUEsU0FBUyxFQUFFO0FBRHdCLENBQWpCLENBQUgsc0hBR0ssVUFBQUMsS0FBSztBQUFBLFNBQUlBLEtBQUssQ0FBQ00sVUFBTixJQUFvQk4sS0FBSyxDQUFDRSxLQUFOLENBQVlLLHFCQUFwQztBQUFBLENBSFYsQ0FBakI7O0FBZUE7QUFDQSxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYztBQUFBLE1BQ2xCQyxPQURrQixRQUNsQkEsT0FEa0I7QUFBQSx5QkFFbEJDLE1BRmtCO0FBQUEsTUFFbEJBLE1BRmtCLDRCQUVULENBRlM7QUFBQSxNQUdsQkMsU0FIa0IsUUFHbEJBLFNBSGtCO0FBQUEsTUFJbEJWLFFBSmtCLFFBSWxCQSxRQUprQjtBQUFBLE1BS2xCSyxVQUxrQixRQUtsQkEsVUFMa0I7QUFBQSxNQU1sQkosS0FOa0IsUUFNbEJBLEtBTmtCO0FBQUEsc0JBUWxCLGdDQUFDLFdBQUQ7QUFBYSxJQUFBLFVBQVUsRUFBRUksVUFBekI7QUFBcUMsSUFBQSxLQUFLLEVBQUVKO0FBQTVDLGtCQUNFLGdDQUFDLFNBQUQ7QUFDRSxJQUFBLFFBQVEsRUFBRUQsUUFEWjtBQUVFLElBQUEsS0FBSyxFQUFFO0FBQUNXLE1BQUFBLEtBQUssRUFBRUgsT0FBUjtBQUFpQkMsTUFBQUEsTUFBTSxZQUFLQSxNQUFMLE9BQXZCO0FBQXdDRyxNQUFBQSxPQUFPLEVBQUVGLFNBQVMsR0FBRyxDQUFILEdBQU87QUFBakU7QUFGVCxJQURGLENBUmtCO0FBQUEsQ0FBcEI7O2VBZ0JlSCxXIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG4vKiogQHR5cGVkZWYge2ltcG9ydCgnLi9wcm9ncmVzcy1iYXInKS5Qcm9ncmVzc0JhclByb3BzfSBQcm9ncmVzc0JhclByb3BzICovXG5cbmludGVyZmFjZSBTdHlsZWRCYXJQcm9wcyB7XG4gIGJhckNvbG9yPzogc3RyaW5nO1xufVxuXG5jb25zdCBTdHlsZWRCYXIgPSBzdHlsZWQuc3Bhbi5hdHRycyh7XG4gIGNsYXNzTmFtZTogJ3Byb2dyZXNzLWJhcl9fYmFyJ1xufSk8U3R5bGVkQmFyUHJvcHM+YFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+IHByb3BzLmJhckNvbG9yIHx8IHByb3BzLnRoZW1lLnByb2dyZXNzQmFyQ29sb3J9O1xuICAvKiB0cmFuc2l0aW9uOiB3aWR0aCAyMDBtczsgKi9cbiAgZGlzcGxheTogYmxvY2s7XG5gO1xuXG5pbnRlcmZhY2UgU3R5bGVkVHJhY2tQcm9wcyB7XG4gIHRyYWNrQ29sb3I/OiBzdHJpbmc7XG59XG5cbmNvbnN0IFN0eWxlZFRyYWNrID0gc3R5bGVkLmRpdi5hdHRycyh7XG4gIGNsYXNzTmFtZTogJ3Byb2dyZXNzLWJhcidcbn0pPFN0eWxlZFRyYWNrUHJvcHM+YFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRyYWNrQ29sb3IgfHwgcHJvcHMudGhlbWUucHJvZ3Jlc3NCYXJUcmFja0NvbG9yfTtcbmA7XG5cbmV4cG9ydCB0eXBlIFByb2dyZXNzQmFyUHJvcHMgPSB7XG4gIHBlcmNlbnQ6IHN0cmluZztcbiAgaGVpZ2h0PzogbnVtYmVyO1xuICBpc0xvYWRpbmc6IGJvb2xlYW47XG4gIGJhckNvbG9yOiBzdHJpbmc7XG4gIHRyYWNrQ29sb3I/OiBzdHJpbmc7XG4gIHRoZW1lOiBhbnk7XG59O1xuXG4vKiogQHR5cGUge1JlYWN0LkZ1bmN0aW9uQ29tcG9uZW50PFByb2dyZXNzQmFyUHJvcHM+fSAqL1xuY29uc3QgUHJvZ3Jlc3NCYXIgPSAoe1xuICBwZXJjZW50LFxuICBoZWlnaHQgPSA0LFxuICBpc0xvYWRpbmcsXG4gIGJhckNvbG9yLFxuICB0cmFja0NvbG9yLFxuICB0aGVtZVxufTogUHJvZ3Jlc3NCYXJQcm9wcykgPT4gKFxuICA8U3R5bGVkVHJhY2sgdHJhY2tDb2xvcj17dHJhY2tDb2xvcn0gdGhlbWU9e3RoZW1lfT5cbiAgICA8U3R5bGVkQmFyXG4gICAgICBiYXJDb2xvcj17YmFyQ29sb3J9XG4gICAgICBzdHlsZT17e3dpZHRoOiBwZXJjZW50LCBoZWlnaHQ6IGAke2hlaWdodH1weGAsIG9wYWNpdHk6IGlzTG9hZGluZyA/IDEgOiAwfX1cbiAgICAvPlxuICA8L1N0eWxlZFRyYWNrPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgUHJvZ3Jlc3NCYXI7XG4iXX0=