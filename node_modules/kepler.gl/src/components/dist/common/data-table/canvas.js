"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject;

/*
    ScrollSync works by getting a callback about the dom elements scroll amount
    and then using that to pass into how much to scroll all child components,
    it works great!

    Except... Because scrolling is managed by a separate thread, and JavaScript
    is only periodically notified of the updated position, there's some latency
    issues with this.

    We can hack around this by using a niche property of canvas that removes the
    delay in scroll event firing! Easiest way to reproduce: enable "Trace React updates"
    in React DevTools (it works by overlaying a viewport-wide canvas over the document).
  */
var _default = _styledComponents["default"].canvas(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  height: 100%;\n  left: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  width: 100%;\n"])));

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vZGF0YS10YWJsZS9jYW52YXMudHN4Il0sIm5hbWVzIjpbInN0eWxlZCIsImNhbnZhcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFHQTs7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO2VBQ2VBLDZCQUFPQyxNIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbi8qXG4gICAgU2Nyb2xsU3luYyB3b3JrcyBieSBnZXR0aW5nIGEgY2FsbGJhY2sgYWJvdXQgdGhlIGRvbSBlbGVtZW50cyBzY3JvbGwgYW1vdW50XG4gICAgYW5kIHRoZW4gdXNpbmcgdGhhdCB0byBwYXNzIGludG8gaG93IG11Y2ggdG8gc2Nyb2xsIGFsbCBjaGlsZCBjb21wb25lbnRzLFxuICAgIGl0IHdvcmtzIGdyZWF0IVxuXG4gICAgRXhjZXB0Li4uIEJlY2F1c2Ugc2Nyb2xsaW5nIGlzIG1hbmFnZWQgYnkgYSBzZXBhcmF0ZSB0aHJlYWQsIGFuZCBKYXZhU2NyaXB0XG4gICAgaXMgb25seSBwZXJpb2RpY2FsbHkgbm90aWZpZWQgb2YgdGhlIHVwZGF0ZWQgcG9zaXRpb24sIHRoZXJlJ3Mgc29tZSBsYXRlbmN5XG4gICAgaXNzdWVzIHdpdGggdGhpcy5cblxuICAgIFdlIGNhbiBoYWNrIGFyb3VuZCB0aGlzIGJ5IHVzaW5nIGEgbmljaGUgcHJvcGVydHkgb2YgY2FudmFzIHRoYXQgcmVtb3ZlcyB0aGVcbiAgICBkZWxheSBpbiBzY3JvbGwgZXZlbnQgZmlyaW5nISBFYXNpZXN0IHdheSB0byByZXByb2R1Y2U6IGVuYWJsZSBcIlRyYWNlIFJlYWN0IHVwZGF0ZXNcIlxuICAgIGluIFJlYWN0IERldlRvb2xzIChpdCB3b3JrcyBieSBvdmVybGF5aW5nIGEgdmlld3BvcnQtd2lkZSBjYW52YXMgb3ZlciB0aGUgZG9jdW1lbnQpLlxuICAqL1xuZXhwb3J0IGRlZmF1bHQgc3R5bGVkLmNhbnZhc2BcbiAgaGVpZ2h0OiAxMDAlO1xuICBsZWZ0OiAwO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDAlO1xuYDtcbiJdfQ==