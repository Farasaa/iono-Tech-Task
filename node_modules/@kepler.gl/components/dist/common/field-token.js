"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _constants = require("@kepler.gl/constants");

var _templateObject;

function FieldTokenFactory(fieldTypeDisplay, fieldColors) {
  var FieldTag = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n    background-color: rgba(", ", 0.2);\n    border-radius: 2px;\n    border: 1px solid rgb(", ");\n    color: rgb(", ");\n    display: inline-block;\n    font-size: 10px;\n    font-weight: 400;\n    padding: 0 5px;\n    text-align: center;\n    width: ", "px;\n    line-height: ", "px;\n  "])), function (props) {
    return props.color;
  }, function (props) {
    return props.color;
  }, function (props) {
    return props.color;
  }, function (props) {
    return props.theme.fieldTokenWidth;
  }, function (props) {
    return props.theme.fieldTokenHeight;
  });

  var FieldToken = function FieldToken(_ref) {
    var type = _ref.type;
    return /*#__PURE__*/_react["default"].createElement(FieldTag, {
      color: fieldTypeDisplay[type] && fieldTypeDisplay[type].color || fieldColors["default"]
    }, fieldTypeDisplay[type].label);
  };

  return FieldToken;
}

function getFieldTypes() {
  return _constants.FIELD_TYPE_DISPLAY;
}

function getFieldColors() {
  return _constants.FIELD_COLORS;
}

FieldTokenFactory.deps = [getFieldTypes, getFieldColors];
var _default = FieldTokenFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vZmllbGQtdG9rZW4udHN4Il0sIm5hbWVzIjpbIkZpZWxkVG9rZW5GYWN0b3J5IiwiZmllbGRUeXBlRGlzcGxheSIsImZpZWxkQ29sb3JzIiwiRmllbGRUYWciLCJzdHlsZWQiLCJkaXYiLCJwcm9wcyIsImNvbG9yIiwidGhlbWUiLCJmaWVsZFRva2VuV2lkdGgiLCJmaWVsZFRva2VuSGVpZ2h0IiwiRmllbGRUb2tlbiIsInR5cGUiLCJsYWJlbCIsImdldEZpZWxkVHlwZXMiLCJGSUVMRF9UWVBFX0RJU1BMQVkiLCJnZXRGaWVsZENvbG9ycyIsIkZJRUxEX0NPTE9SUyIsImRlcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBR0E7O0FBQ0E7O0FBQ0E7Ozs7QUFNQSxTQUFTQSxpQkFBVCxDQUNFQyxnQkFERixFQUVFQyxXQUZGLEVBRzZCO0FBQzNCLE1BQU1DLFFBQVEsR0FBR0MsNkJBQU9DLEdBQVYsMFhBQ2EsVUFBQUMsS0FBSztBQUFBLFdBQUlBLEtBQUssQ0FBQ0MsS0FBVjtBQUFBLEdBRGxCLEVBR1ksVUFBQUQsS0FBSztBQUFBLFdBQUlBLEtBQUssQ0FBQ0MsS0FBVjtBQUFBLEdBSGpCLEVBSUMsVUFBQUQsS0FBSztBQUFBLFdBQUlBLEtBQUssQ0FBQ0MsS0FBVjtBQUFBLEdBSk4sRUFVSCxVQUFBRCxLQUFLO0FBQUEsV0FBSUEsS0FBSyxDQUFDRSxLQUFOLENBQVlDLGVBQWhCO0FBQUEsR0FWRixFQVdHLFVBQUFILEtBQUs7QUFBQSxXQUFJQSxLQUFLLENBQUNFLEtBQU4sQ0FBWUUsZ0JBQWhCO0FBQUEsR0FYUixDQUFkOztBQWNBLE1BQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhO0FBQUEsUUFBRUMsSUFBRixRQUFFQSxJQUFGO0FBQUEsd0JBQ2pCLGdDQUFDLFFBQUQ7QUFDRSxNQUFBLEtBQUssRUFBR1gsZ0JBQWdCLENBQUNXLElBQUQsQ0FBaEIsSUFBMEJYLGdCQUFnQixDQUFDVyxJQUFELENBQWhCLENBQXVCTCxLQUFsRCxJQUE0REwsV0FBVztBQURoRixPQUdHRCxnQkFBZ0IsQ0FBQ1csSUFBRCxDQUFoQixDQUF1QkMsS0FIMUIsQ0FEaUI7QUFBQSxHQUFuQjs7QUFPQSxTQUFPRixVQUFQO0FBQ0Q7O0FBRUQsU0FBU0csYUFBVCxHQUF5QjtBQUN2QixTQUFPQyw2QkFBUDtBQUNEOztBQUVELFNBQVNDLGNBQVQsR0FBMEI7QUFDeEIsU0FBT0MsdUJBQVA7QUFDRDs7QUFDRGpCLGlCQUFpQixDQUFDa0IsSUFBbEIsR0FBeUIsQ0FBQ0osYUFBRCxFQUFnQkUsY0FBaEIsQ0FBekI7ZUFDZWhCLGlCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IE1JVFxuLy8gQ29weXJpZ2h0IGNvbnRyaWJ1dG9ycyB0byB0aGUga2VwbGVyLmdsIHByb2plY3RcblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHtGSUVMRF9UWVBFX0RJU1BMQVksIEZJRUxEX0NPTE9SU30gZnJvbSAnQGtlcGxlci5nbC9jb25zdGFudHMnO1xuXG5leHBvcnQgdHlwZSBGaWVsZFRva2VuUHJvcHMgPSB7XG4gIHR5cGU6IHN0cmluZztcbn07XG5cbmZ1bmN0aW9uIEZpZWxkVG9rZW5GYWN0b3J5KFxuICBmaWVsZFR5cGVEaXNwbGF5OiBSZXR1cm5UeXBlPHR5cGVvZiBnZXRGaWVsZFR5cGVzPixcbiAgZmllbGRDb2xvcnM6IFJldHVyblR5cGU8dHlwZW9mIGdldEZpZWxkQ29sb3JzPlxuKTogUmVhY3QuRkM8RmllbGRUb2tlblByb3BzPiB7XG4gIGNvbnN0IEZpZWxkVGFnID0gc3R5bGVkLmRpdmBcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCR7cHJvcHMgPT4gcHJvcHMuY29sb3J9LCAwLjIpO1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoJHtwcm9wcyA9PiBwcm9wcy5jb2xvcn0pO1xuICAgIGNvbG9yOiByZ2IoJHtwcm9wcyA9PiBwcm9wcy5jb2xvcn0pO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBwYWRkaW5nOiAwIDVweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuZmllbGRUb2tlbldpZHRofXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmZpZWxkVG9rZW5IZWlnaHR9cHg7XG4gIGA7XG5cbiAgY29uc3QgRmllbGRUb2tlbiA9ICh7dHlwZX06IEZpZWxkVG9rZW5Qcm9wcykgPT4gKFxuICAgIDxGaWVsZFRhZ1xuICAgICAgY29sb3I9eyhmaWVsZFR5cGVEaXNwbGF5W3R5cGVdICYmIGZpZWxkVHlwZURpc3BsYXlbdHlwZV0uY29sb3IpIHx8IGZpZWxkQ29sb3JzLmRlZmF1bHR9XG4gICAgPlxuICAgICAge2ZpZWxkVHlwZURpc3BsYXlbdHlwZV0ubGFiZWx9XG4gICAgPC9GaWVsZFRhZz5cbiAgKTtcbiAgcmV0dXJuIEZpZWxkVG9rZW47XG59XG5cbmZ1bmN0aW9uIGdldEZpZWxkVHlwZXMoKSB7XG4gIHJldHVybiBGSUVMRF9UWVBFX0RJU1BMQVk7XG59XG5cbmZ1bmN0aW9uIGdldEZpZWxkQ29sb3JzKCkge1xuICByZXR1cm4gRklFTERfQ09MT1JTO1xufVxuRmllbGRUb2tlbkZhY3RvcnkuZGVwcyA9IFtnZXRGaWVsZFR5cGVzLCBnZXRGaWVsZENvbG9yc107XG5leHBvcnQgZGVmYXVsdCBGaWVsZFRva2VuRmFjdG9yeTtcbiJdfQ==