"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTimelineFromFilter = exports.getTimelineFromAnimationConfig = exports.SAMPLE_TIMELINE = exports.TIMELINE_MODES = void 0;

var _utils = require("./utils");

// SPDX-License-Identifier: MIT
// Copyright contributors to the kepler.gl project
var TIMELINE_MODES = {
  inner: 'inner',
  outer: 'outer'
};
exports.TIMELINE_MODES = TIMELINE_MODES;
var SAMPLE_TIMELINE = {
  // value: [15], // represent 15% of the all width
  value: [5, 15],
  // represent start at 5% and ends at 15%
  domain: [1, 100],
  // represent the total domain
  speed: 1,
  enableInteraction: false,
  // can use interact with this timeline
  isAnimating: false,
  step: null,
  // @todo: giuseppe coverType: 'inner' | 'outer'
  mode: TIMELINE_MODES.inner //  ....

};
exports.SAMPLE_TIMELINE = SAMPLE_TIMELINE;

var getTimelineFromAnimationConfig = function getTimelineFromAnimationConfig(animationConfig) {
  var currentTime = animationConfig.currentTime,
      domain = animationConfig.domain,
      speed = animationConfig.speed,
      isAnimating = animationConfig.isAnimating,
      timeSteps = animationConfig.timeSteps,
      defaultTimeFormat = animationConfig.defaultTimeFormat,
      timeFormat = animationConfig.timeFormat,
      timezone = animationConfig.timezone;
  return {
    // @ts-expect-error
    value: (0, _utils.toArray)(currentTime),
    enableInteraction: true,
    // @ts-expect-error
    domain: domain,
    speed: speed,
    isAnimating: isAnimating || false,
    timeSteps: timeSteps,
    defaultTimeFormat: defaultTimeFormat,
    timeFormat: timeFormat,
    timezone: timezone,
    marks: null
  };
};

exports.getTimelineFromAnimationConfig = getTimelineFromAnimationConfig;

var getTimelineFromFilter = function getTimelineFromFilter(filter) {
  var value = filter.value,
      domain = filter.domain,
      speed = filter.speed,
      isAnimating = filter.isAnimating,
      step = filter.step,
      timeSteps = filter.timeSteps,
      defaultTimeFormat = filter.defaultTimeFormat,
      timeFormat = filter.timeFormat,
      timezone = filter.timezone,
      animationWindow = filter.animationWindow;
  return {
    value: value,
    enableInteraction: true,
    domain: domain,
    speed: speed,
    isAnimating: isAnimating,
    step: step,
    timeSteps: timeSteps,
    defaultTimeFormat: defaultTimeFormat,
    timeFormat: timeFormat,
    timezone: timezone,
    animationWindow: animationWindow,
    marks: null
  };
};

exports.getTimelineFromFilter = getTimelineFromFilter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy90aW1lLnRzIl0sIm5hbWVzIjpbIlRJTUVMSU5FX01PREVTIiwiaW5uZXIiLCJvdXRlciIsIlNBTVBMRV9USU1FTElORSIsInZhbHVlIiwiZG9tYWluIiwic3BlZWQiLCJlbmFibGVJbnRlcmFjdGlvbiIsImlzQW5pbWF0aW5nIiwic3RlcCIsIm1vZGUiLCJnZXRUaW1lbGluZUZyb21BbmltYXRpb25Db25maWciLCJhbmltYXRpb25Db25maWciLCJjdXJyZW50VGltZSIsInRpbWVTdGVwcyIsImRlZmF1bHRUaW1lRm9ybWF0IiwidGltZUZvcm1hdCIsInRpbWV6b25lIiwibWFya3MiLCJnZXRUaW1lbGluZUZyb21GaWx0ZXIiLCJmaWx0ZXIiLCJhbmltYXRpb25XaW5kb3ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFLQTs7QUFMQTtBQUNBO0FBTU8sSUFBTUEsY0FBYyxHQUFHO0FBQzVCQyxFQUFBQSxLQUFLLEVBQUUsT0FEcUI7QUFFNUJDLEVBQUFBLEtBQUssRUFBRTtBQUZxQixDQUF2Qjs7QUFLQSxJQUFNQyxlQUFlLEdBQUc7QUFDN0I7QUFDQUMsRUFBQUEsS0FBSyxFQUFFLENBQUMsQ0FBRCxFQUFJLEVBQUosQ0FGc0I7QUFFYjtBQUNoQkMsRUFBQUEsTUFBTSxFQUFFLENBQUMsQ0FBRCxFQUFJLEdBQUosQ0FIcUI7QUFHWDtBQUNsQkMsRUFBQUEsS0FBSyxFQUFFLENBSnNCO0FBSzdCQyxFQUFBQSxpQkFBaUIsRUFBRSxLQUxVO0FBS0g7QUFDMUJDLEVBQUFBLFdBQVcsRUFBRSxLQU5nQjtBQU83QkMsRUFBQUEsSUFBSSxFQUFFLElBUHVCO0FBUTdCO0FBQ0FDLEVBQUFBLElBQUksRUFBRVYsY0FBYyxDQUFDQyxLQVRRLENBVTdCOztBQVY2QixDQUF4Qjs7O0FBYUEsSUFBTVUsOEJBQThCLEdBQUcsU0FBakNBLDhCQUFpQyxDQUFDQyxlQUFELEVBQWdEO0FBQUEsTUFFMUZDLFdBRjBGLEdBVXhGRCxlQVZ3RixDQUUxRkMsV0FGMEY7QUFBQSxNQUcxRlIsTUFIMEYsR0FVeEZPLGVBVndGLENBRzFGUCxNQUgwRjtBQUFBLE1BSTFGQyxLQUowRixHQVV4Rk0sZUFWd0YsQ0FJMUZOLEtBSjBGO0FBQUEsTUFLMUZFLFdBTDBGLEdBVXhGSSxlQVZ3RixDQUsxRkosV0FMMEY7QUFBQSxNQU0xRk0sU0FOMEYsR0FVeEZGLGVBVndGLENBTTFGRSxTQU4wRjtBQUFBLE1BTzFGQyxpQkFQMEYsR0FVeEZILGVBVndGLENBTzFGRyxpQkFQMEY7QUFBQSxNQVExRkMsVUFSMEYsR0FVeEZKLGVBVndGLENBUTFGSSxVQVIwRjtBQUFBLE1BUzFGQyxRQVQwRixHQVV4RkwsZUFWd0YsQ0FTMUZLLFFBVDBGO0FBWTVGLFNBQU87QUFDTDtBQUNBYixJQUFBQSxLQUFLLEVBQUUsb0JBQVFTLFdBQVIsQ0FGRjtBQUdMTixJQUFBQSxpQkFBaUIsRUFBRSxJQUhkO0FBSUw7QUFDQUYsSUFBQUEsTUFBTSxFQUFOQSxNQUxLO0FBTUxDLElBQUFBLEtBQUssRUFBTEEsS0FOSztBQU9MRSxJQUFBQSxXQUFXLEVBQUVBLFdBQVcsSUFBSSxLQVB2QjtBQVFMTSxJQUFBQSxTQUFTLEVBQVRBLFNBUks7QUFTTEMsSUFBQUEsaUJBQWlCLEVBQWpCQSxpQkFUSztBQVVMQyxJQUFBQSxVQUFVLEVBQVZBLFVBVks7QUFXTEMsSUFBQUEsUUFBUSxFQUFSQSxRQVhLO0FBWUxDLElBQUFBLEtBQUssRUFBRTtBQVpGLEdBQVA7QUFjRCxDQTFCTTs7OztBQTRCQSxJQUFNQyxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXdCLENBQUNDLE1BQUQsRUFBdUM7QUFBQSxNQUV4RWhCLEtBRndFLEdBYXRFZ0IsTUFic0UsQ0FFeEVoQixLQUZ3RTtBQUFBLE1BR3hFQyxNQUh3RSxHQWF0RWUsTUFic0UsQ0FHeEVmLE1BSHdFO0FBQUEsTUFJeEVDLEtBSndFLEdBYXRFYyxNQWJzRSxDQUl4RWQsS0FKd0U7QUFBQSxNQUt4RUUsV0FMd0UsR0FhdEVZLE1BYnNFLENBS3hFWixXQUx3RTtBQUFBLE1BTXhFQyxJQU53RSxHQWF0RVcsTUFic0UsQ0FNeEVYLElBTndFO0FBQUEsTUFReEVLLFNBUndFLEdBYXRFTSxNQWJzRSxDQVF4RU4sU0FSd0U7QUFBQSxNQVN4RUMsaUJBVHdFLEdBYXRFSyxNQWJzRSxDQVN4RUwsaUJBVHdFO0FBQUEsTUFVeEVDLFVBVndFLEdBYXRFSSxNQWJzRSxDQVV4RUosVUFWd0U7QUFBQSxNQVd4RUMsUUFYd0UsR0FhdEVHLE1BYnNFLENBV3hFSCxRQVh3RTtBQUFBLE1BWXhFSSxlQVp3RSxHQWF0RUQsTUFic0UsQ0FZeEVDLGVBWndFO0FBZTFFLFNBQU87QUFDTGpCLElBQUFBLEtBQUssRUFBTEEsS0FESztBQUVMRyxJQUFBQSxpQkFBaUIsRUFBRSxJQUZkO0FBR0xGLElBQUFBLE1BQU0sRUFBTkEsTUFISztBQUlMQyxJQUFBQSxLQUFLLEVBQUxBLEtBSks7QUFLTEUsSUFBQUEsV0FBVyxFQUFYQSxXQUxLO0FBTUxDLElBQUFBLElBQUksRUFBSkEsSUFOSztBQU9MSyxJQUFBQSxTQUFTLEVBQVRBLFNBUEs7QUFRTEMsSUFBQUEsaUJBQWlCLEVBQWpCQSxpQkFSSztBQVNMQyxJQUFBQSxVQUFVLEVBQVZBLFVBVEs7QUFVTEMsSUFBQUEsUUFBUSxFQUFSQSxRQVZLO0FBV0xJLElBQUFBLGVBQWUsRUFBZkEsZUFYSztBQVlMSCxJQUFBQSxLQUFLLEVBQUU7QUFaRixHQUFQO0FBY0QsQ0E3Qk0iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTUlUXG4vLyBDb3B5cmlnaHQgY29udHJpYnV0b3JzIHRvIHRoZSBrZXBsZXIuZ2wgcHJvamVjdFxuXG5pbXBvcnQge0FuaW1hdGlvbkNvbmZpZywgVGltZWxpbmUsIFRpbWVSYW5nZUZpbHRlcn0gZnJvbSAnQGtlcGxlci5nbC90eXBlcyc7XG5cbmltcG9ydCB7dG9BcnJheX0gZnJvbSAnLi91dGlscyc7XG5cbmV4cG9ydCBjb25zdCBUSU1FTElORV9NT0RFUyA9IHtcbiAgaW5uZXI6ICdpbm5lcicsXG4gIG91dGVyOiAnb3V0ZXInXG59O1xuXG5leHBvcnQgY29uc3QgU0FNUExFX1RJTUVMSU5FID0ge1xuICAvLyB2YWx1ZTogWzE1XSwgLy8gcmVwcmVzZW50IDE1JSBvZiB0aGUgYWxsIHdpZHRoXG4gIHZhbHVlOiBbNSwgMTVdLCAvLyByZXByZXNlbnQgc3RhcnQgYXQgNSUgYW5kIGVuZHMgYXQgMTUlXG4gIGRvbWFpbjogWzEsIDEwMF0sIC8vIHJlcHJlc2VudCB0aGUgdG90YWwgZG9tYWluXG4gIHNwZWVkOiAxLFxuICBlbmFibGVJbnRlcmFjdGlvbjogZmFsc2UsIC8vIGNhbiB1c2UgaW50ZXJhY3Qgd2l0aCB0aGlzIHRpbWVsaW5lXG4gIGlzQW5pbWF0aW5nOiBmYWxzZSxcbiAgc3RlcDogbnVsbCxcbiAgLy8gQHRvZG86IGdpdXNlcHBlIGNvdmVyVHlwZTogJ2lubmVyJyB8ICdvdXRlcidcbiAgbW9kZTogVElNRUxJTkVfTU9ERVMuaW5uZXJcbiAgLy8gIC4uLi5cbn07XG5cbmV4cG9ydCBjb25zdCBnZXRUaW1lbGluZUZyb21BbmltYXRpb25Db25maWcgPSAoYW5pbWF0aW9uQ29uZmlnOiBBbmltYXRpb25Db25maWcpOiBUaW1lbGluZSA9PiB7XG4gIGNvbnN0IHtcbiAgICBjdXJyZW50VGltZSxcbiAgICBkb21haW4sXG4gICAgc3BlZWQsXG4gICAgaXNBbmltYXRpbmcsXG4gICAgdGltZVN0ZXBzLFxuICAgIGRlZmF1bHRUaW1lRm9ybWF0LFxuICAgIHRpbWVGb3JtYXQsXG4gICAgdGltZXpvbmVcbiAgfSA9IGFuaW1hdGlvbkNvbmZpZztcblxuICByZXR1cm4ge1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICB2YWx1ZTogdG9BcnJheShjdXJyZW50VGltZSksXG4gICAgZW5hYmxlSW50ZXJhY3Rpb246IHRydWUsXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgIGRvbWFpbixcbiAgICBzcGVlZCxcbiAgICBpc0FuaW1hdGluZzogaXNBbmltYXRpbmcgfHwgZmFsc2UsXG4gICAgdGltZVN0ZXBzLFxuICAgIGRlZmF1bHRUaW1lRm9ybWF0LFxuICAgIHRpbWVGb3JtYXQsXG4gICAgdGltZXpvbmUsXG4gICAgbWFya3M6IG51bGxcbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRUaW1lbGluZUZyb21GaWx0ZXIgPSAoZmlsdGVyOiBUaW1lUmFuZ2VGaWx0ZXIpOiBUaW1lbGluZSA9PiB7XG4gIGNvbnN0IHtcbiAgICB2YWx1ZSxcbiAgICBkb21haW4sXG4gICAgc3BlZWQsXG4gICAgaXNBbmltYXRpbmcsXG4gICAgc3RlcCxcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gICAgdGltZVN0ZXBzLFxuICAgIGRlZmF1bHRUaW1lRm9ybWF0LFxuICAgIHRpbWVGb3JtYXQsXG4gICAgdGltZXpvbmUsXG4gICAgYW5pbWF0aW9uV2luZG93XG4gIH0gPSBmaWx0ZXI7XG5cbiAgcmV0dXJuIHtcbiAgICB2YWx1ZSxcbiAgICBlbmFibGVJbnRlcmFjdGlvbjogdHJ1ZSxcbiAgICBkb21haW4sXG4gICAgc3BlZWQsXG4gICAgaXNBbmltYXRpbmcsXG4gICAgc3RlcCxcbiAgICB0aW1lU3RlcHMsXG4gICAgZGVmYXVsdFRpbWVGb3JtYXQsXG4gICAgdGltZUZvcm1hdCxcbiAgICB0aW1lem9uZSxcbiAgICBhbmltYXRpb25XaW5kb3csXG4gICAgbWFya3M6IG51bGxcbiAgfTtcbn07XG4iXX0=