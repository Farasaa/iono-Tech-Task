{"version":3,"file":"tar.js","names":["blockSize","recordSize","Tar","recordsPerBlock","written","out","utils","clean","blocks","length","save","bind","clear","append","filepath","input","opts","checksum","stringToUint8","constructor","Uint8Array","prototype","errorInput","toString","match","errorMessage","mode","parseInt","mtime","Math","floor","Number","Date","uid","gid","data","fileName","fileMode","pad","fileSize","type","ustar","owner","group","Object","keys","forEach","key","i","value","charCodeAt","headerArr","header","format","headerLength","ceil","inputLength","push","buffers","chunks","max","pow","chunk","b","c","buffer","set","Blob"],"sources":["../../../../src/encoders/tar/tar.js"],"sourcesContent":["// Copyright (c) 2021 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as utils from './utils';\nimport * as header from './header';\n\nlet blockSize;\nconst recordSize = 512;\n\nclass Tar {\n  /** @type {{ header: any; input: string | Uint8Array; headerLength: number; inputLength: number; }[]} */\n  blocks;\n  /**\n   * @param {number} [recordsPerBlock]\n   */\n  constructor(recordsPerBlock) {\n    this.written = 0;\n    blockSize = (recordsPerBlock || 20) * recordSize;\n    this.out = utils.clean(blockSize);\n    this.blocks = [];\n    this.length = 0;\n    this.save = this.save.bind(this);\n    this.clear = this.clear.bind(this);\n    this.append = this.append.bind(this);\n  }\n\n  /**\n   * @param {string} filepath\n   * @param {string | Uint8Array} input\n   * @param {{ mode?: any; mtime?: any; uid?: any; gid?: any; owner?: any; group?: any; }} [opts]\n   */\n  append(filepath, input, opts) {\n    let checksum;\n\n    if (typeof input === 'string') {\n      input = utils.stringToUint8(input);\n    } else if (input.constructor !== Uint8Array.prototype.constructor) {\n      const errorInput = input.constructor\n        .toString()\n        .match(/function\\s*([$A-Za-z_][0-9A-Za-z_]*)\\s*\\(/)[1];\n      const errorMessage = `Invalid input type. You gave me: ${errorInput}`;\n      throw errorMessage;\n    }\n\n    opts = opts || {};\n\n    const mode = opts.mode || parseInt('777', 8) & 0xfff;\n    const mtime = opts.mtime || Math.floor(Number(new Date()) / 1000);\n    const uid = opts.uid || 0;\n    const gid = opts.gid || 0;\n\n    const data = {\n      fileName: filepath,\n      fileMode: utils.pad(mode, 7),\n      uid: utils.pad(uid, 7),\n      gid: utils.pad(gid, 7),\n      fileSize: utils.pad(input.length, 11),\n      mtime: utils.pad(mtime, 11),\n      checksum: '        ',\n      // 0 = just a file\n      type: '0',\n      ustar: 'ustar  ',\n      owner: opts.owner || '',\n      group: opts.group || ''\n    };\n\n    // calculate the checksum\n    checksum = 0;\n    Object.keys(data).forEach(key => {\n      let i;\n      const value = data[key];\n      let length;\n\n      for (i = 0, length = value.length; i < length; i += 1) {\n        checksum += value.charCodeAt(i);\n      }\n    });\n\n    data.checksum = `${utils.pad(checksum, 6)}\\u0000 `;\n\n    const headerArr = header.format(data);\n\n    const headerLength = Math.ceil(headerArr.length / recordSize) * recordSize;\n    const inputLength = Math.ceil(input.length / recordSize) * recordSize;\n\n    this.blocks.push({\n      header: headerArr,\n      input,\n      headerLength,\n      inputLength\n    });\n  }\n\n  save() {\n    const buffers = [];\n    const chunks = [];\n    let length = 0;\n    const max = Math.pow(2, 20);\n\n    let chunk = [];\n    this.blocks.forEach(b => {\n      if (length + b.headerLength + b.inputLength > max) {\n        chunks.push({blocks: chunk, length});\n        chunk = [];\n        length = 0;\n      }\n      chunk.push(b);\n      length += b.headerLength + b.inputLength;\n    });\n    chunks.push({blocks: chunk, length});\n\n    chunks.forEach(c => {\n      const buffer = new Uint8Array(c.length);\n      let written = 0;\n      c.blocks.forEach(b => {\n        buffer.set(b.header, written);\n        written += b.headerLength;\n        buffer.set(b.input, written);\n        written += b.inputLength;\n      });\n      buffers.push(buffer);\n    });\n\n    buffers.push(new Uint8Array(2 * recordSize));\n\n    return new Blob(buffers, {type: 'octet/stream'});\n  }\n\n  clear() {\n    this.written = 0;\n    this.out = utils.clean(blockSize);\n  }\n}\n\nexport default Tar;\n"],"mappings":"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"}