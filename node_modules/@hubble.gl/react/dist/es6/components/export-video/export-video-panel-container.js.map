{"version":3,"sources":["../../../../src/components/export-video/export-video-panel-container.js"],"names":["React","Component","easing","DeckAdapter","DeckScene","CameraKeyframes","WebMEncoder","JPEGSequenceEncoder","PNGSequenceEncoder","PreviewEncoder","GifEncoder","ExportVideoPanel","parseSetCameraType","DEFAULT_FILENAME","getResolutionSetting","ENCODERS","gif","webm","jpeg","png","ExportVideoPanelContainer","constructor","props","setMediaType","bind","setCameraPreset","setFileName","setResolution","setViewState","getCameraKeyframes","getDeckScene","onPreviewVideo","onRenderVideo","setDuration","initialState","mapData","mapState","glContext","state","mediaType","cameraPreset","fileName","resolution","durationMs","viewState","adapter","getFileName","getCanvasSize","getEncoderSettings","width","height","framerate","quality","sampleInterval","filename","getEncoder","prevCamera","undefined","longitude","latitude","zoom","pitch","bearing","timings","keyframes","easings","easeInOut","animationLoop","camera","currentCamera","timeline","attachAnimation","lengthMs","setStateAndNotify","update","onSettingsChange","setState","vs","encoderSettings","onStop","forceUpdate","render","Encoder","scene","exportVideoWidth","handleClose","header","settingsData","defaultProps"],"mappings":"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","sourcesContent":["// Copyright (c) 2020 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {Component} from 'react';\nimport {easing} from 'popmotion';\nimport {\n  DeckAdapter,\n  DeckScene,\n  CameraKeyframes,\n  WebMEncoder,\n  JPEGSequenceEncoder,\n  PNGSequenceEncoder,\n  PreviewEncoder,\n  GifEncoder\n} from '@hubble.gl/core';\n\nimport ExportVideoPanel from './export-video-panel';\nimport {parseSetCameraType} from './utils';\nimport {DEFAULT_FILENAME, getResolutionSetting} from './constants';\n\n// import {DEFAULT_TIME_FORMAT} from 'kepler.gl';\n// import moment from 'moment';\n\n// function setFileNameDeckAdapter(name) {\n//   encoderSettings.filename = `${name} ${moment()\n//     .format(DEFAULT_TIME_FORMAT)\n//     .toString()}`;\n// }\n\nconst ENCODERS = {\n  gif: GifEncoder,\n  webm: WebMEncoder,\n  jpeg: JPEGSequenceEncoder,\n  png: PNGSequenceEncoder\n};\n\nexport class ExportVideoPanelContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setMediaType = this.setMediaType.bind(this);\n    this.setCameraPreset = this.setCameraPreset.bind(this);\n    this.setFileName = this.setFileName.bind(this);\n    this.setResolution = this.setResolution.bind(this);\n    this.setViewState = this.setViewState.bind(this);\n    this.getCameraKeyframes = this.getCameraKeyframes.bind(this);\n    this.getDeckScene = this.getDeckScene.bind(this);\n    this.onPreviewVideo = this.onPreviewVideo.bind(this);\n    this.onRenderVideo = this.onRenderVideo.bind(this);\n    this.setDuration = this.setDuration.bind(this);\n    this.setViewState = this.setViewState.bind(this);\n\n    const {\n      initialState,\n      mapData: {mapState},\n      glContext\n    } = props;\n\n    this.state = {\n      mediaType: 'gif',\n      cameraPreset: 'Orbit (90º)',\n      fileName: '',\n      resolution: '1280x720',\n      durationMs: 1000, // TODO change to 5000 later. 1000 for dev testing\n      viewState: mapState,\n      adapter: new DeckAdapter(this.getDeckScene, glContext),\n      ...(initialState || {})\n    };\n  }\n\n  getFileName() {\n    const {fileName} = this.state;\n    if (fileName === '') return DEFAULT_FILENAME;\n    return fileName;\n  }\n\n  getCanvasSize() {\n    const {resolution} = this.state;\n    return getResolutionSetting(resolution);\n  }\n\n  getEncoderSettings() {\n    const fileName = this.getFileName();\n    const {width, height} = this.getCanvasSize();\n\n    return {\n      framerate: 30,\n      webm: {\n        quality: 0.8\n      },\n      jpeg: {\n        quality: 0.8\n      },\n      gif: {\n        sampleInterval: 1000,\n        width,\n        height\n      },\n      filename: fileName\n    };\n  }\n\n  getEncoder() {\n    const {mediaType} = this.state;\n    return ENCODERS[mediaType];\n  }\n\n  getCameraKeyframes(prevCamera = undefined) {\n    const {viewState, cameraPreset, durationMs} = this.state;\n    const {longitude, latitude, zoom, pitch, bearing} = viewState;\n\n    return new CameraKeyframes({\n      timings: [0, durationMs],\n      keyframes: [\n        {\n          longitude,\n          latitude,\n          zoom,\n          pitch,\n          bearing\n        },\n        parseSetCameraType(cameraPreset, viewState)\n      ],\n      easings: [easing.easeInOut]\n    });\n  }\n\n  getDeckScene(animationLoop) {\n    // PSEUDO BRAINSTORM\n    // only runs once and permanently sets things like canvas resolution + duration\n    const {durationMs} = this.state;\n    const {width, height} = this.getCanvasSize();\n\n    const keyframes = {\n      camera: this.getCameraKeyframes()\n    };\n    const currentCamera = animationLoop.timeline.attachAnimation(keyframes.camera);\n\n    // TODO this scales canvas resolution but is only set once. Figure out how to update\n    // TODO this needs to update durationMs\n    return new DeckScene({\n      animationLoop,\n      keyframes,\n      lengthMs: durationMs,\n      width,\n      height,\n      currentCamera\n    });\n  }\n\n  setStateAndNotify(update) {\n    const {\n      props: {onSettingsChange},\n      state\n    } = this;\n    this.setState({...state, ...update});\n\n    if (onSettingsChange) {\n      const {mediaType, cameraPreset, fileName, resolution, durationMs} = state;\n      onSettingsChange({\n        mediaType,\n        cameraPreset,\n        fileName,\n        resolution,\n        durationMs,\n        ...update\n      });\n    }\n  }\n\n  setMediaType(mediaType) {\n    this.setStateAndNotify({mediaType});\n  }\n\n  setCameraPreset(cameraPreset) {\n    this.setStateAndNotify({cameraPreset});\n  }\n\n  setFileName(fileName) {\n    this.setStateAndNotify({fileName});\n  }\n\n  setResolution(resolution) {\n    this.setStateAndNotify({resolution});\n  }\n\n  setViewState(vs) {\n    this.setState({viewState: vs.viewState});\n  }\n\n  onPreviewVideo() {\n    const {adapter} = this.state;\n    const encoderSettings = this.getEncoderSettings();\n    const onStop = () => {\n      this.forceUpdate();\n    };\n    adapter.render(PreviewEncoder, encoderSettings, onStop, this.getCameraKeyframes);\n  }\n\n  onRenderVideo() {\n    const {adapter} = this.state;\n    const Encoder = this.getEncoder();\n    const encoderSettings = this.getEncoderSettings();\n    const onStop = () => {};\n\n    adapter.render(Encoder, encoderSettings, onStop, this.getCameraKeyframes);\n  }\n\n  setDuration(durationMs) {\n    const {adapter} = this.state;\n    adapter.scene.lengthMs = durationMs;\n    // function passed down to Slider class in ExportVideoPanelSettings\n    this.setStateAndNotify({durationMs});\n  }\n\n  render() {\n    const {exportVideoWidth, handleClose, mapData, header} = this.props;\n    const {\n      adapter,\n      durationMs,\n      mediaType,\n      cameraPreset,\n      fileName,\n      resolution,\n      viewState\n    } = this.state;\n\n    const settingsData = {mediaType, cameraPreset, fileName, resolution};\n\n    const encoderSettings = this.getEncoderSettings();\n    const {width, height} = this.getCanvasSize();\n\n    return (\n      <ExportVideoPanel\n        // UI Props\n        exportVideoWidth={exportVideoWidth}\n        handleClose={handleClose}\n        header={header}\n        // Map Props\n        mapData={mapData}\n        viewState={viewState}\n        setViewState={this.setViewState}\n        // Settings Props\n        settingsData={settingsData}\n        setMediaType={this.setMediaType}\n        setCameraPreset={this.setCameraPreset}\n        setFileName={this.setFileName}\n        setResolution={this.setResolution}\n        // Hubble Props\n        adapter={adapter}\n        handlePreviewVideo={this.onPreviewVideo}\n        handleRenderVideo={this.onRenderVideo}\n        durationMs={durationMs}\n        setDuration={this.setDuration}\n        frameRate={encoderSettings.framerate}\n        resolution={[width, height]}\n        mediaType={mediaType}\n      />\n    );\n  }\n}\n\nExportVideoPanelContainer.defaultProps = {\n  exportVideoWidth: 540,\n  header: true,\n  glContext: undefined\n};\n"],"file":"export-video-panel-container.js"}